// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

class _$GDateTime extends GDateTime {
  @override
  final String value;

  factory _$GDateTime([void Function(GDateTimeBuilder)? updates]) =>
      (new GDateTimeBuilder()..update(updates))._build();

  _$GDateTime._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDateTime', 'value');
  }

  @override
  GDateTime rebuild(void Function(GDateTimeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateTimeBuilder toBuilder() => new GDateTimeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateTime && value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
      r'GDateTime',
    )..add('value', value)).toString();
  }
}

class GDateTimeBuilder implements Builder<GDateTime, GDateTimeBuilder> {
  _$GDateTime? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDateTimeBuilder();

  GDateTimeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateTime other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDateTime;
  }

  @override
  void update(void Function(GDateTimeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDateTime build() => _build();

  _$GDateTime _build() {
    final _$result =
        _$v ??
        new _$GDateTime._(
          value: BuiltValueNullFieldError.checkNotNull(
            value,
            r'GDateTime',
            'value',
          ),
        );
    replace(_$result);
    return _$result;
  }
}

class _$GNaiveDateTime extends GNaiveDateTime {
  @override
  final String value;

  factory _$GNaiveDateTime([void Function(GNaiveDateTimeBuilder)? updates]) =>
      (new GNaiveDateTimeBuilder()..update(updates))._build();

  _$GNaiveDateTime._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GNaiveDateTime', 'value');
  }

  @override
  GNaiveDateTime rebuild(void Function(GNaiveDateTimeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNaiveDateTimeBuilder toBuilder() =>
      new GNaiveDateTimeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNaiveDateTime && value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
      r'GNaiveDateTime',
    )..add('value', value)).toString();
  }
}

class GNaiveDateTimeBuilder
    implements Builder<GNaiveDateTime, GNaiveDateTimeBuilder> {
  _$GNaiveDateTime? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GNaiveDateTimeBuilder();

  GNaiveDateTimeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNaiveDateTime other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNaiveDateTime;
  }

  @override
  void update(void Function(GNaiveDateTimeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNaiveDateTime build() => _build();

  _$GNaiveDateTime _build() {
    final _$result =
        _$v ??
        new _$GNaiveDateTime._(
          value: BuiltValueNullFieldError.checkNotNull(
            value,
            r'GNaiveDateTime',
            'value',
          ),
        );
    replace(_$result);
    return _$result;
  }
}

class _$GUUID extends GUUID {
  @override
  final String value;

  factory _$GUUID([void Function(GUUIDBuilder)? updates]) =>
      (new GUUIDBuilder()..update(updates))._build();

  _$GUUID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUUID', 'value');
  }

  @override
  GUUID rebuild(void Function(GUUIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUUIDBuilder toBuilder() => new GUUIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUUID && value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
      r'GUUID',
    )..add('value', value)).toString();
  }
}

class GUUIDBuilder implements Builder<GUUID, GUUIDBuilder> {
  _$GUUID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUUIDBuilder();

  GUUIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUUID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUUID;
  }

  @override
  void update(void Function(GUUIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUUID build() => _build();

  _$GUUID _build() {
    final _$result =
        _$v ??
        new _$GUUID._(
          value: BuiltValueNullFieldError.checkNotNull(
            value,
            r'GUUID',
            'value',
          ),
        );
    replace(_$result);
    return _$result;
  }
}

class _$GTimezone extends GTimezone {
  @override
  final String value;

  factory _$GTimezone([void Function(GTimezoneBuilder)? updates]) =>
      (new GTimezoneBuilder()..update(updates))._build();

  _$GTimezone._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GTimezone', 'value');
  }

  @override
  GTimezone rebuild(void Function(GTimezoneBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimezoneBuilder toBuilder() => new GTimezoneBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimezone && value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
      r'GTimezone',
    )..add('value', value)).toString();
  }
}

class GTimezoneBuilder implements Builder<GTimezone, GTimezoneBuilder> {
  _$GTimezone? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GTimezoneBuilder();

  GTimezoneBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimezone other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimezone;
  }

  @override
  void update(void Function(GTimezoneBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimezone build() => _build();

  _$GTimezone _build() {
    final _$result =
        _$v ??
        new _$GTimezone._(
          value: BuiltValueNullFieldError.checkNotNull(
            value,
            r'GTimezone',
            'value',
          ),
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPoint extends GPoint {
  @override
  final String value;

  factory _$GPoint([void Function(GPointBuilder)? updates]) =>
      (new GPointBuilder()..update(updates))._build();

  _$GPoint._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GPoint', 'value');
  }

  @override
  GPoint rebuild(void Function(GPointBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPointBuilder toBuilder() => new GPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPoint && value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
      r'GPoint',
    )..add('value', value)).toString();
  }
}

class GPointBuilder implements Builder<GPoint, GPointBuilder> {
  _$GPoint? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPointBuilder();

  GPointBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPoint other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPoint;
  }

  @override
  void update(void Function(GPointBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPoint build() => _build();

  _$GPoint _build() {
    final _$result =
        _$v ??
        new _$GPoint._(
          value: BuiltValueNullFieldError.checkNotNull(
            value,
            r'GPoint',
            'value',
          ),
        );
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
