// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GPersonBasicInfoData> _$gPersonBasicInfoDataSerializer =
    new _$GPersonBasicInfoDataSerializer();
Serializer<GPersonBasicInfoData_avatar> _$gPersonBasicInfoDataAvatarSerializer =
    new _$GPersonBasicInfoData_avatarSerializer();
Serializer<GPersonBasicInfoData_banner> _$gPersonBasicInfoDataBannerSerializer =
    new _$GPersonBasicInfoData_bannerSerializer();
Serializer<GPersonWithStatsData> _$gPersonWithStatsDataSerializer =
    new _$GPersonWithStatsDataSerializer();
Serializer<GPersonWithStatsData_avatar> _$gPersonWithStatsDataAvatarSerializer =
    new _$GPersonWithStatsData_avatarSerializer();
Serializer<GPersonWithStatsData_banner> _$gPersonWithStatsDataBannerSerializer =
    new _$GPersonWithStatsData_bannerSerializer();
Serializer<GPersonWithStatsData_organizedEvents>
_$gPersonWithStatsDataOrganizedEventsSerializer =
    new _$GPersonWithStatsData_organizedEventsSerializer();
Serializer<GPersonWithStatsData_participations>
_$gPersonWithStatsDataParticipationsSerializer =
    new _$GPersonWithStatsData_participationsSerializer();
Serializer<GPersonWithStatsData_memberships>
_$gPersonWithStatsDataMembershipsSerializer =
    new _$GPersonWithStatsData_membershipsSerializer();
Serializer<GPersonFullData> _$gPersonFullDataSerializer =
    new _$GPersonFullDataSerializer();
Serializer<GPersonFullData_avatar> _$gPersonFullDataAvatarSerializer =
    new _$GPersonFullData_avatarSerializer();
Serializer<GPersonFullData_banner> _$gPersonFullDataBannerSerializer =
    new _$GPersonFullData_bannerSerializer();
Serializer<GPersonFullData_organizedEvents>
_$gPersonFullDataOrganizedEventsSerializer =
    new _$GPersonFullData_organizedEventsSerializer();
Serializer<GPersonFullData_participations>
_$gPersonFullDataParticipationsSerializer =
    new _$GPersonFullData_participationsSerializer();
Serializer<GPersonFullData_memberships> _$gPersonFullDataMembershipsSerializer =
    new _$GPersonFullData_membershipsSerializer();
Serializer<GPersonFullData_feedTokens> _$gPersonFullDataFeedTokensSerializer =
    new _$GPersonFullData_feedTokensSerializer();
Serializer<GPersonFullData_feedTokens_actor>
_$gPersonFullDataFeedTokensActorSerializer =
    new _$GPersonFullData_feedTokens_actorSerializer();
Serializer<GPersonFullData_user> _$gPersonFullDataUserSerializer =
    new _$GPersonFullData_userSerializer();
Serializer<GActorInterfaceData> _$gActorInterfaceDataSerializer =
    new _$GActorInterfaceDataSerializer();
Serializer<GActorInterfaceData_avatar> _$gActorInterfaceDataAvatarSerializer =
    new _$GActorInterfaceData_avatarSerializer();
Serializer<GActorInterfaceData_banner> _$gActorInterfaceDataBannerSerializer =
    new _$GActorInterfaceData_bannerSerializer();

class _$GPersonBasicInfoDataSerializer
    implements StructuredSerializer<GPersonBasicInfoData> {
  @override
  final Iterable<Type> types = const [
    GPersonBasicInfoData,
    _$GPersonBasicInfoData,
  ];
  @override
  final String wireName = 'GPersonBasicInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonBasicInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i1.GActorType),
          ),
        );
    }
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonBasicInfoData_avatar),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonBasicInfoData_banner),
          ),
        );
    }
    return result;
  }

  @override
  GPersonBasicInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonBasicInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i1.GActorType),
                  )
                  as _i1.GActorType?;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonBasicInfoData_avatar),
                )!
                as GPersonBasicInfoData_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonBasicInfoData_banner),
                )!
                as GPersonBasicInfoData_banner,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonBasicInfoData_avatarSerializer
    implements StructuredSerializer<GPersonBasicInfoData_avatar> {
  @override
  final Iterable<Type> types = const [
    GPersonBasicInfoData_avatar,
    _$GPersonBasicInfoData_avatar,
  ];
  @override
  final String wireName = 'GPersonBasicInfoData_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonBasicInfoData_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonBasicInfoData_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonBasicInfoData_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonBasicInfoData_bannerSerializer
    implements StructuredSerializer<GPersonBasicInfoData_banner> {
  @override
  final Iterable<Type> types = const [
    GPersonBasicInfoData_banner,
    _$GPersonBasicInfoData_banner,
  ];
  @override
  final String wireName = 'GPersonBasicInfoData_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonBasicInfoData_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonBasicInfoData_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonBasicInfoData_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonWithStatsDataSerializer
    implements StructuredSerializer<GPersonWithStatsData> {
  @override
  final Iterable<Type> types = const [
    GPersonWithStatsData,
    _$GPersonWithStatsData,
  ];
  @override
  final String wireName = 'GPersonWithStatsData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonWithStatsData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i1.GActorType),
          ),
        );
    }
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonWithStatsData_avatar),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonWithStatsData_banner),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonWithStatsData_organizedEvents),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonWithStatsData_participations),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonWithStatsData_memberships),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonWithStatsData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonWithStatsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i1.GActorType),
                  )
                  as _i1.GActorType?;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonWithStatsData_avatar),
                )!
                as GPersonWithStatsData_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonWithStatsData_banner),
                )!
                as GPersonWithStatsData_banner,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GPersonWithStatsData_organizedEvents,
                  ),
                )!
                as GPersonWithStatsData_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GPersonWithStatsData_participations,
                  ),
                )!
                as GPersonWithStatsData_participations,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GPersonWithStatsData_memberships,
                  ),
                )!
                as GPersonWithStatsData_memberships,
          );
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonWithStatsData_avatarSerializer
    implements StructuredSerializer<GPersonWithStatsData_avatar> {
  @override
  final Iterable<Type> types = const [
    GPersonWithStatsData_avatar,
    _$GPersonWithStatsData_avatar,
  ];
  @override
  final String wireName = 'GPersonWithStatsData_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonWithStatsData_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonWithStatsData_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonWithStatsData_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonWithStatsData_bannerSerializer
    implements StructuredSerializer<GPersonWithStatsData_banner> {
  @override
  final Iterable<Type> types = const [
    GPersonWithStatsData_banner,
    _$GPersonWithStatsData_banner,
  ];
  @override
  final String wireName = 'GPersonWithStatsData_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonWithStatsData_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonWithStatsData_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonWithStatsData_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonWithStatsData_organizedEventsSerializer
    implements StructuredSerializer<GPersonWithStatsData_organizedEvents> {
  @override
  final Iterable<Type> types = const [
    GPersonWithStatsData_organizedEvents,
    _$GPersonWithStatsData_organizedEvents,
  ];
  @override
  final String wireName = 'GPersonWithStatsData_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonWithStatsData_organizedEvents object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonWithStatsData_organizedEvents deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonWithStatsData_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonWithStatsData_participationsSerializer
    implements StructuredSerializer<GPersonWithStatsData_participations> {
  @override
  final Iterable<Type> types = const [
    GPersonWithStatsData_participations,
    _$GPersonWithStatsData_participations,
  ];
  @override
  final String wireName = 'GPersonWithStatsData_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonWithStatsData_participations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonWithStatsData_participations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonWithStatsData_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonWithStatsData_membershipsSerializer
    implements StructuredSerializer<GPersonWithStatsData_memberships> {
  @override
  final Iterable<Type> types = const [
    GPersonWithStatsData_memberships,
    _$GPersonWithStatsData_memberships,
  ];
  @override
  final String wireName = 'GPersonWithStatsData_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonWithStatsData_memberships object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonWithStatsData_memberships deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonWithStatsData_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullDataSerializer
    implements StructuredSerializer<GPersonFullData> {
  @override
  final Iterable<Type> types = const [GPersonFullData, _$GPersonFullData];
  @override
  final String wireName = 'GPersonFullData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i1.GActorType),
          ),
        );
    }
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_avatar),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_banner),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_organizedEvents),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_participations),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_memberships),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(GPersonFullData_feedTokens),
            ]),
          ),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_user),
          ),
        );
    }
    return result;
  }

  @override
  GPersonFullData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i1.GActorType),
                  )
                  as _i1.GActorType?;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonFullData_avatar),
                )!
                as GPersonFullData_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonFullData_banner),
                )!
                as GPersonFullData_banner,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GPersonFullData_organizedEvents,
                  ),
                )!
                as GPersonFullData_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonFullData_participations),
                )!
                as GPersonFullData_participations,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonFullData_memberships),
                )!
                as GPersonFullData_memberships,
          );
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(GPersonFullData_feedTokens),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GPersonFullData_user),
                )!
                as GPersonFullData_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_avatarSerializer
    implements StructuredSerializer<GPersonFullData_avatar> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_avatar,
    _$GPersonFullData_avatar,
  ];
  @override
  final String wireName = 'GPersonFullData_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonFullData_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_bannerSerializer
    implements StructuredSerializer<GPersonFullData_banner> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_banner,
    _$GPersonFullData_banner,
  ];
  @override
  final String wireName = 'GPersonFullData_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonFullData_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_organizedEventsSerializer
    implements StructuredSerializer<GPersonFullData_organizedEvents> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_organizedEvents,
    _$GPersonFullData_organizedEvents,
  ];
  @override
  final String wireName = 'GPersonFullData_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_organizedEvents object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonFullData_organizedEvents deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_participationsSerializer
    implements StructuredSerializer<GPersonFullData_participations> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_participations,
    _$GPersonFullData_participations,
  ];
  @override
  final String wireName = 'GPersonFullData_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_participations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonFullData_participations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_membershipsSerializer
    implements StructuredSerializer<GPersonFullData_memberships> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_memberships,
    _$GPersonFullData_memberships,
  ];
  @override
  final String wireName = 'GPersonFullData_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_memberships object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPersonFullData_memberships deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_feedTokensSerializer
    implements StructuredSerializer<GPersonFullData_feedTokens> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_feedTokens,
    _$GPersonFullData_feedTokens,
  ];
  @override
  final String wireName = 'GPersonFullData_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_feedTokens object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GPersonFullData_feedTokens_actor),
          ),
        );
    }
    return result;
  }

  @override
  GPersonFullData_feedTokens deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GPersonFullData_feedTokens_actor,
                  ),
                )!
                as GPersonFullData_feedTokens_actor,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_feedTokens_actorSerializer
    implements StructuredSerializer<GPersonFullData_feedTokens_actor> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_feedTokens_actor,
    _$GPersonFullData_feedTokens_actor,
  ];
  @override
  final String wireName = 'GPersonFullData_feedTokens_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_feedTokens_actor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonFullData_feedTokens_actor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_feedTokens_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonFullData_userSerializer
    implements StructuredSerializer<GPersonFullData_user> {
  @override
  final Iterable<Type> types = const [
    GPersonFullData_user,
    _$GPersonFullData_user,
  ];
  @override
  final String wireName = 'GPersonFullData_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GPersonFullData_user object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i1.GUserRole),
          ),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GPersonFullData_user deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GPersonFullData_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i1.GUserRole),
                  )
                  as _i1.GUserRole?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GActorInterfaceDataSerializer
    implements StructuredSerializer<GActorInterfaceData> {
  @override
  final Iterable<Type> types = const [
    GActorInterfaceData,
    _$GActorInterfaceData,
  ];
  @override
  final String wireName = 'GActorInterfaceData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GActorInterfaceData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i1.GActorType),
          ),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GActorInterfaceData_avatar),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GActorInterfaceData_banner),
          ),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    return result;
  }

  @override
  GActorInterfaceData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GActorInterfaceDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i1.GActorType),
                  )
                  as _i1.GActorType?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GActorInterfaceData_avatar),
                )!
                as GActorInterfaceData_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GActorInterfaceData_banner),
                )!
                as GActorInterfaceData_banner,
          );
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GActorInterfaceData_avatarSerializer
    implements StructuredSerializer<GActorInterfaceData_avatar> {
  @override
  final Iterable<Type> types = const [
    GActorInterfaceData_avatar,
    _$GActorInterfaceData_avatar,
  ];
  @override
  final String wireName = 'GActorInterfaceData_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GActorInterfaceData_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GActorInterfaceData_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GActorInterfaceData_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GActorInterfaceData_bannerSerializer
    implements StructuredSerializer<GActorInterfaceData_banner> {
  @override
  final Iterable<Type> types = const [
    GActorInterfaceData_banner,
    _$GActorInterfaceData_banner,
  ];
  @override
  final String wireName = 'GActorInterfaceData_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GActorInterfaceData_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GActorInterfaceData_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GActorInterfaceData_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPersonBasicInfoData extends GPersonBasicInfoData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? local;
  @override
  final bool? suspended;
  @override
  final _i1.GActorType? type;
  @override
  final GPersonBasicInfoData_avatar? avatar;
  @override
  final GPersonBasicInfoData_banner? banner;

  factory _$GPersonBasicInfoData([
    void Function(GPersonBasicInfoDataBuilder)? updates,
  ]) => (new GPersonBasicInfoDataBuilder()..update(updates))._build();

  _$GPersonBasicInfoData._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.local,
    this.suspended,
    this.type,
    this.avatar,
    this.banner,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonBasicInfoData',
      'G__typename',
    );
  }

  @override
  GPersonBasicInfoData rebuild(
    void Function(GPersonBasicInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonBasicInfoDataBuilder toBuilder() =>
      new GPersonBasicInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonBasicInfoData &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        local == other.local &&
        suspended == other.suspended &&
        type == other.type &&
        avatar == other.avatar &&
        banner == other.banner;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonBasicInfoData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('local', local)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('avatar', avatar)
          ..add('banner', banner))
        .toString();
  }
}

class GPersonBasicInfoDataBuilder
    implements Builder<GPersonBasicInfoData, GPersonBasicInfoDataBuilder> {
  _$GPersonBasicInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i1.GActorType? _type;
  _i1.GActorType? get type => _$this._type;
  set type(_i1.GActorType? type) => _$this._type = type;

  GPersonBasicInfoData_avatarBuilder? _avatar;
  GPersonBasicInfoData_avatarBuilder get avatar =>
      _$this._avatar ??= new GPersonBasicInfoData_avatarBuilder();
  set avatar(GPersonBasicInfoData_avatarBuilder? avatar) =>
      _$this._avatar = avatar;

  GPersonBasicInfoData_bannerBuilder? _banner;
  GPersonBasicInfoData_bannerBuilder get banner =>
      _$this._banner ??= new GPersonBasicInfoData_bannerBuilder();
  set banner(GPersonBasicInfoData_bannerBuilder? banner) =>
      _$this._banner = banner;

  GPersonBasicInfoDataBuilder() {
    GPersonBasicInfoData._initializeBuilder(this);
  }

  GPersonBasicInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _local = $v.local;
      _suspended = $v.suspended;
      _type = $v.type;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonBasicInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonBasicInfoData;
  }

  @override
  void update(void Function(GPersonBasicInfoDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonBasicInfoData build() => _build();

  _$GPersonBasicInfoData _build() {
    _$GPersonBasicInfoData _$result;
    try {
      _$result =
          _$v ??
          new _$GPersonBasicInfoData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GPersonBasicInfoData',
              'G__typename',
            ),
            id: id,
            preferredUsername: preferredUsername,
            name: name,
            domain: domain,
            summary: summary,
            url: url,
            local: local,
            suspended: suspended,
            type: type,
            avatar: _avatar?.build(),
            banner: _banner?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GPersonBasicInfoData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPersonBasicInfoData_avatar extends GPersonBasicInfoData_avatar {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GPersonBasicInfoData_avatar([
    void Function(GPersonBasicInfoData_avatarBuilder)? updates,
  ]) => (new GPersonBasicInfoData_avatarBuilder()..update(updates))._build();

  _$GPersonBasicInfoData_avatar._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonBasicInfoData_avatar',
      'G__typename',
    );
  }

  @override
  GPersonBasicInfoData_avatar rebuild(
    void Function(GPersonBasicInfoData_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonBasicInfoData_avatarBuilder toBuilder() =>
      new GPersonBasicInfoData_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonBasicInfoData_avatar &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonBasicInfoData_avatar')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GPersonBasicInfoData_avatarBuilder
    implements
        Builder<
          GPersonBasicInfoData_avatar,
          GPersonBasicInfoData_avatarBuilder
        > {
  _$GPersonBasicInfoData_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GPersonBasicInfoData_avatarBuilder() {
    GPersonBasicInfoData_avatar._initializeBuilder(this);
  }

  GPersonBasicInfoData_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonBasicInfoData_avatar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonBasicInfoData_avatar;
  }

  @override
  void update(void Function(GPersonBasicInfoData_avatarBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonBasicInfoData_avatar build() => _build();

  _$GPersonBasicInfoData_avatar _build() {
    final _$result =
        _$v ??
        new _$GPersonBasicInfoData_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonBasicInfoData_avatar',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonBasicInfoData_banner extends GPersonBasicInfoData_banner {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GPersonBasicInfoData_banner([
    void Function(GPersonBasicInfoData_bannerBuilder)? updates,
  ]) => (new GPersonBasicInfoData_bannerBuilder()..update(updates))._build();

  _$GPersonBasicInfoData_banner._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonBasicInfoData_banner',
      'G__typename',
    );
  }

  @override
  GPersonBasicInfoData_banner rebuild(
    void Function(GPersonBasicInfoData_bannerBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonBasicInfoData_bannerBuilder toBuilder() =>
      new GPersonBasicInfoData_bannerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonBasicInfoData_banner &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonBasicInfoData_banner')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GPersonBasicInfoData_bannerBuilder
    implements
        Builder<
          GPersonBasicInfoData_banner,
          GPersonBasicInfoData_bannerBuilder
        > {
  _$GPersonBasicInfoData_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GPersonBasicInfoData_bannerBuilder() {
    GPersonBasicInfoData_banner._initializeBuilder(this);
  }

  GPersonBasicInfoData_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonBasicInfoData_banner other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonBasicInfoData_banner;
  }

  @override
  void update(void Function(GPersonBasicInfoData_bannerBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonBasicInfoData_banner build() => _build();

  _$GPersonBasicInfoData_banner _build() {
    final _$result =
        _$v ??
        new _$GPersonBasicInfoData_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonBasicInfoData_banner',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonWithStatsData extends GPersonWithStatsData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? local;
  @override
  final bool? suspended;
  @override
  final _i1.GActorType? type;
  @override
  final GPersonWithStatsData_avatar? avatar;
  @override
  final GPersonWithStatsData_banner? banner;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final int? mediaSize;
  @override
  final GPersonWithStatsData_organizedEvents? organizedEvents;
  @override
  final GPersonWithStatsData_participations? participations;
  @override
  final GPersonWithStatsData_memberships? memberships;
  @override
  final int? unreadConversationsCount;

  factory _$GPersonWithStatsData([
    void Function(GPersonWithStatsDataBuilder)? updates,
  ]) => (new GPersonWithStatsDataBuilder()..update(updates))._build();

  _$GPersonWithStatsData._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.local,
    this.suspended,
    this.type,
    this.avatar,
    this.banner,
    this.followersCount,
    this.followingCount,
    this.mediaSize,
    this.organizedEvents,
    this.participations,
    this.memberships,
    this.unreadConversationsCount,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonWithStatsData',
      'G__typename',
    );
  }

  @override
  GPersonWithStatsData rebuild(
    void Function(GPersonWithStatsDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonWithStatsDataBuilder toBuilder() =>
      new GPersonWithStatsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonWithStatsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        local == other.local &&
        suspended == other.suspended &&
        type == other.type &&
        avatar == other.avatar &&
        banner == other.banner &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        mediaSize == other.mediaSize &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        memberships == other.memberships &&
        unreadConversationsCount == other.unreadConversationsCount;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonWithStatsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('local', local)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('mediaSize', mediaSize)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('memberships', memberships)
          ..add('unreadConversationsCount', unreadConversationsCount))
        .toString();
  }
}

class GPersonWithStatsDataBuilder
    implements Builder<GPersonWithStatsData, GPersonWithStatsDataBuilder> {
  _$GPersonWithStatsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i1.GActorType? _type;
  _i1.GActorType? get type => _$this._type;
  set type(_i1.GActorType? type) => _$this._type = type;

  GPersonWithStatsData_avatarBuilder? _avatar;
  GPersonWithStatsData_avatarBuilder get avatar =>
      _$this._avatar ??= new GPersonWithStatsData_avatarBuilder();
  set avatar(GPersonWithStatsData_avatarBuilder? avatar) =>
      _$this._avatar = avatar;

  GPersonWithStatsData_bannerBuilder? _banner;
  GPersonWithStatsData_bannerBuilder get banner =>
      _$this._banner ??= new GPersonWithStatsData_bannerBuilder();
  set banner(GPersonWithStatsData_bannerBuilder? banner) =>
      _$this._banner = banner;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GPersonWithStatsData_organizedEventsBuilder? _organizedEvents;
  GPersonWithStatsData_organizedEventsBuilder get organizedEvents =>
      _$this._organizedEvents ??=
          new GPersonWithStatsData_organizedEventsBuilder();
  set organizedEvents(
    GPersonWithStatsData_organizedEventsBuilder? organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GPersonWithStatsData_participationsBuilder? _participations;
  GPersonWithStatsData_participationsBuilder get participations =>
      _$this._participations ??=
          new GPersonWithStatsData_participationsBuilder();
  set participations(
    GPersonWithStatsData_participationsBuilder? participations,
  ) => _$this._participations = participations;

  GPersonWithStatsData_membershipsBuilder? _memberships;
  GPersonWithStatsData_membershipsBuilder get memberships =>
      _$this._memberships ??= new GPersonWithStatsData_membershipsBuilder();
  set memberships(GPersonWithStatsData_membershipsBuilder? memberships) =>
      _$this._memberships = memberships;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  GPersonWithStatsDataBuilder() {
    GPersonWithStatsData._initializeBuilder(this);
  }

  GPersonWithStatsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _local = $v.local;
      _suspended = $v.suspended;
      _type = $v.type;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _mediaSize = $v.mediaSize;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _unreadConversationsCount = $v.unreadConversationsCount;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonWithStatsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonWithStatsData;
  }

  @override
  void update(void Function(GPersonWithStatsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonWithStatsData build() => _build();

  _$GPersonWithStatsData _build() {
    _$GPersonWithStatsData _$result;
    try {
      _$result =
          _$v ??
          new _$GPersonWithStatsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GPersonWithStatsData',
              'G__typename',
            ),
            id: id,
            preferredUsername: preferredUsername,
            name: name,
            domain: domain,
            summary: summary,
            url: url,
            local: local,
            suspended: suspended,
            type: type,
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            mediaSize: mediaSize,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            memberships: _memberships?.build(),
            unreadConversationsCount: unreadConversationsCount,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();
        _$failedField = 'memberships';
        _memberships?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GPersonWithStatsData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPersonWithStatsData_avatar extends GPersonWithStatsData_avatar {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GPersonWithStatsData_avatar([
    void Function(GPersonWithStatsData_avatarBuilder)? updates,
  ]) => (new GPersonWithStatsData_avatarBuilder()..update(updates))._build();

  _$GPersonWithStatsData_avatar._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonWithStatsData_avatar',
      'G__typename',
    );
  }

  @override
  GPersonWithStatsData_avatar rebuild(
    void Function(GPersonWithStatsData_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonWithStatsData_avatarBuilder toBuilder() =>
      new GPersonWithStatsData_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonWithStatsData_avatar &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonWithStatsData_avatar')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GPersonWithStatsData_avatarBuilder
    implements
        Builder<
          GPersonWithStatsData_avatar,
          GPersonWithStatsData_avatarBuilder
        > {
  _$GPersonWithStatsData_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GPersonWithStatsData_avatarBuilder() {
    GPersonWithStatsData_avatar._initializeBuilder(this);
  }

  GPersonWithStatsData_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonWithStatsData_avatar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonWithStatsData_avatar;
  }

  @override
  void update(void Function(GPersonWithStatsData_avatarBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonWithStatsData_avatar build() => _build();

  _$GPersonWithStatsData_avatar _build() {
    final _$result =
        _$v ??
        new _$GPersonWithStatsData_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonWithStatsData_avatar',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonWithStatsData_banner extends GPersonWithStatsData_banner {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GPersonWithStatsData_banner([
    void Function(GPersonWithStatsData_bannerBuilder)? updates,
  ]) => (new GPersonWithStatsData_bannerBuilder()..update(updates))._build();

  _$GPersonWithStatsData_banner._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonWithStatsData_banner',
      'G__typename',
    );
  }

  @override
  GPersonWithStatsData_banner rebuild(
    void Function(GPersonWithStatsData_bannerBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonWithStatsData_bannerBuilder toBuilder() =>
      new GPersonWithStatsData_bannerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonWithStatsData_banner &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonWithStatsData_banner')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GPersonWithStatsData_bannerBuilder
    implements
        Builder<
          GPersonWithStatsData_banner,
          GPersonWithStatsData_bannerBuilder
        > {
  _$GPersonWithStatsData_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GPersonWithStatsData_bannerBuilder() {
    GPersonWithStatsData_banner._initializeBuilder(this);
  }

  GPersonWithStatsData_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonWithStatsData_banner other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonWithStatsData_banner;
  }

  @override
  void update(void Function(GPersonWithStatsData_bannerBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonWithStatsData_banner build() => _build();

  _$GPersonWithStatsData_banner _build() {
    final _$result =
        _$v ??
        new _$GPersonWithStatsData_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonWithStatsData_banner',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonWithStatsData_organizedEvents
    extends GPersonWithStatsData_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GPersonWithStatsData_organizedEvents([
    void Function(GPersonWithStatsData_organizedEventsBuilder)? updates,
  ]) => (new GPersonWithStatsData_organizedEventsBuilder()..update(updates))
      ._build();

  _$GPersonWithStatsData_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonWithStatsData_organizedEvents',
      'G__typename',
    );
  }

  @override
  GPersonWithStatsData_organizedEvents rebuild(
    void Function(GPersonWithStatsData_organizedEventsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonWithStatsData_organizedEventsBuilder toBuilder() =>
      new GPersonWithStatsData_organizedEventsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonWithStatsData_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonWithStatsData_organizedEvents')
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GPersonWithStatsData_organizedEventsBuilder
    implements
        Builder<
          GPersonWithStatsData_organizedEvents,
          GPersonWithStatsData_organizedEventsBuilder
        > {
  _$GPersonWithStatsData_organizedEvents? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GPersonWithStatsData_organizedEventsBuilder() {
    GPersonWithStatsData_organizedEvents._initializeBuilder(this);
  }

  GPersonWithStatsData_organizedEventsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonWithStatsData_organizedEvents other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonWithStatsData_organizedEvents;
  }

  @override
  void update(
    void Function(GPersonWithStatsData_organizedEventsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GPersonWithStatsData_organizedEvents build() => _build();

  _$GPersonWithStatsData_organizedEvents _build() {
    final _$result =
        _$v ??
        new _$GPersonWithStatsData_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonWithStatsData_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonWithStatsData_participations
    extends GPersonWithStatsData_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GPersonWithStatsData_participations([
    void Function(GPersonWithStatsData_participationsBuilder)? updates,
  ]) => (new GPersonWithStatsData_participationsBuilder()..update(updates))
      ._build();

  _$GPersonWithStatsData_participations._({
    required this.G__typename,
    this.total,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonWithStatsData_participations',
      'G__typename',
    );
  }

  @override
  GPersonWithStatsData_participations rebuild(
    void Function(GPersonWithStatsData_participationsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonWithStatsData_participationsBuilder toBuilder() =>
      new GPersonWithStatsData_participationsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonWithStatsData_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonWithStatsData_participations')
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GPersonWithStatsData_participationsBuilder
    implements
        Builder<
          GPersonWithStatsData_participations,
          GPersonWithStatsData_participationsBuilder
        > {
  _$GPersonWithStatsData_participations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GPersonWithStatsData_participationsBuilder() {
    GPersonWithStatsData_participations._initializeBuilder(this);
  }

  GPersonWithStatsData_participationsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonWithStatsData_participations other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonWithStatsData_participations;
  }

  @override
  void update(
    void Function(GPersonWithStatsData_participationsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GPersonWithStatsData_participations build() => _build();

  _$GPersonWithStatsData_participations _build() {
    final _$result =
        _$v ??
        new _$GPersonWithStatsData_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonWithStatsData_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonWithStatsData_memberships
    extends GPersonWithStatsData_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GPersonWithStatsData_memberships([
    void Function(GPersonWithStatsData_membershipsBuilder)? updates,
  ]) =>
      (new GPersonWithStatsData_membershipsBuilder()..update(updates))._build();

  _$GPersonWithStatsData_memberships._({required this.G__typename, this.total})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonWithStatsData_memberships',
      'G__typename',
    );
  }

  @override
  GPersonWithStatsData_memberships rebuild(
    void Function(GPersonWithStatsData_membershipsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonWithStatsData_membershipsBuilder toBuilder() =>
      new GPersonWithStatsData_membershipsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonWithStatsData_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonWithStatsData_memberships')
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GPersonWithStatsData_membershipsBuilder
    implements
        Builder<
          GPersonWithStatsData_memberships,
          GPersonWithStatsData_membershipsBuilder
        > {
  _$GPersonWithStatsData_memberships? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GPersonWithStatsData_membershipsBuilder() {
    GPersonWithStatsData_memberships._initializeBuilder(this);
  }

  GPersonWithStatsData_membershipsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonWithStatsData_memberships other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonWithStatsData_memberships;
  }

  @override
  void update(void Function(GPersonWithStatsData_membershipsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonWithStatsData_memberships build() => _build();

  _$GPersonWithStatsData_memberships _build() {
    final _$result =
        _$v ??
        new _$GPersonWithStatsData_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonWithStatsData_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData extends GPersonFullData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? local;
  @override
  final bool? suspended;
  @override
  final _i1.GActorType? type;
  @override
  final GPersonFullData_avatar? avatar;
  @override
  final GPersonFullData_banner? banner;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final int? mediaSize;
  @override
  final GPersonFullData_organizedEvents? organizedEvents;
  @override
  final GPersonFullData_participations? participations;
  @override
  final GPersonFullData_memberships? memberships;
  @override
  final int? unreadConversationsCount;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final BuiltList<GPersonFullData_feedTokens?>? feedTokens;
  @override
  final GPersonFullData_user? user;

  factory _$GPersonFullData([void Function(GPersonFullDataBuilder)? updates]) =>
      (new GPersonFullDataBuilder()..update(updates))._build();

  _$GPersonFullData._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.local,
    this.suspended,
    this.type,
    this.avatar,
    this.banner,
    this.followersCount,
    this.followingCount,
    this.mediaSize,
    this.organizedEvents,
    this.participations,
    this.memberships,
    this.unreadConversationsCount,
    this.manuallyApprovesFollowers,
    this.feedTokens,
    this.user,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData',
      'G__typename',
    );
  }

  @override
  GPersonFullData rebuild(void Function(GPersonFullDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPersonFullDataBuilder toBuilder() =>
      new GPersonFullDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        local == other.local &&
        suspended == other.suspended &&
        type == other.type &&
        avatar == other.avatar &&
        banner == other.banner &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        mediaSize == other.mediaSize &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        memberships == other.memberships &&
        unreadConversationsCount == other.unreadConversationsCount &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        feedTokens == other.feedTokens &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('local', local)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('mediaSize', mediaSize)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('memberships', memberships)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('feedTokens', feedTokens)
          ..add('user', user))
        .toString();
  }
}

class GPersonFullDataBuilder
    implements Builder<GPersonFullData, GPersonFullDataBuilder> {
  _$GPersonFullData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i1.GActorType? _type;
  _i1.GActorType? get type => _$this._type;
  set type(_i1.GActorType? type) => _$this._type = type;

  GPersonFullData_avatarBuilder? _avatar;
  GPersonFullData_avatarBuilder get avatar =>
      _$this._avatar ??= new GPersonFullData_avatarBuilder();
  set avatar(GPersonFullData_avatarBuilder? avatar) => _$this._avatar = avatar;

  GPersonFullData_bannerBuilder? _banner;
  GPersonFullData_bannerBuilder get banner =>
      _$this._banner ??= new GPersonFullData_bannerBuilder();
  set banner(GPersonFullData_bannerBuilder? banner) => _$this._banner = banner;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GPersonFullData_organizedEventsBuilder? _organizedEvents;
  GPersonFullData_organizedEventsBuilder get organizedEvents =>
      _$this._organizedEvents ??= new GPersonFullData_organizedEventsBuilder();
  set organizedEvents(
    GPersonFullData_organizedEventsBuilder? organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GPersonFullData_participationsBuilder? _participations;
  GPersonFullData_participationsBuilder get participations =>
      _$this._participations ??= new GPersonFullData_participationsBuilder();
  set participations(GPersonFullData_participationsBuilder? participations) =>
      _$this._participations = participations;

  GPersonFullData_membershipsBuilder? _memberships;
  GPersonFullData_membershipsBuilder get memberships =>
      _$this._memberships ??= new GPersonFullData_membershipsBuilder();
  set memberships(GPersonFullData_membershipsBuilder? memberships) =>
      _$this._memberships = memberships;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  ListBuilder<GPersonFullData_feedTokens?>? _feedTokens;
  ListBuilder<GPersonFullData_feedTokens?> get feedTokens =>
      _$this._feedTokens ??= new ListBuilder<GPersonFullData_feedTokens?>();
  set feedTokens(ListBuilder<GPersonFullData_feedTokens?>? feedTokens) =>
      _$this._feedTokens = feedTokens;

  GPersonFullData_userBuilder? _user;
  GPersonFullData_userBuilder get user =>
      _$this._user ??= new GPersonFullData_userBuilder();
  set user(GPersonFullData_userBuilder? user) => _$this._user = user;

  GPersonFullDataBuilder() {
    GPersonFullData._initializeBuilder(this);
  }

  GPersonFullDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _local = $v.local;
      _suspended = $v.suspended;
      _type = $v.type;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _mediaSize = $v.mediaSize;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _unreadConversationsCount = $v.unreadConversationsCount;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _feedTokens = $v.feedTokens?.toBuilder();
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData;
  }

  @override
  void update(void Function(GPersonFullDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData build() => _build();

  _$GPersonFullData _build() {
    _$GPersonFullData _$result;
    try {
      _$result =
          _$v ??
          new _$GPersonFullData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GPersonFullData',
              'G__typename',
            ),
            id: id,
            preferredUsername: preferredUsername,
            name: name,
            domain: domain,
            summary: summary,
            url: url,
            local: local,
            suspended: suspended,
            type: type,
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            mediaSize: mediaSize,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            memberships: _memberships?.build(),
            unreadConversationsCount: unreadConversationsCount,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            feedTokens: _feedTokens?.build(),
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();
        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GPersonFullData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_avatar extends GPersonFullData_avatar {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GPersonFullData_avatar([
    void Function(GPersonFullData_avatarBuilder)? updates,
  ]) => (new GPersonFullData_avatarBuilder()..update(updates))._build();

  _$GPersonFullData_avatar._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_avatar',
      'G__typename',
    );
  }

  @override
  GPersonFullData_avatar rebuild(
    void Function(GPersonFullData_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_avatarBuilder toBuilder() =>
      new GPersonFullData_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_avatar &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_avatar')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GPersonFullData_avatarBuilder
    implements Builder<GPersonFullData_avatar, GPersonFullData_avatarBuilder> {
  _$GPersonFullData_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GPersonFullData_avatarBuilder() {
    GPersonFullData_avatar._initializeBuilder(this);
  }

  GPersonFullData_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_avatar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_avatar;
  }

  @override
  void update(void Function(GPersonFullData_avatarBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_avatar build() => _build();

  _$GPersonFullData_avatar _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_avatar',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_banner extends GPersonFullData_banner {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GPersonFullData_banner([
    void Function(GPersonFullData_bannerBuilder)? updates,
  ]) => (new GPersonFullData_bannerBuilder()..update(updates))._build();

  _$GPersonFullData_banner._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_banner',
      'G__typename',
    );
  }

  @override
  GPersonFullData_banner rebuild(
    void Function(GPersonFullData_bannerBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_bannerBuilder toBuilder() =>
      new GPersonFullData_bannerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_banner &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_banner')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GPersonFullData_bannerBuilder
    implements Builder<GPersonFullData_banner, GPersonFullData_bannerBuilder> {
  _$GPersonFullData_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GPersonFullData_bannerBuilder() {
    GPersonFullData_banner._initializeBuilder(this);
  }

  GPersonFullData_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_banner other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_banner;
  }

  @override
  void update(void Function(GPersonFullData_bannerBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_banner build() => _build();

  _$GPersonFullData_banner _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_banner',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_organizedEvents
    extends GPersonFullData_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GPersonFullData_organizedEvents([
    void Function(GPersonFullData_organizedEventsBuilder)? updates,
  ]) =>
      (new GPersonFullData_organizedEventsBuilder()..update(updates))._build();

  _$GPersonFullData_organizedEvents._({required this.G__typename, this.total})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_organizedEvents',
      'G__typename',
    );
  }

  @override
  GPersonFullData_organizedEvents rebuild(
    void Function(GPersonFullData_organizedEventsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_organizedEventsBuilder toBuilder() =>
      new GPersonFullData_organizedEventsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_organizedEvents')
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GPersonFullData_organizedEventsBuilder
    implements
        Builder<
          GPersonFullData_organizedEvents,
          GPersonFullData_organizedEventsBuilder
        > {
  _$GPersonFullData_organizedEvents? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GPersonFullData_organizedEventsBuilder() {
    GPersonFullData_organizedEvents._initializeBuilder(this);
  }

  GPersonFullData_organizedEventsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_organizedEvents other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_organizedEvents;
  }

  @override
  void update(void Function(GPersonFullData_organizedEventsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_organizedEvents build() => _build();

  _$GPersonFullData_organizedEvents _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_participations extends GPersonFullData_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GPersonFullData_participations([
    void Function(GPersonFullData_participationsBuilder)? updates,
  ]) => (new GPersonFullData_participationsBuilder()..update(updates))._build();

  _$GPersonFullData_participations._({required this.G__typename, this.total})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_participations',
      'G__typename',
    );
  }

  @override
  GPersonFullData_participations rebuild(
    void Function(GPersonFullData_participationsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_participationsBuilder toBuilder() =>
      new GPersonFullData_participationsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_participations')
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GPersonFullData_participationsBuilder
    implements
        Builder<
          GPersonFullData_participations,
          GPersonFullData_participationsBuilder
        > {
  _$GPersonFullData_participations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GPersonFullData_participationsBuilder() {
    GPersonFullData_participations._initializeBuilder(this);
  }

  GPersonFullData_participationsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_participations other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_participations;
  }

  @override
  void update(void Function(GPersonFullData_participationsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_participations build() => _build();

  _$GPersonFullData_participations _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_memberships extends GPersonFullData_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GPersonFullData_memberships([
    void Function(GPersonFullData_membershipsBuilder)? updates,
  ]) => (new GPersonFullData_membershipsBuilder()..update(updates))._build();

  _$GPersonFullData_memberships._({required this.G__typename, this.total})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_memberships',
      'G__typename',
    );
  }

  @override
  GPersonFullData_memberships rebuild(
    void Function(GPersonFullData_membershipsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_membershipsBuilder toBuilder() =>
      new GPersonFullData_membershipsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_memberships')
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GPersonFullData_membershipsBuilder
    implements
        Builder<
          GPersonFullData_memberships,
          GPersonFullData_membershipsBuilder
        > {
  _$GPersonFullData_memberships? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GPersonFullData_membershipsBuilder() {
    GPersonFullData_memberships._initializeBuilder(this);
  }

  GPersonFullData_membershipsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_memberships other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_memberships;
  }

  @override
  void update(void Function(GPersonFullData_membershipsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_memberships build() => _build();

  _$GPersonFullData_memberships _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_feedTokens extends GPersonFullData_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;
  @override
  final GPersonFullData_feedTokens_actor? actor;

  factory _$GPersonFullData_feedTokens([
    void Function(GPersonFullData_feedTokensBuilder)? updates,
  ]) => (new GPersonFullData_feedTokensBuilder()..update(updates))._build();

  _$GPersonFullData_feedTokens._({
    required this.G__typename,
    this.token,
    this.actor,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_feedTokens',
      'G__typename',
    );
  }

  @override
  GPersonFullData_feedTokens rebuild(
    void Function(GPersonFullData_feedTokensBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_feedTokensBuilder toBuilder() =>
      new GPersonFullData_feedTokensBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token &&
        actor == other.actor;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_feedTokens')
          ..add('G__typename', G__typename)
          ..add('token', token)
          ..add('actor', actor))
        .toString();
  }
}

class GPersonFullData_feedTokensBuilder
    implements
        Builder<GPersonFullData_feedTokens, GPersonFullData_feedTokensBuilder> {
  _$GPersonFullData_feedTokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GPersonFullData_feedTokens_actorBuilder? _actor;
  GPersonFullData_feedTokens_actorBuilder get actor =>
      _$this._actor ??= new GPersonFullData_feedTokens_actorBuilder();
  set actor(GPersonFullData_feedTokens_actorBuilder? actor) =>
      _$this._actor = actor;

  GPersonFullData_feedTokensBuilder() {
    GPersonFullData_feedTokens._initializeBuilder(this);
  }

  GPersonFullData_feedTokensBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _actor = $v.actor?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_feedTokens other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_feedTokens;
  }

  @override
  void update(void Function(GPersonFullData_feedTokensBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_feedTokens build() => _build();

  _$GPersonFullData_feedTokens _build() {
    _$GPersonFullData_feedTokens _$result;
    try {
      _$result =
          _$v ??
          new _$GPersonFullData_feedTokens._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GPersonFullData_feedTokens',
              'G__typename',
            ),
            token: token,
            actor: _actor?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GPersonFullData_feedTokens',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_feedTokens_actor
    extends GPersonFullData_feedTokens_actor {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;

  factory _$GPersonFullData_feedTokens_actor([
    void Function(GPersonFullData_feedTokens_actorBuilder)? updates,
  ]) =>
      (new GPersonFullData_feedTokens_actorBuilder()..update(updates))._build();

  _$GPersonFullData_feedTokens_actor._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_feedTokens_actor',
      'G__typename',
    );
  }

  @override
  GPersonFullData_feedTokens_actor rebuild(
    void Function(GPersonFullData_feedTokens_actorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_feedTokens_actorBuilder toBuilder() =>
      new GPersonFullData_feedTokens_actorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_feedTokens_actor &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_feedTokens_actor')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername))
        .toString();
  }
}

class GPersonFullData_feedTokens_actorBuilder
    implements
        Builder<
          GPersonFullData_feedTokens_actor,
          GPersonFullData_feedTokens_actorBuilder
        > {
  _$GPersonFullData_feedTokens_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  GPersonFullData_feedTokens_actorBuilder() {
    GPersonFullData_feedTokens_actor._initializeBuilder(this);
  }

  GPersonFullData_feedTokens_actorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_feedTokens_actor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_feedTokens_actor;
  }

  @override
  void update(void Function(GPersonFullData_feedTokens_actorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_feedTokens_actor build() => _build();

  _$GPersonFullData_feedTokens_actor _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_feedTokens_actor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_feedTokens_actor',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GPersonFullData_user extends GPersonFullData_user {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i1.GUserRole? role;
  @override
  final String? locale;

  factory _$GPersonFullData_user([
    void Function(GPersonFullData_userBuilder)? updates,
  ]) => (new GPersonFullData_userBuilder()..update(updates))._build();

  _$GPersonFullData_user._({
    required this.G__typename,
    this.id,
    required this.email,
    this.role,
    this.locale,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GPersonFullData_user',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      email,
      r'GPersonFullData_user',
      'email',
    );
  }

  @override
  GPersonFullData_user rebuild(
    void Function(GPersonFullData_userBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GPersonFullData_userBuilder toBuilder() =>
      new GPersonFullData_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPersonFullData_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        role == other.role &&
        locale == other.locale;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPersonFullData_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('role', role)
          ..add('locale', locale))
        .toString();
  }
}

class GPersonFullData_userBuilder
    implements Builder<GPersonFullData_user, GPersonFullData_userBuilder> {
  _$GPersonFullData_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i1.GUserRole? _role;
  _i1.GUserRole? get role => _$this._role;
  set role(_i1.GUserRole? role) => _$this._role = role;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  GPersonFullData_userBuilder() {
    GPersonFullData_user._initializeBuilder(this);
  }

  GPersonFullData_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _role = $v.role;
      _locale = $v.locale;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPersonFullData_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPersonFullData_user;
  }

  @override
  void update(void Function(GPersonFullData_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPersonFullData_user build() => _build();

  _$GPersonFullData_user _build() {
    final _$result =
        _$v ??
        new _$GPersonFullData_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GPersonFullData_user',
            'G__typename',
          ),
          id: id,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GPersonFullData_user',
            'email',
          ),
          role: role,
          locale: locale,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GActorInterfaceData extends GActorInterfaceData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? suspended;
  @override
  final _i1.GActorType? type;
  @override
  final bool? local;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final int? mediaSize;
  @override
  final GActorInterfaceData_avatar? avatar;
  @override
  final GActorInterfaceData_banner? banner;
  @override
  final bool? manuallyApprovesFollowers;

  factory _$GActorInterfaceData([
    void Function(GActorInterfaceDataBuilder)? updates,
  ]) => (new GActorInterfaceDataBuilder()..update(updates))._build();

  _$GActorInterfaceData._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.suspended,
    this.type,
    this.local,
    this.followersCount,
    this.followingCount,
    this.mediaSize,
    this.avatar,
    this.banner,
    this.manuallyApprovesFollowers,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GActorInterfaceData',
      'G__typename',
    );
  }

  @override
  GActorInterfaceData rebuild(
    void Function(GActorInterfaceDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GActorInterfaceDataBuilder toBuilder() =>
      new GActorInterfaceDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GActorInterfaceData &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        suspended == other.suspended &&
        type == other.type &&
        local == other.local &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        mediaSize == other.mediaSize &&
        avatar == other.avatar &&
        banner == other.banner &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GActorInterfaceData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('local', local)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('mediaSize', mediaSize)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers))
        .toString();
  }
}

class GActorInterfaceDataBuilder
    implements Builder<GActorInterfaceData, GActorInterfaceDataBuilder> {
  _$GActorInterfaceData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i1.GActorType? _type;
  _i1.GActorType? get type => _$this._type;
  set type(_i1.GActorType? type) => _$this._type = type;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GActorInterfaceData_avatarBuilder? _avatar;
  GActorInterfaceData_avatarBuilder get avatar =>
      _$this._avatar ??= new GActorInterfaceData_avatarBuilder();
  set avatar(GActorInterfaceData_avatarBuilder? avatar) =>
      _$this._avatar = avatar;

  GActorInterfaceData_bannerBuilder? _banner;
  GActorInterfaceData_bannerBuilder get banner =>
      _$this._banner ??= new GActorInterfaceData_bannerBuilder();
  set banner(GActorInterfaceData_bannerBuilder? banner) =>
      _$this._banner = banner;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  GActorInterfaceDataBuilder() {
    GActorInterfaceData._initializeBuilder(this);
  }

  GActorInterfaceDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _suspended = $v.suspended;
      _type = $v.type;
      _local = $v.local;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _mediaSize = $v.mediaSize;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GActorInterfaceData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GActorInterfaceData;
  }

  @override
  void update(void Function(GActorInterfaceDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GActorInterfaceData build() => _build();

  _$GActorInterfaceData _build() {
    _$GActorInterfaceData _$result;
    try {
      _$result =
          _$v ??
          new _$GActorInterfaceData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GActorInterfaceData',
              'G__typename',
            ),
            id: id,
            preferredUsername: preferredUsername,
            name: name,
            domain: domain,
            summary: summary,
            url: url,
            suspended: suspended,
            type: type,
            local: local,
            followersCount: followersCount,
            followingCount: followingCount,
            mediaSize: mediaSize,
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            manuallyApprovesFollowers: manuallyApprovesFollowers,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GActorInterfaceData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GActorInterfaceData_avatar extends GActorInterfaceData_avatar {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GActorInterfaceData_avatar([
    void Function(GActorInterfaceData_avatarBuilder)? updates,
  ]) => (new GActorInterfaceData_avatarBuilder()..update(updates))._build();

  _$GActorInterfaceData_avatar._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GActorInterfaceData_avatar',
      'G__typename',
    );
  }

  @override
  GActorInterfaceData_avatar rebuild(
    void Function(GActorInterfaceData_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GActorInterfaceData_avatarBuilder toBuilder() =>
      new GActorInterfaceData_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GActorInterfaceData_avatar &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GActorInterfaceData_avatar')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GActorInterfaceData_avatarBuilder
    implements
        Builder<GActorInterfaceData_avatar, GActorInterfaceData_avatarBuilder> {
  _$GActorInterfaceData_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GActorInterfaceData_avatarBuilder() {
    GActorInterfaceData_avatar._initializeBuilder(this);
  }

  GActorInterfaceData_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GActorInterfaceData_avatar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GActorInterfaceData_avatar;
  }

  @override
  void update(void Function(GActorInterfaceData_avatarBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GActorInterfaceData_avatar build() => _build();

  _$GActorInterfaceData_avatar _build() {
    final _$result =
        _$v ??
        new _$GActorInterfaceData_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GActorInterfaceData_avatar',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GActorInterfaceData_banner extends GActorInterfaceData_banner {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GActorInterfaceData_banner([
    void Function(GActorInterfaceData_bannerBuilder)? updates,
  ]) => (new GActorInterfaceData_bannerBuilder()..update(updates))._build();

  _$GActorInterfaceData_banner._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GActorInterfaceData_banner',
      'G__typename',
    );
  }

  @override
  GActorInterfaceData_banner rebuild(
    void Function(GActorInterfaceData_bannerBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GActorInterfaceData_bannerBuilder toBuilder() =>
      new GActorInterfaceData_bannerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GActorInterfaceData_banner &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GActorInterfaceData_banner')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GActorInterfaceData_bannerBuilder
    implements
        Builder<GActorInterfaceData_banner, GActorInterfaceData_bannerBuilder> {
  _$GActorInterfaceData_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GActorInterfaceData_bannerBuilder() {
    GActorInterfaceData_banner._initializeBuilder(this);
  }

  GActorInterfaceData_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GActorInterfaceData_banner other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GActorInterfaceData_banner;
  }

  @override
  void update(void Function(GActorInterfaceData_bannerBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GActorInterfaceData_banner build() => _build();

  _$GActorInterfaceData_banner _build() {
    final _$result =
        _$v ??
        new _$GActorInterfaceData_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GActorInterfaceData_banner',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
