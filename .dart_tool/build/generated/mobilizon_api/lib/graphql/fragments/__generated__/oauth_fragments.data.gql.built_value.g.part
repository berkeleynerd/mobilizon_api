// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GAuthApplicationInfoData> _$gAuthApplicationInfoDataSerializer =
    new _$GAuthApplicationInfoDataSerializer();
Serializer<GAuthApplicationTokenInfoData>
_$gAuthApplicationTokenInfoDataSerializer =
    new _$GAuthApplicationTokenInfoDataSerializer();
Serializer<GAuthApplicationTokenInfoData_application>
_$gAuthApplicationTokenInfoDataApplicationSerializer =
    new _$GAuthApplicationTokenInfoData_applicationSerializer();
Serializer<GApplicationCodeAndStateInfoData>
_$gApplicationCodeAndStateInfoDataSerializer =
    new _$GApplicationCodeAndStateInfoDataSerializer();
Serializer<GApplicationDeviceActivationInfoData>
_$gApplicationDeviceActivationInfoDataSerializer =
    new _$GApplicationDeviceActivationInfoDataSerializer();
Serializer<GApplicationDeviceActivationInfoData_application>
_$gApplicationDeviceActivationInfoDataApplicationSerializer =
    new _$GApplicationDeviceActivationInfoData_applicationSerializer();

class _$GAuthApplicationInfoDataSerializer
    implements StructuredSerializer<GAuthApplicationInfoData> {
  @override
  final Iterable<Type> types = const [
    GAuthApplicationInfoData,
    _$GAuthApplicationInfoData,
  ];
  @override
  final String wireName = 'GAuthApplicationInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GAuthApplicationInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.clientId;
    if (value != null) {
      result
        ..add('clientId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.website;
    if (value != null) {
      result
        ..add('website')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GAuthApplicationInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GAuthApplicationInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'clientId':
          result.clientId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'website':
          result.website =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAuthApplicationTokenInfoDataSerializer
    implements StructuredSerializer<GAuthApplicationTokenInfoData> {
  @override
  final Iterable<Type> types = const [
    GAuthApplicationTokenInfoData,
    _$GAuthApplicationTokenInfoData,
  ];
  @override
  final String wireName = 'GAuthApplicationTokenInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GAuthApplicationTokenInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastUsedAt;
    if (value != null) {
      result
        ..add('lastUsedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.application;
    if (value != null) {
      result
        ..add('application')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GAuthApplicationTokenInfoData_application,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GAuthApplicationTokenInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GAuthApplicationTokenInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastUsedAt':
          result.lastUsedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'application':
          result.application.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GAuthApplicationTokenInfoData_application,
                  ),
                )!
                as GAuthApplicationTokenInfoData_application,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GAuthApplicationTokenInfoData_applicationSerializer
    implements StructuredSerializer<GAuthApplicationTokenInfoData_application> {
  @override
  final Iterable<Type> types = const [
    GAuthApplicationTokenInfoData_application,
    _$GAuthApplicationTokenInfoData_application,
  ];
  @override
  final String wireName = 'GAuthApplicationTokenInfoData_application';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GAuthApplicationTokenInfoData_application object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.clientId;
    if (value != null) {
      result
        ..add('clientId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.website;
    if (value != null) {
      result
        ..add('website')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GAuthApplicationTokenInfoData_application deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GAuthApplicationTokenInfoData_applicationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'clientId':
          result.clientId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'website':
          result.website =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GApplicationCodeAndStateInfoDataSerializer
    implements StructuredSerializer<GApplicationCodeAndStateInfoData> {
  @override
  final Iterable<Type> types = const [
    GApplicationCodeAndStateInfoData,
    _$GApplicationCodeAndStateInfoData,
  ];
  @override
  final String wireName = 'GApplicationCodeAndStateInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GApplicationCodeAndStateInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.code;
    if (value != null) {
      result
        ..add('code')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.state;
    if (value != null) {
      result
        ..add('state')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.clientId;
    if (value != null) {
      result
        ..add('clientId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.scope;
    if (value != null) {
      result
        ..add('scope')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GApplicationCodeAndStateInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GApplicationCodeAndStateInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'code':
          result.code =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'state':
          result.state =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'clientId':
          result.clientId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'scope':
          result.scope =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GApplicationDeviceActivationInfoDataSerializer
    implements StructuredSerializer<GApplicationDeviceActivationInfoData> {
  @override
  final Iterable<Type> types = const [
    GApplicationDeviceActivationInfoData,
    _$GApplicationDeviceActivationInfoData,
  ];
  @override
  final String wireName = 'GApplicationDeviceActivationInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GApplicationDeviceActivationInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.scope;
    if (value != null) {
      result
        ..add('scope')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.application;
    if (value != null) {
      result
        ..add('application')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GApplicationDeviceActivationInfoData_application,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GApplicationDeviceActivationInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GApplicationDeviceActivationInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'scope':
          result.scope =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'application':
          result.application.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GApplicationDeviceActivationInfoData_application,
                  ),
                )!
                as GApplicationDeviceActivationInfoData_application,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GApplicationDeviceActivationInfoData_applicationSerializer
    implements
        StructuredSerializer<GApplicationDeviceActivationInfoData_application> {
  @override
  final Iterable<Type> types = const [
    GApplicationDeviceActivationInfoData_application,
    _$GApplicationDeviceActivationInfoData_application,
  ];
  @override
  final String wireName = 'GApplicationDeviceActivationInfoData_application';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GApplicationDeviceActivationInfoData_application object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.clientId;
    if (value != null) {
      result
        ..add('clientId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.website;
    if (value != null) {
      result
        ..add('website')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GApplicationDeviceActivationInfoData_application deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        new GApplicationDeviceActivationInfoData_applicationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'clientId':
          result.clientId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'website':
          result.website =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAuthApplicationInfoData extends GAuthApplicationInfoData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final String? clientId;
  @override
  final String? website;

  factory _$GAuthApplicationInfoData([
    void Function(GAuthApplicationInfoDataBuilder)? updates,
  ]) => (new GAuthApplicationInfoDataBuilder()..update(updates))._build();

  _$GAuthApplicationInfoData._({
    required this.G__typename,
    this.id,
    this.name,
    this.clientId,
    this.website,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GAuthApplicationInfoData',
      'G__typename',
    );
  }

  @override
  GAuthApplicationInfoData rebuild(
    void Function(GAuthApplicationInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GAuthApplicationInfoDataBuilder toBuilder() =>
      new GAuthApplicationInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuthApplicationInfoData &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        clientId == other.clientId &&
        website == other.website;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, clientId.hashCode);
    _$hash = $jc(_$hash, website.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAuthApplicationInfoData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('clientId', clientId)
          ..add('website', website))
        .toString();
  }
}

class GAuthApplicationInfoDataBuilder
    implements
        Builder<GAuthApplicationInfoData, GAuthApplicationInfoDataBuilder> {
  _$GAuthApplicationInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _clientId;
  String? get clientId => _$this._clientId;
  set clientId(String? clientId) => _$this._clientId = clientId;

  String? _website;
  String? get website => _$this._website;
  set website(String? website) => _$this._website = website;

  GAuthApplicationInfoDataBuilder() {
    GAuthApplicationInfoData._initializeBuilder(this);
  }

  GAuthApplicationInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _clientId = $v.clientId;
      _website = $v.website;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuthApplicationInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuthApplicationInfoData;
  }

  @override
  void update(void Function(GAuthApplicationInfoDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuthApplicationInfoData build() => _build();

  _$GAuthApplicationInfoData _build() {
    final _$result =
        _$v ??
        new _$GAuthApplicationInfoData._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GAuthApplicationInfoData',
            'G__typename',
          ),
          id: id,
          name: name,
          clientId: clientId,
          website: website,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GAuthApplicationTokenInfoData extends GAuthApplicationTokenInfoData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? insertedAt;
  @override
  final String? lastUsedAt;
  @override
  final GAuthApplicationTokenInfoData_application? application;

  factory _$GAuthApplicationTokenInfoData([
    void Function(GAuthApplicationTokenInfoDataBuilder)? updates,
  ]) => (new GAuthApplicationTokenInfoDataBuilder()..update(updates))._build();

  _$GAuthApplicationTokenInfoData._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.lastUsedAt,
    this.application,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GAuthApplicationTokenInfoData',
      'G__typename',
    );
  }

  @override
  GAuthApplicationTokenInfoData rebuild(
    void Function(GAuthApplicationTokenInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GAuthApplicationTokenInfoDataBuilder toBuilder() =>
      new GAuthApplicationTokenInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuthApplicationTokenInfoData &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        lastUsedAt == other.lastUsedAt &&
        application == other.application;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, lastUsedAt.hashCode);
    _$hash = $jc(_$hash, application.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAuthApplicationTokenInfoData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('lastUsedAt', lastUsedAt)
          ..add('application', application))
        .toString();
  }
}

class GAuthApplicationTokenInfoDataBuilder
    implements
        Builder<
          GAuthApplicationTokenInfoData,
          GAuthApplicationTokenInfoDataBuilder
        > {
  _$GAuthApplicationTokenInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _insertedAt;
  String? get insertedAt => _$this._insertedAt;
  set insertedAt(String? insertedAt) => _$this._insertedAt = insertedAt;

  String? _lastUsedAt;
  String? get lastUsedAt => _$this._lastUsedAt;
  set lastUsedAt(String? lastUsedAt) => _$this._lastUsedAt = lastUsedAt;

  GAuthApplicationTokenInfoData_applicationBuilder? _application;
  GAuthApplicationTokenInfoData_applicationBuilder get application =>
      _$this._application ??=
          new GAuthApplicationTokenInfoData_applicationBuilder();
  set application(
    GAuthApplicationTokenInfoData_applicationBuilder? application,
  ) => _$this._application = application;

  GAuthApplicationTokenInfoDataBuilder() {
    GAuthApplicationTokenInfoData._initializeBuilder(this);
  }

  GAuthApplicationTokenInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _lastUsedAt = $v.lastUsedAt;
      _application = $v.application?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuthApplicationTokenInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuthApplicationTokenInfoData;
  }

  @override
  void update(void Function(GAuthApplicationTokenInfoDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAuthApplicationTokenInfoData build() => _build();

  _$GAuthApplicationTokenInfoData _build() {
    _$GAuthApplicationTokenInfoData _$result;
    try {
      _$result =
          _$v ??
          new _$GAuthApplicationTokenInfoData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GAuthApplicationTokenInfoData',
              'G__typename',
            ),
            id: id,
            insertedAt: insertedAt,
            lastUsedAt: lastUsedAt,
            application: _application?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'application';
        _application?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GAuthApplicationTokenInfoData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAuthApplicationTokenInfoData_application
    extends GAuthApplicationTokenInfoData_application {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final String? clientId;
  @override
  final String? website;

  factory _$GAuthApplicationTokenInfoData_application([
    void Function(GAuthApplicationTokenInfoData_applicationBuilder)? updates,
  ]) =>
      (new GAuthApplicationTokenInfoData_applicationBuilder()..update(updates))
          ._build();

  _$GAuthApplicationTokenInfoData_application._({
    required this.G__typename,
    this.id,
    this.name,
    this.clientId,
    this.website,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GAuthApplicationTokenInfoData_application',
      'G__typename',
    );
  }

  @override
  GAuthApplicationTokenInfoData_application rebuild(
    void Function(GAuthApplicationTokenInfoData_applicationBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GAuthApplicationTokenInfoData_applicationBuilder toBuilder() =>
      new GAuthApplicationTokenInfoData_applicationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAuthApplicationTokenInfoData_application &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        clientId == other.clientId &&
        website == other.website;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, clientId.hashCode);
    _$hash = $jc(_$hash, website.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAuthApplicationTokenInfoData_application',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('clientId', clientId)
          ..add('website', website))
        .toString();
  }
}

class GAuthApplicationTokenInfoData_applicationBuilder
    implements
        Builder<
          GAuthApplicationTokenInfoData_application,
          GAuthApplicationTokenInfoData_applicationBuilder
        > {
  _$GAuthApplicationTokenInfoData_application? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _clientId;
  String? get clientId => _$this._clientId;
  set clientId(String? clientId) => _$this._clientId = clientId;

  String? _website;
  String? get website => _$this._website;
  set website(String? website) => _$this._website = website;

  GAuthApplicationTokenInfoData_applicationBuilder() {
    GAuthApplicationTokenInfoData_application._initializeBuilder(this);
  }

  GAuthApplicationTokenInfoData_applicationBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _clientId = $v.clientId;
      _website = $v.website;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAuthApplicationTokenInfoData_application other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAuthApplicationTokenInfoData_application;
  }

  @override
  void update(
    void Function(GAuthApplicationTokenInfoData_applicationBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GAuthApplicationTokenInfoData_application build() => _build();

  _$GAuthApplicationTokenInfoData_application _build() {
    final _$result =
        _$v ??
        new _$GAuthApplicationTokenInfoData_application._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GAuthApplicationTokenInfoData_application',
            'G__typename',
          ),
          id: id,
          name: name,
          clientId: clientId,
          website: website,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GApplicationCodeAndStateInfoData
    extends GApplicationCodeAndStateInfoData {
  @override
  final String G__typename;
  @override
  final String? code;
  @override
  final String? state;
  @override
  final String? clientId;
  @override
  final String? scope;

  factory _$GApplicationCodeAndStateInfoData([
    void Function(GApplicationCodeAndStateInfoDataBuilder)? updates,
  ]) =>
      (new GApplicationCodeAndStateInfoDataBuilder()..update(updates))._build();

  _$GApplicationCodeAndStateInfoData._({
    required this.G__typename,
    this.code,
    this.state,
    this.clientId,
    this.scope,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GApplicationCodeAndStateInfoData',
      'G__typename',
    );
  }

  @override
  GApplicationCodeAndStateInfoData rebuild(
    void Function(GApplicationCodeAndStateInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GApplicationCodeAndStateInfoDataBuilder toBuilder() =>
      new GApplicationCodeAndStateInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GApplicationCodeAndStateInfoData &&
        G__typename == other.G__typename &&
        code == other.code &&
        state == other.state &&
        clientId == other.clientId &&
        scope == other.scope;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, state.hashCode);
    _$hash = $jc(_$hash, clientId.hashCode);
    _$hash = $jc(_$hash, scope.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GApplicationCodeAndStateInfoData')
          ..add('G__typename', G__typename)
          ..add('code', code)
          ..add('state', state)
          ..add('clientId', clientId)
          ..add('scope', scope))
        .toString();
  }
}

class GApplicationCodeAndStateInfoDataBuilder
    implements
        Builder<
          GApplicationCodeAndStateInfoData,
          GApplicationCodeAndStateInfoDataBuilder
        > {
  _$GApplicationCodeAndStateInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  String? _state;
  String? get state => _$this._state;
  set state(String? state) => _$this._state = state;

  String? _clientId;
  String? get clientId => _$this._clientId;
  set clientId(String? clientId) => _$this._clientId = clientId;

  String? _scope;
  String? get scope => _$this._scope;
  set scope(String? scope) => _$this._scope = scope;

  GApplicationCodeAndStateInfoDataBuilder() {
    GApplicationCodeAndStateInfoData._initializeBuilder(this);
  }

  GApplicationCodeAndStateInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _code = $v.code;
      _state = $v.state;
      _clientId = $v.clientId;
      _scope = $v.scope;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GApplicationCodeAndStateInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GApplicationCodeAndStateInfoData;
  }

  @override
  void update(void Function(GApplicationCodeAndStateInfoDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GApplicationCodeAndStateInfoData build() => _build();

  _$GApplicationCodeAndStateInfoData _build() {
    final _$result =
        _$v ??
        new _$GApplicationCodeAndStateInfoData._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GApplicationCodeAndStateInfoData',
            'G__typename',
          ),
          code: code,
          state: state,
          clientId: clientId,
          scope: scope,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GApplicationDeviceActivationInfoData
    extends GApplicationDeviceActivationInfoData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? scope;
  @override
  final GApplicationDeviceActivationInfoData_application? application;

  factory _$GApplicationDeviceActivationInfoData([
    void Function(GApplicationDeviceActivationInfoDataBuilder)? updates,
  ]) => (new GApplicationDeviceActivationInfoDataBuilder()..update(updates))
      ._build();

  _$GApplicationDeviceActivationInfoData._({
    required this.G__typename,
    this.id,
    this.scope,
    this.application,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GApplicationDeviceActivationInfoData',
      'G__typename',
    );
  }

  @override
  GApplicationDeviceActivationInfoData rebuild(
    void Function(GApplicationDeviceActivationInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GApplicationDeviceActivationInfoDataBuilder toBuilder() =>
      new GApplicationDeviceActivationInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GApplicationDeviceActivationInfoData &&
        G__typename == other.G__typename &&
        id == other.id &&
        scope == other.scope &&
        application == other.application;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, scope.hashCode);
    _$hash = $jc(_$hash, application.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GApplicationDeviceActivationInfoData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('scope', scope)
          ..add('application', application))
        .toString();
  }
}

class GApplicationDeviceActivationInfoDataBuilder
    implements
        Builder<
          GApplicationDeviceActivationInfoData,
          GApplicationDeviceActivationInfoDataBuilder
        > {
  _$GApplicationDeviceActivationInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _scope;
  String? get scope => _$this._scope;
  set scope(String? scope) => _$this._scope = scope;

  GApplicationDeviceActivationInfoData_applicationBuilder? _application;
  GApplicationDeviceActivationInfoData_applicationBuilder get application =>
      _$this._application ??=
          new GApplicationDeviceActivationInfoData_applicationBuilder();
  set application(
    GApplicationDeviceActivationInfoData_applicationBuilder? application,
  ) => _$this._application = application;

  GApplicationDeviceActivationInfoDataBuilder() {
    GApplicationDeviceActivationInfoData._initializeBuilder(this);
  }

  GApplicationDeviceActivationInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _scope = $v.scope;
      _application = $v.application?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GApplicationDeviceActivationInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GApplicationDeviceActivationInfoData;
  }

  @override
  void update(
    void Function(GApplicationDeviceActivationInfoDataBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GApplicationDeviceActivationInfoData build() => _build();

  _$GApplicationDeviceActivationInfoData _build() {
    _$GApplicationDeviceActivationInfoData _$result;
    try {
      _$result =
          _$v ??
          new _$GApplicationDeviceActivationInfoData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GApplicationDeviceActivationInfoData',
              'G__typename',
            ),
            id: id,
            scope: scope,
            application: _application?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'application';
        _application?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GApplicationDeviceActivationInfoData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GApplicationDeviceActivationInfoData_application
    extends GApplicationDeviceActivationInfoData_application {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final String? clientId;
  @override
  final String? website;

  factory _$GApplicationDeviceActivationInfoData_application([
    void Function(GApplicationDeviceActivationInfoData_applicationBuilder)?
    updates,
  ]) =>
      (new GApplicationDeviceActivationInfoData_applicationBuilder()
            ..update(updates))
          ._build();

  _$GApplicationDeviceActivationInfoData_application._({
    required this.G__typename,
    this.id,
    this.name,
    this.clientId,
    this.website,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GApplicationDeviceActivationInfoData_application',
      'G__typename',
    );
  }

  @override
  GApplicationDeviceActivationInfoData_application rebuild(
    void Function(GApplicationDeviceActivationInfoData_applicationBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GApplicationDeviceActivationInfoData_applicationBuilder toBuilder() =>
      new GApplicationDeviceActivationInfoData_applicationBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GApplicationDeviceActivationInfoData_application &&
        G__typename == other.G__typename &&
        id == other.id &&
        name == other.name &&
        clientId == other.clientId &&
        website == other.website;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, clientId.hashCode);
    _$hash = $jc(_$hash, website.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GApplicationDeviceActivationInfoData_application',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('name', name)
          ..add('clientId', clientId)
          ..add('website', website))
        .toString();
  }
}

class GApplicationDeviceActivationInfoData_applicationBuilder
    implements
        Builder<
          GApplicationDeviceActivationInfoData_application,
          GApplicationDeviceActivationInfoData_applicationBuilder
        > {
  _$GApplicationDeviceActivationInfoData_application? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _clientId;
  String? get clientId => _$this._clientId;
  set clientId(String? clientId) => _$this._clientId = clientId;

  String? _website;
  String? get website => _$this._website;
  set website(String? website) => _$this._website = website;

  GApplicationDeviceActivationInfoData_applicationBuilder() {
    GApplicationDeviceActivationInfoData_application._initializeBuilder(this);
  }

  GApplicationDeviceActivationInfoData_applicationBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _name = $v.name;
      _clientId = $v.clientId;
      _website = $v.website;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GApplicationDeviceActivationInfoData_application other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GApplicationDeviceActivationInfoData_application;
  }

  @override
  void update(
    void Function(GApplicationDeviceActivationInfoData_applicationBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GApplicationDeviceActivationInfoData_application build() => _build();

  _$GApplicationDeviceActivationInfoData_application _build() {
    final _$result =
        _$v ??
        new _$GApplicationDeviceActivationInfoData_application._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GApplicationDeviceActivationInfoData_application',
            'G__typename',
          ),
          id: id,
          name: name,
          clientId: clientId,
          website: website,
        );
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
