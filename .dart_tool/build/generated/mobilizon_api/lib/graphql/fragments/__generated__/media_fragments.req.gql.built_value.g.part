// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GMediaBasicInfoReq> _$gMediaBasicInfoReqSerializer =
    new _$GMediaBasicInfoReqSerializer();
Serializer<GMediaWithMetadataReq> _$gMediaWithMetadataReqSerializer =
    new _$GMediaWithMetadataReqSerializer();

class _$GMediaBasicInfoReqSerializer
    implements StructuredSerializer<GMediaBasicInfoReq> {
  @override
  final Iterable<Type> types = const [GMediaBasicInfoReq, _$GMediaBasicInfoReq];
  @override
  final String wireName = 'GMediaBasicInfoReq';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GMediaBasicInfoReq object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      'vars',
      serializers.serialize(
        object.vars,
        specifiedType: const FullType(_i3.GMediaBasicInfoVars),
      ),
      'document',
      serializers.serialize(
        object.document,
        specifiedType: const FullType(_i5.DocumentNode),
      ),
      'idFields',
      serializers.serialize(
        object.idFields,
        specifiedType: const FullType(Map, const [
          const FullType(String),
          const FullType(dynamic),
        ]),
      ),
    ];
    Object? value;
    value = object.fragmentName;
    if (value != null) {
      result
        ..add('fragmentName')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GMediaBasicInfoReq deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GMediaBasicInfoReqBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'vars':
          result.vars.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i3.GMediaBasicInfoVars),
                )!
                as _i3.GMediaBasicInfoVars,
          );
          break;
        case 'document':
          result.document =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i5.DocumentNode),
                  )!
                  as _i5.DocumentNode;
          break;
        case 'fragmentName':
          result.fragmentName =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'idFields':
          result.idFields =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(Map, const [
                      const FullType(String),
                      const FullType(dynamic),
                    ]),
                  )!
                  as Map<String, dynamic>;
          break;
      }
    }

    return result.build();
  }
}

class _$GMediaWithMetadataReqSerializer
    implements StructuredSerializer<GMediaWithMetadataReq> {
  @override
  final Iterable<Type> types = const [
    GMediaWithMetadataReq,
    _$GMediaWithMetadataReq,
  ];
  @override
  final String wireName = 'GMediaWithMetadataReq';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GMediaWithMetadataReq object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      'vars',
      serializers.serialize(
        object.vars,
        specifiedType: const FullType(_i3.GMediaWithMetadataVars),
      ),
      'document',
      serializers.serialize(
        object.document,
        specifiedType: const FullType(_i5.DocumentNode),
      ),
      'idFields',
      serializers.serialize(
        object.idFields,
        specifiedType: const FullType(Map, const [
          const FullType(String),
          const FullType(dynamic),
        ]),
      ),
    ];
    Object? value;
    value = object.fragmentName;
    if (value != null) {
      result
        ..add('fragmentName')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GMediaWithMetadataReq deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GMediaWithMetadataReqBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'vars':
          result.vars.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i3.GMediaWithMetadataVars),
                )!
                as _i3.GMediaWithMetadataVars,
          );
          break;
        case 'document':
          result.document =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i5.DocumentNode),
                  )!
                  as _i5.DocumentNode;
          break;
        case 'fragmentName':
          result.fragmentName =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'idFields':
          result.idFields =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(Map, const [
                      const FullType(String),
                      const FullType(dynamic),
                    ]),
                  )!
                  as Map<String, dynamic>;
          break;
      }
    }

    return result.build();
  }
}

class _$GMediaBasicInfoReq extends GMediaBasicInfoReq {
  @override
  final _i3.GMediaBasicInfoVars vars;
  @override
  final _i5.DocumentNode document;
  @override
  final String? fragmentName;
  @override
  final Map<String, dynamic> idFields;

  factory _$GMediaBasicInfoReq([
    void Function(GMediaBasicInfoReqBuilder)? updates,
  ]) => (new GMediaBasicInfoReqBuilder()..update(updates))._build();

  _$GMediaBasicInfoReq._({
    required this.vars,
    required this.document,
    this.fragmentName,
    required this.idFields,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(vars, r'GMediaBasicInfoReq', 'vars');
    BuiltValueNullFieldError.checkNotNull(
      document,
      r'GMediaBasicInfoReq',
      'document',
    );
    BuiltValueNullFieldError.checkNotNull(
      idFields,
      r'GMediaBasicInfoReq',
      'idFields',
    );
  }

  @override
  GMediaBasicInfoReq rebuild(
    void Function(GMediaBasicInfoReqBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GMediaBasicInfoReqBuilder toBuilder() =>
      new GMediaBasicInfoReqBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMediaBasicInfoReq &&
        vars == other.vars &&
        document == other.document &&
        fragmentName == other.fragmentName &&
        idFields == other.idFields;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, vars.hashCode);
    _$hash = $jc(_$hash, document.hashCode);
    _$hash = $jc(_$hash, fragmentName.hashCode);
    _$hash = $jc(_$hash, idFields.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMediaBasicInfoReq')
          ..add('vars', vars)
          ..add('document', document)
          ..add('fragmentName', fragmentName)
          ..add('idFields', idFields))
        .toString();
  }
}

class GMediaBasicInfoReqBuilder
    implements Builder<GMediaBasicInfoReq, GMediaBasicInfoReqBuilder> {
  _$GMediaBasicInfoReq? _$v;

  _i3.GMediaBasicInfoVarsBuilder? _vars;
  _i3.GMediaBasicInfoVarsBuilder get vars =>
      _$this._vars ??= new _i3.GMediaBasicInfoVarsBuilder();
  set vars(_i3.GMediaBasicInfoVarsBuilder? vars) => _$this._vars = vars;

  _i5.DocumentNode? _document;
  _i5.DocumentNode? get document => _$this._document;
  set document(_i5.DocumentNode? document) => _$this._document = document;

  String? _fragmentName;
  String? get fragmentName => _$this._fragmentName;
  set fragmentName(String? fragmentName) => _$this._fragmentName = fragmentName;

  Map<String, dynamic>? _idFields;
  Map<String, dynamic>? get idFields => _$this._idFields;
  set idFields(Map<String, dynamic>? idFields) => _$this._idFields = idFields;

  GMediaBasicInfoReqBuilder() {
    GMediaBasicInfoReq._initializeBuilder(this);
  }

  GMediaBasicInfoReqBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _vars = $v.vars.toBuilder();
      _document = $v.document;
      _fragmentName = $v.fragmentName;
      _idFields = $v.idFields;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMediaBasicInfoReq other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMediaBasicInfoReq;
  }

  @override
  void update(void Function(GMediaBasicInfoReqBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMediaBasicInfoReq build() => _build();

  _$GMediaBasicInfoReq _build() {
    _$GMediaBasicInfoReq _$result;
    try {
      _$result =
          _$v ??
          new _$GMediaBasicInfoReq._(
            vars: vars.build(),
            document: BuiltValueNullFieldError.checkNotNull(
              document,
              r'GMediaBasicInfoReq',
              'document',
            ),
            fragmentName: fragmentName,
            idFields: BuiltValueNullFieldError.checkNotNull(
              idFields,
              r'GMediaBasicInfoReq',
              'idFields',
            ),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'vars';
        vars.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GMediaBasicInfoReq',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMediaWithMetadataReq extends GMediaWithMetadataReq {
  @override
  final _i3.GMediaWithMetadataVars vars;
  @override
  final _i5.DocumentNode document;
  @override
  final String? fragmentName;
  @override
  final Map<String, dynamic> idFields;

  factory _$GMediaWithMetadataReq([
    void Function(GMediaWithMetadataReqBuilder)? updates,
  ]) => (new GMediaWithMetadataReqBuilder()..update(updates))._build();

  _$GMediaWithMetadataReq._({
    required this.vars,
    required this.document,
    this.fragmentName,
    required this.idFields,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      vars,
      r'GMediaWithMetadataReq',
      'vars',
    );
    BuiltValueNullFieldError.checkNotNull(
      document,
      r'GMediaWithMetadataReq',
      'document',
    );
    BuiltValueNullFieldError.checkNotNull(
      idFields,
      r'GMediaWithMetadataReq',
      'idFields',
    );
  }

  @override
  GMediaWithMetadataReq rebuild(
    void Function(GMediaWithMetadataReqBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GMediaWithMetadataReqBuilder toBuilder() =>
      new GMediaWithMetadataReqBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMediaWithMetadataReq &&
        vars == other.vars &&
        document == other.document &&
        fragmentName == other.fragmentName &&
        idFields == other.idFields;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, vars.hashCode);
    _$hash = $jc(_$hash, document.hashCode);
    _$hash = $jc(_$hash, fragmentName.hashCode);
    _$hash = $jc(_$hash, idFields.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMediaWithMetadataReq')
          ..add('vars', vars)
          ..add('document', document)
          ..add('fragmentName', fragmentName)
          ..add('idFields', idFields))
        .toString();
  }
}

class GMediaWithMetadataReqBuilder
    implements Builder<GMediaWithMetadataReq, GMediaWithMetadataReqBuilder> {
  _$GMediaWithMetadataReq? _$v;

  _i3.GMediaWithMetadataVarsBuilder? _vars;
  _i3.GMediaWithMetadataVarsBuilder get vars =>
      _$this._vars ??= new _i3.GMediaWithMetadataVarsBuilder();
  set vars(_i3.GMediaWithMetadataVarsBuilder? vars) => _$this._vars = vars;

  _i5.DocumentNode? _document;
  _i5.DocumentNode? get document => _$this._document;
  set document(_i5.DocumentNode? document) => _$this._document = document;

  String? _fragmentName;
  String? get fragmentName => _$this._fragmentName;
  set fragmentName(String? fragmentName) => _$this._fragmentName = fragmentName;

  Map<String, dynamic>? _idFields;
  Map<String, dynamic>? get idFields => _$this._idFields;
  set idFields(Map<String, dynamic>? idFields) => _$this._idFields = idFields;

  GMediaWithMetadataReqBuilder() {
    GMediaWithMetadataReq._initializeBuilder(this);
  }

  GMediaWithMetadataReqBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _vars = $v.vars.toBuilder();
      _document = $v.document;
      _fragmentName = $v.fragmentName;
      _idFields = $v.idFields;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMediaWithMetadataReq other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMediaWithMetadataReq;
  }

  @override
  void update(void Function(GMediaWithMetadataReqBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMediaWithMetadataReq build() => _build();

  _$GMediaWithMetadataReq _build() {
    _$GMediaWithMetadataReq _$result;
    try {
      _$result =
          _$v ??
          new _$GMediaWithMetadataReq._(
            vars: vars.build(),
            document: BuiltValueNullFieldError.checkNotNull(
              document,
              r'GMediaWithMetadataReq',
              'document',
            ),
            fragmentName: fragmentName,
            idFields: BuiltValueNullFieldError.checkNotNull(
              idFields,
              r'GMediaWithMetadataReq',
              'idFields',
            ),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'vars';
        vars.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GMediaWithMetadataReq',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
