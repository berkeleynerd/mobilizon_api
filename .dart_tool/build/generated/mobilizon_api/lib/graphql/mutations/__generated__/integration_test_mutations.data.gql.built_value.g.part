// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GSimpleLoginData> _$gSimpleLoginDataSerializer =
    new _$GSimpleLoginDataSerializer();
Serializer<GSimpleLoginData_login> _$gSimpleLoginDataLoginSerializer =
    new _$GSimpleLoginData_loginSerializer();
Serializer<GSimpleLoginData_login_user> _$gSimpleLoginDataLoginUserSerializer =
    new _$GSimpleLoginData_login_userSerializer();
Serializer<GSimpleLoginData_login_user_defaultActor>
_$gSimpleLoginDataLoginUserDefaultActorSerializer =
    new _$GSimpleLoginData_login_user_defaultActorSerializer();
Serializer<GSimpleLoginData_login_user_actors>
_$gSimpleLoginDataLoginUserActorsSerializer =
    new _$GSimpleLoginData_login_user_actorsSerializer();
Serializer<GSimpleLoginData_login_user_actors_avatar>
_$gSimpleLoginDataLoginUserActorsAvatarSerializer =
    new _$GSimpleLoginData_login_user_actors_avatarSerializer();
Serializer<GSimpleLogoutData> _$gSimpleLogoutDataSerializer =
    new _$GSimpleLogoutDataSerializer();
Serializer<GSimpleRefreshTokenData> _$gSimpleRefreshTokenDataSerializer =
    new _$GSimpleRefreshTokenDataSerializer();
Serializer<GSimpleRefreshTokenData_refreshToken>
_$gSimpleRefreshTokenDataRefreshTokenSerializer =
    new _$GSimpleRefreshTokenData_refreshTokenSerializer();

class _$GSimpleLoginDataSerializer
    implements StructuredSerializer<GSimpleLoginData> {
  @override
  final Iterable<Type> types = const [GSimpleLoginData, _$GSimpleLoginData];
  @override
  final String wireName = 'GSimpleLoginData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLoginData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.login;
    if (value != null) {
      result
        ..add('login')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GSimpleLoginData_login),
          ),
        );
    }
    return result;
  }

  @override
  GSimpleLoginData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLoginDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'login':
          result.login.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GSimpleLoginData_login),
                )!
                as GSimpleLoginData_login,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLoginData_loginSerializer
    implements StructuredSerializer<GSimpleLoginData_login> {
  @override
  final Iterable<Type> types = const [
    GSimpleLoginData_login,
    _$GSimpleLoginData_login,
  ];
  @override
  final String wireName = 'GSimpleLoginData_login';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLoginData_login object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'accessToken',
      serializers.serialize(
        object.accessToken,
        specifiedType: const FullType(String),
      ),
      'refreshToken',
      serializers.serialize(
        object.refreshToken,
        specifiedType: const FullType(String),
      ),
      'user',
      serializers.serialize(
        object.user,
        specifiedType: const FullType(GSimpleLoginData_login_user),
      ),
    ];

    return result;
  }

  @override
  GSimpleLoginData_login deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLoginData_loginBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'accessToken':
          result.accessToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'refreshToken':
          result.refreshToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GSimpleLoginData_login_user),
                )!
                as GSimpleLoginData_login_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLoginData_login_userSerializer
    implements StructuredSerializer<GSimpleLoginData_login_user> {
  @override
  final Iterable<Type> types = const [
    GSimpleLoginData_login_user,
    _$GSimpleLoginData_login_user,
  ];
  @override
  final String wireName = 'GSimpleLoginData_login_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLoginData_login_user object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
      'actors',
      serializers.serialize(
        object.actors,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(GSimpleLoginData_login_user_actors),
        ]),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    value = object.defaultActor;
    if (value != null) {
      result
        ..add('defaultActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GSimpleLoginData_login_user_defaultActor,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GSimpleLoginData_login_user deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLoginData_login_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmedAt':
          result.confirmedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
        case 'defaultActor':
          result.defaultActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GSimpleLoginData_login_user_defaultActor,
                  ),
                )!
                as GSimpleLoginData_login_user_defaultActor,
          );
          break;
        case 'actors':
          result.actors.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(GSimpleLoginData_login_user_actors),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLoginData_login_user_defaultActorSerializer
    implements StructuredSerializer<GSimpleLoginData_login_user_defaultActor> {
  @override
  final Iterable<Type> types = const [
    GSimpleLoginData_login_user_defaultActor,
    _$GSimpleLoginData_login_user_defaultActor,
  ];
  @override
  final String wireName = 'GSimpleLoginData_login_user_defaultActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLoginData_login_user_defaultActor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GSimpleLoginData_login_user_defaultActor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLoginData_login_user_defaultActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLoginData_login_user_actorsSerializer
    implements StructuredSerializer<GSimpleLoginData_login_user_actors> {
  @override
  final Iterable<Type> types = const [
    GSimpleLoginData_login_user_actors,
    _$GSimpleLoginData_login_user_actors,
  ];
  @override
  final String wireName = 'GSimpleLoginData_login_user_actors';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLoginData_login_user_actors object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GSimpleLoginData_login_user_actors_avatar,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GSimpleLoginData_login_user_actors deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLoginData_login_user_actorsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GSimpleLoginData_login_user_actors_avatar,
                  ),
                )!
                as GSimpleLoginData_login_user_actors_avatar,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLoginData_login_user_actors_avatarSerializer
    implements StructuredSerializer<GSimpleLoginData_login_user_actors_avatar> {
  @override
  final Iterable<Type> types = const [
    GSimpleLoginData_login_user_actors_avatar,
    _$GSimpleLoginData_login_user_actors_avatar,
  ];
  @override
  final String wireName = 'GSimpleLoginData_login_user_actors_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLoginData_login_user_actors_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GSimpleLoginData_login_user_actors_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLoginData_login_user_actors_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLogoutDataSerializer
    implements StructuredSerializer<GSimpleLogoutData> {
  @override
  final Iterable<Type> types = const [GSimpleLogoutData, _$GSimpleLogoutData];
  @override
  final String wireName = 'GSimpleLogoutData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleLogoutData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.logout;
    if (value != null) {
      result
        ..add('logout')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GSimpleLogoutData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleLogoutDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'logout':
          result.logout =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleRefreshTokenDataSerializer
    implements StructuredSerializer<GSimpleRefreshTokenData> {
  @override
  final Iterable<Type> types = const [
    GSimpleRefreshTokenData,
    _$GSimpleRefreshTokenData,
  ];
  @override
  final String wireName = 'GSimpleRefreshTokenData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleRefreshTokenData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.refreshToken;
    if (value != null) {
      result
        ..add('refreshToken')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GSimpleRefreshTokenData_refreshToken),
          ),
        );
    }
    return result;
  }

  @override
  GSimpleRefreshTokenData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleRefreshTokenDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'refreshToken':
          result.refreshToken.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GSimpleRefreshTokenData_refreshToken,
                  ),
                )!
                as GSimpleRefreshTokenData_refreshToken,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleRefreshTokenData_refreshTokenSerializer
    implements StructuredSerializer<GSimpleRefreshTokenData_refreshToken> {
  @override
  final Iterable<Type> types = const [
    GSimpleRefreshTokenData_refreshToken,
    _$GSimpleRefreshTokenData_refreshToken,
  ];
  @override
  final String wireName = 'GSimpleRefreshTokenData_refreshToken';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GSimpleRefreshTokenData_refreshToken object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'accessToken',
      serializers.serialize(
        object.accessToken,
        specifiedType: const FullType(String),
      ),
      'refreshToken',
      serializers.serialize(
        object.refreshToken,
        specifiedType: const FullType(String),
      ),
    ];

    return result;
  }

  @override
  GSimpleRefreshTokenData_refreshToken deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GSimpleRefreshTokenData_refreshTokenBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'accessToken':
          result.accessToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'refreshToken':
          result.refreshToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSimpleLoginData extends GSimpleLoginData {
  @override
  final String G__typename;
  @override
  final GSimpleLoginData_login? login;

  factory _$GSimpleLoginData([
    void Function(GSimpleLoginDataBuilder)? updates,
  ]) => (new GSimpleLoginDataBuilder()..update(updates))._build();

  _$GSimpleLoginData._({required this.G__typename, this.login}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLoginData',
      'G__typename',
    );
  }

  @override
  GSimpleLoginData rebuild(void Function(GSimpleLoginDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSimpleLoginDataBuilder toBuilder() =>
      new GSimpleLoginDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLoginData &&
        G__typename == other.G__typename &&
        login == other.login;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, login.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleLoginData')
          ..add('G__typename', G__typename)
          ..add('login', login))
        .toString();
  }
}

class GSimpleLoginDataBuilder
    implements Builder<GSimpleLoginData, GSimpleLoginDataBuilder> {
  _$GSimpleLoginData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GSimpleLoginData_loginBuilder? _login;
  GSimpleLoginData_loginBuilder get login =>
      _$this._login ??= new GSimpleLoginData_loginBuilder();
  set login(GSimpleLoginData_loginBuilder? login) => _$this._login = login;

  GSimpleLoginDataBuilder() {
    GSimpleLoginData._initializeBuilder(this);
  }

  GSimpleLoginDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _login = $v.login?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLoginData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLoginData;
  }

  @override
  void update(void Function(GSimpleLoginDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLoginData build() => _build();

  _$GSimpleLoginData _build() {
    _$GSimpleLoginData _$result;
    try {
      _$result =
          _$v ??
          new _$GSimpleLoginData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GSimpleLoginData',
              'G__typename',
            ),
            login: _login?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'login';
        _login?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GSimpleLoginData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleLoginData_login extends GSimpleLoginData_login {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;
  @override
  final GSimpleLoginData_login_user user;

  factory _$GSimpleLoginData_login([
    void Function(GSimpleLoginData_loginBuilder)? updates,
  ]) => (new GSimpleLoginData_loginBuilder()..update(updates))._build();

  _$GSimpleLoginData_login._({
    required this.G__typename,
    required this.accessToken,
    required this.refreshToken,
    required this.user,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLoginData_login',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      accessToken,
      r'GSimpleLoginData_login',
      'accessToken',
    );
    BuiltValueNullFieldError.checkNotNull(
      refreshToken,
      r'GSimpleLoginData_login',
      'refreshToken',
    );
    BuiltValueNullFieldError.checkNotNull(
      user,
      r'GSimpleLoginData_login',
      'user',
    );
  }

  @override
  GSimpleLoginData_login rebuild(
    void Function(GSimpleLoginData_loginBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleLoginData_loginBuilder toBuilder() =>
      new GSimpleLoginData_loginBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLoginData_login &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleLoginData_login')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken)
          ..add('user', user))
        .toString();
  }
}

class GSimpleLoginData_loginBuilder
    implements Builder<GSimpleLoginData_login, GSimpleLoginData_loginBuilder> {
  _$GSimpleLoginData_login? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GSimpleLoginData_login_userBuilder? _user;
  GSimpleLoginData_login_userBuilder get user =>
      _$this._user ??= new GSimpleLoginData_login_userBuilder();
  set user(GSimpleLoginData_login_userBuilder? user) => _$this._user = user;

  GSimpleLoginData_loginBuilder() {
    GSimpleLoginData_login._initializeBuilder(this);
  }

  GSimpleLoginData_loginBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _user = $v.user.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLoginData_login other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLoginData_login;
  }

  @override
  void update(void Function(GSimpleLoginData_loginBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLoginData_login build() => _build();

  _$GSimpleLoginData_login _build() {
    _$GSimpleLoginData_login _$result;
    try {
      _$result =
          _$v ??
          new _$GSimpleLoginData_login._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GSimpleLoginData_login',
              'G__typename',
            ),
            accessToken: BuiltValueNullFieldError.checkNotNull(
              accessToken,
              r'GSimpleLoginData_login',
              'accessToken',
            ),
            refreshToken: BuiltValueNullFieldError.checkNotNull(
              refreshToken,
              r'GSimpleLoginData_login',
              'refreshToken',
            ),
            user: user.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'user';
        user.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GSimpleLoginData_login',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleLoginData_login_user extends GSimpleLoginData_login_user {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i2.GDateTime? confirmedAt;
  @override
  final _i2.GUserRole? role;
  @override
  final GSimpleLoginData_login_user_defaultActor? defaultActor;
  @override
  final BuiltList<GSimpleLoginData_login_user_actors?> actors;

  factory _$GSimpleLoginData_login_user([
    void Function(GSimpleLoginData_login_userBuilder)? updates,
  ]) => (new GSimpleLoginData_login_userBuilder()..update(updates))._build();

  _$GSimpleLoginData_login_user._({
    required this.G__typename,
    this.id,
    required this.email,
    this.confirmedAt,
    this.role,
    this.defaultActor,
    required this.actors,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLoginData_login_user',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      email,
      r'GSimpleLoginData_login_user',
      'email',
    );
    BuiltValueNullFieldError.checkNotNull(
      actors,
      r'GSimpleLoginData_login_user',
      'actors',
    );
  }

  @override
  GSimpleLoginData_login_user rebuild(
    void Function(GSimpleLoginData_login_userBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleLoginData_login_userBuilder toBuilder() =>
      new GSimpleLoginData_login_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLoginData_login_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        confirmedAt == other.confirmedAt &&
        role == other.role &&
        defaultActor == other.defaultActor &&
        actors == other.actors;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, defaultActor.hashCode);
    _$hash = $jc(_$hash, actors.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleLoginData_login_user')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('confirmedAt', confirmedAt)
          ..add('role', role)
          ..add('defaultActor', defaultActor)
          ..add('actors', actors))
        .toString();
  }
}

class GSimpleLoginData_login_userBuilder
    implements
        Builder<
          GSimpleLoginData_login_user,
          GSimpleLoginData_login_userBuilder
        > {
  _$GSimpleLoginData_login_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i2.GDateTimeBuilder? _confirmedAt;
  _i2.GDateTimeBuilder get confirmedAt =>
      _$this._confirmedAt ??= new _i2.GDateTimeBuilder();
  set confirmedAt(_i2.GDateTimeBuilder? confirmedAt) =>
      _$this._confirmedAt = confirmedAt;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GSimpleLoginData_login_user_defaultActorBuilder? _defaultActor;
  GSimpleLoginData_login_user_defaultActorBuilder get defaultActor =>
      _$this._defaultActor ??=
          new GSimpleLoginData_login_user_defaultActorBuilder();
  set defaultActor(
    GSimpleLoginData_login_user_defaultActorBuilder? defaultActor,
  ) => _$this._defaultActor = defaultActor;

  ListBuilder<GSimpleLoginData_login_user_actors?>? _actors;
  ListBuilder<GSimpleLoginData_login_user_actors?> get actors =>
      _$this._actors ??= new ListBuilder<GSimpleLoginData_login_user_actors?>();
  set actors(ListBuilder<GSimpleLoginData_login_user_actors?>? actors) =>
      _$this._actors = actors;

  GSimpleLoginData_login_userBuilder() {
    GSimpleLoginData_login_user._initializeBuilder(this);
  }

  GSimpleLoginData_login_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _confirmedAt = $v.confirmedAt?.toBuilder();
      _role = $v.role;
      _defaultActor = $v.defaultActor?.toBuilder();
      _actors = $v.actors.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLoginData_login_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLoginData_login_user;
  }

  @override
  void update(void Function(GSimpleLoginData_login_userBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLoginData_login_user build() => _build();

  _$GSimpleLoginData_login_user _build() {
    _$GSimpleLoginData_login_user _$result;
    try {
      _$result =
          _$v ??
          new _$GSimpleLoginData_login_user._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GSimpleLoginData_login_user',
              'G__typename',
            ),
            id: id,
            email: BuiltValueNullFieldError.checkNotNull(
              email,
              r'GSimpleLoginData_login_user',
              'email',
            ),
            confirmedAt: _confirmedAt?.build(),
            role: role,
            defaultActor: _defaultActor?.build(),
            actors: actors.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confirmedAt';
        _confirmedAt?.build();

        _$failedField = 'defaultActor';
        _defaultActor?.build();
        _$failedField = 'actors';
        actors.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GSimpleLoginData_login_user',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleLoginData_login_user_defaultActor
    extends GSimpleLoginData_login_user_defaultActor {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? summary;

  factory _$GSimpleLoginData_login_user_defaultActor([
    void Function(GSimpleLoginData_login_user_defaultActorBuilder)? updates,
  ]) => (new GSimpleLoginData_login_user_defaultActorBuilder()..update(updates))
      ._build();

  _$GSimpleLoginData_login_user_defaultActor._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.summary,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLoginData_login_user_defaultActor',
      'G__typename',
    );
  }

  @override
  GSimpleLoginData_login_user_defaultActor rebuild(
    void Function(GSimpleLoginData_login_user_defaultActorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleLoginData_login_user_defaultActorBuilder toBuilder() =>
      new GSimpleLoginData_login_user_defaultActorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLoginData_login_user_defaultActor &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        summary == other.summary;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSimpleLoginData_login_user_defaultActor',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('summary', summary))
        .toString();
  }
}

class GSimpleLoginData_login_user_defaultActorBuilder
    implements
        Builder<
          GSimpleLoginData_login_user_defaultActor,
          GSimpleLoginData_login_user_defaultActorBuilder
        > {
  _$GSimpleLoginData_login_user_defaultActor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  GSimpleLoginData_login_user_defaultActorBuilder() {
    GSimpleLoginData_login_user_defaultActor._initializeBuilder(this);
  }

  GSimpleLoginData_login_user_defaultActorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _summary = $v.summary;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLoginData_login_user_defaultActor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLoginData_login_user_defaultActor;
  }

  @override
  void update(
    void Function(GSimpleLoginData_login_user_defaultActorBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLoginData_login_user_defaultActor build() => _build();

  _$GSimpleLoginData_login_user_defaultActor _build() {
    final _$result =
        _$v ??
        new _$GSimpleLoginData_login_user_defaultActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GSimpleLoginData_login_user_defaultActor',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
          summary: summary,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleLoginData_login_user_actors
    extends GSimpleLoginData_login_user_actors {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? summary;
  @override
  final GSimpleLoginData_login_user_actors_avatar? avatar;

  factory _$GSimpleLoginData_login_user_actors([
    void Function(GSimpleLoginData_login_user_actorsBuilder)? updates,
  ]) => (new GSimpleLoginData_login_user_actorsBuilder()..update(updates))
      ._build();

  _$GSimpleLoginData_login_user_actors._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.summary,
    this.avatar,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLoginData_login_user_actors',
      'G__typename',
    );
  }

  @override
  GSimpleLoginData_login_user_actors rebuild(
    void Function(GSimpleLoginData_login_user_actorsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleLoginData_login_user_actorsBuilder toBuilder() =>
      new GSimpleLoginData_login_user_actorsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLoginData_login_user_actors &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        summary == other.summary &&
        avatar == other.avatar;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleLoginData_login_user_actors')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('summary', summary)
          ..add('avatar', avatar))
        .toString();
  }
}

class GSimpleLoginData_login_user_actorsBuilder
    implements
        Builder<
          GSimpleLoginData_login_user_actors,
          GSimpleLoginData_login_user_actorsBuilder
        > {
  _$GSimpleLoginData_login_user_actors? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  GSimpleLoginData_login_user_actors_avatarBuilder? _avatar;
  GSimpleLoginData_login_user_actors_avatarBuilder get avatar =>
      _$this._avatar ??= new GSimpleLoginData_login_user_actors_avatarBuilder();
  set avatar(GSimpleLoginData_login_user_actors_avatarBuilder? avatar) =>
      _$this._avatar = avatar;

  GSimpleLoginData_login_user_actorsBuilder() {
    GSimpleLoginData_login_user_actors._initializeBuilder(this);
  }

  GSimpleLoginData_login_user_actorsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _summary = $v.summary;
      _avatar = $v.avatar?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLoginData_login_user_actors other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLoginData_login_user_actors;
  }

  @override
  void update(
    void Function(GSimpleLoginData_login_user_actorsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLoginData_login_user_actors build() => _build();

  _$GSimpleLoginData_login_user_actors _build() {
    _$GSimpleLoginData_login_user_actors _$result;
    try {
      _$result =
          _$v ??
          new _$GSimpleLoginData_login_user_actors._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GSimpleLoginData_login_user_actors',
              'G__typename',
            ),
            id: id,
            preferredUsername: preferredUsername,
            name: name,
            summary: summary,
            avatar: _avatar?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GSimpleLoginData_login_user_actors',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleLoginData_login_user_actors_avatar
    extends GSimpleLoginData_login_user_actors_avatar {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? url;
  @override
  final String? alt;

  factory _$GSimpleLoginData_login_user_actors_avatar([
    void Function(GSimpleLoginData_login_user_actors_avatarBuilder)? updates,
  ]) =>
      (new GSimpleLoginData_login_user_actors_avatarBuilder()..update(updates))
          ._build();

  _$GSimpleLoginData_login_user_actors_avatar._({
    required this.G__typename,
    this.id,
    this.url,
    this.alt,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLoginData_login_user_actors_avatar',
      'G__typename',
    );
  }

  @override
  GSimpleLoginData_login_user_actors_avatar rebuild(
    void Function(GSimpleLoginData_login_user_actors_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleLoginData_login_user_actors_avatarBuilder toBuilder() =>
      new GSimpleLoginData_login_user_actors_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLoginData_login_user_actors_avatar &&
        G__typename == other.G__typename &&
        id == other.id &&
        url == other.url &&
        alt == other.alt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GSimpleLoginData_login_user_actors_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('url', url)
          ..add('alt', alt))
        .toString();
  }
}

class GSimpleLoginData_login_user_actors_avatarBuilder
    implements
        Builder<
          GSimpleLoginData_login_user_actors_avatar,
          GSimpleLoginData_login_user_actors_avatarBuilder
        > {
  _$GSimpleLoginData_login_user_actors_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  GSimpleLoginData_login_user_actors_avatarBuilder() {
    GSimpleLoginData_login_user_actors_avatar._initializeBuilder(this);
  }

  GSimpleLoginData_login_user_actors_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _url = $v.url;
      _alt = $v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLoginData_login_user_actors_avatar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLoginData_login_user_actors_avatar;
  }

  @override
  void update(
    void Function(GSimpleLoginData_login_user_actors_avatarBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLoginData_login_user_actors_avatar build() => _build();

  _$GSimpleLoginData_login_user_actors_avatar _build() {
    final _$result =
        _$v ??
        new _$GSimpleLoginData_login_user_actors_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GSimpleLoginData_login_user_actors_avatar',
            'G__typename',
          ),
          id: id,
          url: url,
          alt: alt,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleLogoutData extends GSimpleLogoutData {
  @override
  final String G__typename;
  @override
  final String? logout;

  factory _$GSimpleLogoutData([
    void Function(GSimpleLogoutDataBuilder)? updates,
  ]) => (new GSimpleLogoutDataBuilder()..update(updates))._build();

  _$GSimpleLogoutData._({required this.G__typename, this.logout}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleLogoutData',
      'G__typename',
    );
  }

  @override
  GSimpleLogoutData rebuild(void Function(GSimpleLogoutDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSimpleLogoutDataBuilder toBuilder() =>
      new GSimpleLogoutDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleLogoutData &&
        G__typename == other.G__typename &&
        logout == other.logout;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, logout.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleLogoutData')
          ..add('G__typename', G__typename)
          ..add('logout', logout))
        .toString();
  }
}

class GSimpleLogoutDataBuilder
    implements Builder<GSimpleLogoutData, GSimpleLogoutDataBuilder> {
  _$GSimpleLogoutData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _logout;
  String? get logout => _$this._logout;
  set logout(String? logout) => _$this._logout = logout;

  GSimpleLogoutDataBuilder() {
    GSimpleLogoutData._initializeBuilder(this);
  }

  GSimpleLogoutDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _logout = $v.logout;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleLogoutData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleLogoutData;
  }

  @override
  void update(void Function(GSimpleLogoutDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleLogoutData build() => _build();

  _$GSimpleLogoutData _build() {
    final _$result =
        _$v ??
        new _$GSimpleLogoutData._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GSimpleLogoutData',
            'G__typename',
          ),
          logout: logout,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleRefreshTokenData extends GSimpleRefreshTokenData {
  @override
  final String G__typename;
  @override
  final GSimpleRefreshTokenData_refreshToken? refreshToken;

  factory _$GSimpleRefreshTokenData([
    void Function(GSimpleRefreshTokenDataBuilder)? updates,
  ]) => (new GSimpleRefreshTokenDataBuilder()..update(updates))._build();

  _$GSimpleRefreshTokenData._({required this.G__typename, this.refreshToken})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleRefreshTokenData',
      'G__typename',
    );
  }

  @override
  GSimpleRefreshTokenData rebuild(
    void Function(GSimpleRefreshTokenDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleRefreshTokenDataBuilder toBuilder() =>
      new GSimpleRefreshTokenDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleRefreshTokenData &&
        G__typename == other.G__typename &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleRefreshTokenData')
          ..add('G__typename', G__typename)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class GSimpleRefreshTokenDataBuilder
    implements
        Builder<GSimpleRefreshTokenData, GSimpleRefreshTokenDataBuilder> {
  _$GSimpleRefreshTokenData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GSimpleRefreshTokenData_refreshTokenBuilder? _refreshToken;
  GSimpleRefreshTokenData_refreshTokenBuilder get refreshToken =>
      _$this._refreshToken ??=
          new GSimpleRefreshTokenData_refreshTokenBuilder();
  set refreshToken(GSimpleRefreshTokenData_refreshTokenBuilder? refreshToken) =>
      _$this._refreshToken = refreshToken;

  GSimpleRefreshTokenDataBuilder() {
    GSimpleRefreshTokenData._initializeBuilder(this);
  }

  GSimpleRefreshTokenDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _refreshToken = $v.refreshToken?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleRefreshTokenData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleRefreshTokenData;
  }

  @override
  void update(void Function(GSimpleRefreshTokenDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleRefreshTokenData build() => _build();

  _$GSimpleRefreshTokenData _build() {
    _$GSimpleRefreshTokenData _$result;
    try {
      _$result =
          _$v ??
          new _$GSimpleRefreshTokenData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GSimpleRefreshTokenData',
              'G__typename',
            ),
            refreshToken: _refreshToken?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'refreshToken';
        _refreshToken?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GSimpleRefreshTokenData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSimpleRefreshTokenData_refreshToken
    extends GSimpleRefreshTokenData_refreshToken {
  @override
  final String G__typename;
  @override
  final String accessToken;
  @override
  final String refreshToken;

  factory _$GSimpleRefreshTokenData_refreshToken([
    void Function(GSimpleRefreshTokenData_refreshTokenBuilder)? updates,
  ]) => (new GSimpleRefreshTokenData_refreshTokenBuilder()..update(updates))
      ._build();

  _$GSimpleRefreshTokenData_refreshToken._({
    required this.G__typename,
    required this.accessToken,
    required this.refreshToken,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GSimpleRefreshTokenData_refreshToken',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      accessToken,
      r'GSimpleRefreshTokenData_refreshToken',
      'accessToken',
    );
    BuiltValueNullFieldError.checkNotNull(
      refreshToken,
      r'GSimpleRefreshTokenData_refreshToken',
      'refreshToken',
    );
  }

  @override
  GSimpleRefreshTokenData_refreshToken rebuild(
    void Function(GSimpleRefreshTokenData_refreshTokenBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GSimpleRefreshTokenData_refreshTokenBuilder toBuilder() =>
      new GSimpleRefreshTokenData_refreshTokenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSimpleRefreshTokenData_refreshToken &&
        G__typename == other.G__typename &&
        accessToken == other.accessToken &&
        refreshToken == other.refreshToken;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, accessToken.hashCode);
    _$hash = $jc(_$hash, refreshToken.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSimpleRefreshTokenData_refreshToken')
          ..add('G__typename', G__typename)
          ..add('accessToken', accessToken)
          ..add('refreshToken', refreshToken))
        .toString();
  }
}

class GSimpleRefreshTokenData_refreshTokenBuilder
    implements
        Builder<
          GSimpleRefreshTokenData_refreshToken,
          GSimpleRefreshTokenData_refreshTokenBuilder
        > {
  _$GSimpleRefreshTokenData_refreshToken? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _accessToken;
  String? get accessToken => _$this._accessToken;
  set accessToken(String? accessToken) => _$this._accessToken = accessToken;

  String? _refreshToken;
  String? get refreshToken => _$this._refreshToken;
  set refreshToken(String? refreshToken) => _$this._refreshToken = refreshToken;

  GSimpleRefreshTokenData_refreshTokenBuilder() {
    GSimpleRefreshTokenData_refreshToken._initializeBuilder(this);
  }

  GSimpleRefreshTokenData_refreshTokenBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _accessToken = $v.accessToken;
      _refreshToken = $v.refreshToken;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSimpleRefreshTokenData_refreshToken other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSimpleRefreshTokenData_refreshToken;
  }

  @override
  void update(
    void Function(GSimpleRefreshTokenData_refreshTokenBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GSimpleRefreshTokenData_refreshToken build() => _build();

  _$GSimpleRefreshTokenData_refreshToken _build() {
    final _$result =
        _$v ??
        new _$GSimpleRefreshTokenData_refreshToken._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GSimpleRefreshTokenData_refreshToken',
            'G__typename',
          ),
          accessToken: BuiltValueNullFieldError.checkNotNull(
            accessToken,
            r'GSimpleRefreshTokenData_refreshToken',
            'accessToken',
          ),
          refreshToken: BuiltValueNullFieldError.checkNotNull(
            refreshToken,
            r'GSimpleRefreshTokenData_refreshToken',
            'refreshToken',
          ),
        );
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
