// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GGetLoggedUserData> _$gGetLoggedUserDataSerializer =
    new _$GGetLoggedUserDataSerializer();
Serializer<GGetLoggedUserData_loggedUser>
_$gGetLoggedUserDataLoggedUserSerializer =
    new _$GGetLoggedUserData_loggedUserSerializer();
Serializer<GGetLoggedUserData_loggedUser_defaultActor>
_$gGetLoggedUserDataLoggedUserDefaultActorSerializer =
    new _$GGetLoggedUserData_loggedUser_defaultActorSerializer();
Serializer<GGetLoggedUserData_loggedUser_settings>
_$gGetLoggedUserDataLoggedUserSettingsSerializer =
    new _$GGetLoggedUserData_loggedUser_settingsSerializer();
Serializer<GGetLoggedUserData_loggedUser_actors>
_$gGetLoggedUserDataLoggedUserActorsSerializer =
    new _$GGetLoggedUserData_loggedUser_actorsSerializer();
Serializer<GGetLoggedPersonData> _$gGetLoggedPersonDataSerializer =
    new _$GGetLoggedPersonDataSerializer();
Serializer<GGetLoggedPersonData_loggedPerson>
_$gGetLoggedPersonDataLoggedPersonSerializer =
    new _$GGetLoggedPersonData_loggedPersonSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_avatar>
_$gGetLoggedPersonDataLoggedPersonAvatarSerializer =
    new _$GGetLoggedPersonData_loggedPerson_avatarSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_banner>
_$gGetLoggedPersonDataLoggedPersonBannerSerializer =
    new _$GGetLoggedPersonData_loggedPerson_bannerSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_feedTokens>
_$gGetLoggedPersonDataLoggedPersonFeedTokensSerializer =
    new _$GGetLoggedPersonData_loggedPerson_feedTokensSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_organizedEvents>
_$gGetLoggedPersonDataLoggedPersonOrganizedEventsSerializer =
    new _$GGetLoggedPersonData_loggedPerson_organizedEventsSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_participations>
_$gGetLoggedPersonDataLoggedPersonParticipationsSerializer =
    new _$GGetLoggedPersonData_loggedPerson_participationsSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_memberships>
_$gGetLoggedPersonDataLoggedPersonMembershipsSerializer =
    new _$GGetLoggedPersonData_loggedPerson_membershipsSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_follows>
_$gGetLoggedPersonDataLoggedPersonFollowsSerializer =
    new _$GGetLoggedPersonData_loggedPerson_followsSerializer();
Serializer<GGetLoggedPersonData_loggedPerson_user>
_$gGetLoggedPersonDataLoggedPersonUserSerializer =
    new _$GGetLoggedPersonData_loggedPerson_userSerializer();
Serializer<GUserBasicInfoData> _$gUserBasicInfoDataSerializer =
    new _$GUserBasicInfoDataSerializer();
Serializer<GUserBasicInfoData_defaultActor>
_$gUserBasicInfoDataDefaultActorSerializer =
    new _$GUserBasicInfoData_defaultActorSerializer();
Serializer<GUserWithSettingsData> _$gUserWithSettingsDataSerializer =
    new _$GUserWithSettingsDataSerializer();
Serializer<GUserWithSettingsData_defaultActor>
_$gUserWithSettingsDataDefaultActorSerializer =
    new _$GUserWithSettingsData_defaultActorSerializer();
Serializer<GUserWithSettingsData_settings>
_$gUserWithSettingsDataSettingsSerializer =
    new _$GUserWithSettingsData_settingsSerializer();
Serializer<GUserFullData> _$gUserFullDataSerializer =
    new _$GUserFullDataSerializer();
Serializer<GUserFullData_defaultActor> _$gUserFullDataDefaultActorSerializer =
    new _$GUserFullData_defaultActorSerializer();
Serializer<GUserFullData_settings> _$gUserFullDataSettingsSerializer =
    new _$GUserFullData_settingsSerializer();
Serializer<GUserFullData_actors> _$gUserFullDataActorsSerializer =
    new _$GUserFullData_actorsSerializer();
Serializer<GActorBasicInfoData> _$gActorBasicInfoDataSerializer =
    new _$GActorBasicInfoDataSerializer();

class _$GGetLoggedUserDataSerializer
    implements StructuredSerializer<GGetLoggedUserData> {
  @override
  final Iterable<Type> types = const [GGetLoggedUserData, _$GGetLoggedUserData];
  @override
  final String wireName = 'GGetLoggedUserData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedUserData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.loggedUser;
    if (value != null) {
      result
        ..add('loggedUser')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GGetLoggedUserData_loggedUser),
          ),
        );
    }
    return result;
  }

  @override
  GGetLoggedUserData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedUserDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'loggedUser':
          result.loggedUser.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GGetLoggedUserData_loggedUser),
                )!
                as GGetLoggedUserData_loggedUser,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedUserData_loggedUserSerializer
    implements StructuredSerializer<GGetLoggedUserData_loggedUser> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedUserData_loggedUser,
    _$GGetLoggedUserData_loggedUser,
  ];
  @override
  final String wireName = 'GGetLoggedUserData_loggedUser';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedUserData_loggedUser object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
      'actors',
      serializers.serialize(
        object.actors,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(GGetLoggedUserData_loggedUser_actors),
        ]),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.defaultActor;
    if (value != null) {
      result
        ..add('defaultActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedUserData_loggedUser_defaultActor,
            ),
          ),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.settings;
    if (value != null) {
      result
        ..add('settings')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedUserData_loggedUser_settings,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GGetLoggedUserData_loggedUser deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedUserData_loggedUserBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmedAt':
          result.confirmedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInAt':
          result.lastSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'defaultActor':
          result.defaultActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedUserData_loggedUser_defaultActor,
                  ),
                )!
                as GGetLoggedUserData_loggedUser_defaultActor,
          );
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'settings':
          result.settings.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedUserData_loggedUser_settings,
                  ),
                )!
                as GGetLoggedUserData_loggedUser_settings,
          );
          break;
        case 'actors':
          result.actors.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GGetLoggedUserData_loggedUser_actors,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedUserData_loggedUser_defaultActorSerializer
    implements
        StructuredSerializer<GGetLoggedUserData_loggedUser_defaultActor> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedUserData_loggedUser_defaultActor,
    _$GGetLoggedUserData_loggedUser_defaultActor,
  ];
  @override
  final String wireName = 'GGetLoggedUserData_loggedUser_defaultActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedUserData_loggedUser_defaultActor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GGetLoggedUserData_loggedUser_defaultActor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedUserData_loggedUser_defaultActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedUserData_loggedUser_settingsSerializer
    implements StructuredSerializer<GGetLoggedUserData_loggedUser_settings> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedUserData_loggedUser_settings,
    _$GGetLoggedUserData_loggedUser_settings,
  ];
  @override
  final String wireName = 'GGetLoggedUserData_loggedUser_settings';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedUserData_loggedUser_settings object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GGetLoggedUserData_loggedUser_settings deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedUserData_loggedUser_settingsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedUserData_loggedUser_actorsSerializer
    implements StructuredSerializer<GGetLoggedUserData_loggedUser_actors> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedUserData_loggedUser_actors,
    _$GGetLoggedUserData_loggedUser_actors,
  ];
  @override
  final String wireName = 'GGetLoggedUserData_loggedUser_actors';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedUserData_loggedUser_actors object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    return result;
  }

  @override
  GGetLoggedUserData_loggedUser_actors deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedUserData_loggedUser_actorsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonDataSerializer
    implements StructuredSerializer<GGetLoggedPersonData> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData,
    _$GGetLoggedPersonData,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.loggedPerson;
    if (value != null) {
      result
        ..add('loggedPerson')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GGetLoggedPersonData_loggedPerson),
          ),
        );
    }
    return result;
  }

  @override
  GGetLoggedPersonData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'loggedPerson':
          result.loggedPerson.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPersonSerializer
    implements StructuredSerializer<GGetLoggedPersonData_loggedPerson> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson,
    _$GGetLoggedPersonData_loggedPerson,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_banner,
            ),
          ),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GGetLoggedPersonData_loggedPerson_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_participations,
            ),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_memberships,
            ),
          ),
        );
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_follows,
            ),
          ),
        );
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GGetLoggedPersonData_loggedPerson_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPersonBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_avatar,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_banner,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_banner,
          );
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GGetLoggedPersonData_loggedPerson_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_organizedEvents,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_participations,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_participations,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_memberships,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_memberships,
          );
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_follows,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_follows,
          );
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GGetLoggedPersonData_loggedPerson_user,
                  ),
                )!
                as GGetLoggedPersonData_loggedPerson_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_avatarSerializer
    implements StructuredSerializer<GGetLoggedPersonData_loggedPerson_avatar> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_avatar,
    _$GGetLoggedPersonData_loggedPerson_avatar,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPerson_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_bannerSerializer
    implements StructuredSerializer<GGetLoggedPersonData_loggedPerson_banner> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_banner,
    _$GGetLoggedPersonData_loggedPerson_banner,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPerson_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_feedTokensSerializer
    implements
        StructuredSerializer<GGetLoggedPersonData_loggedPerson_feedTokens> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_feedTokens,
    _$GGetLoggedPersonData_loggedPerson_feedTokens,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_feedTokens object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_feedTokens deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPerson_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_organizedEventsSerializer
    implements
        StructuredSerializer<
          GGetLoggedPersonData_loggedPerson_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_organizedEvents,
    _$GGetLoggedPersonData_loggedPerson_organizedEvents,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_organizedEvents object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_organizedEvents deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        new GGetLoggedPersonData_loggedPerson_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_participationsSerializer
    implements
        StructuredSerializer<GGetLoggedPersonData_loggedPerson_participations> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_participations,
    _$GGetLoggedPersonData_loggedPerson_participations,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_participations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_participations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        new GGetLoggedPersonData_loggedPerson_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_membershipsSerializer
    implements
        StructuredSerializer<GGetLoggedPersonData_loggedPerson_memberships> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_memberships,
    _$GGetLoggedPersonData_loggedPerson_memberships,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_memberships object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_memberships deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPerson_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_followsSerializer
    implements StructuredSerializer<GGetLoggedPersonData_loggedPerson_follows> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_follows,
    _$GGetLoggedPersonData_loggedPerson_follows,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_follows object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_follows deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPerson_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedPersonData_loggedPerson_userSerializer
    implements StructuredSerializer<GGetLoggedPersonData_loggedPerson_user> {
  @override
  final Iterable<Type> types = const [
    GGetLoggedPersonData_loggedPerson_user,
    _$GGetLoggedPersonData_loggedPerson_user,
  ];
  @override
  final String wireName = 'GGetLoggedPersonData_loggedPerson_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GGetLoggedPersonData_loggedPerson_user object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GGetLoggedPersonData_loggedPerson_user deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GGetLoggedPersonData_loggedPerson_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserBasicInfoDataSerializer
    implements StructuredSerializer<GUserBasicInfoData> {
  @override
  final Iterable<Type> types = const [GUserBasicInfoData, _$GUserBasicInfoData];
  @override
  final String wireName = 'GUserBasicInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserBasicInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.defaultActor;
    if (value != null) {
      result
        ..add('defaultActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GUserBasicInfoData_defaultActor),
          ),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GUserBasicInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserBasicInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmedAt':
          result.confirmedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInAt':
          result.lastSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'defaultActor':
          result.defaultActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GUserBasicInfoData_defaultActor,
                  ),
                )!
                as GUserBasicInfoData_defaultActor,
          );
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserBasicInfoData_defaultActorSerializer
    implements StructuredSerializer<GUserBasicInfoData_defaultActor> {
  @override
  final Iterable<Type> types = const [
    GUserBasicInfoData_defaultActor,
    _$GUserBasicInfoData_defaultActor,
  ];
  @override
  final String wireName = 'GUserBasicInfoData_defaultActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserBasicInfoData_defaultActor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GUserBasicInfoData_defaultActor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserBasicInfoData_defaultActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserWithSettingsDataSerializer
    implements StructuredSerializer<GUserWithSettingsData> {
  @override
  final Iterable<Type> types = const [
    GUserWithSettingsData,
    _$GUserWithSettingsData,
  ];
  @override
  final String wireName = 'GUserWithSettingsData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserWithSettingsData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.defaultActor;
    if (value != null) {
      result
        ..add('defaultActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GUserWithSettingsData_defaultActor),
          ),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.settings;
    if (value != null) {
      result
        ..add('settings')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GUserWithSettingsData_settings),
          ),
        );
    }
    return result;
  }

  @override
  GUserWithSettingsData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserWithSettingsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmedAt':
          result.confirmedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInAt':
          result.lastSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'defaultActor':
          result.defaultActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GUserWithSettingsData_defaultActor,
                  ),
                )!
                as GUserWithSettingsData_defaultActor,
          );
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'settings':
          result.settings.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GUserWithSettingsData_settings),
                )!
                as GUserWithSettingsData_settings,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GUserWithSettingsData_defaultActorSerializer
    implements StructuredSerializer<GUserWithSettingsData_defaultActor> {
  @override
  final Iterable<Type> types = const [
    GUserWithSettingsData_defaultActor,
    _$GUserWithSettingsData_defaultActor,
  ];
  @override
  final String wireName = 'GUserWithSettingsData_defaultActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserWithSettingsData_defaultActor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GUserWithSettingsData_defaultActor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserWithSettingsData_defaultActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserWithSettingsData_settingsSerializer
    implements StructuredSerializer<GUserWithSettingsData_settings> {
  @override
  final Iterable<Type> types = const [
    GUserWithSettingsData_settings,
    _$GUserWithSettingsData_settings,
  ];
  @override
  final String wireName = 'GUserWithSettingsData_settings';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserWithSettingsData_settings object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GUserWithSettingsData_settings deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserWithSettingsData_settingsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GUserFullDataSerializer implements StructuredSerializer<GUserFullData> {
  @override
  final Iterable<Type> types = const [GUserFullData, _$GUserFullData];
  @override
  final String wireName = 'GUserFullData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserFullData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
      'actors',
      serializers.serialize(
        object.actors,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(GUserFullData_actors),
        ]),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GDateTime),
          ),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.defaultActor;
    if (value != null) {
      result
        ..add('defaultActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GUserFullData_defaultActor),
          ),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.settings;
    if (value != null) {
      result
        ..add('settings')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(GUserFullData_settings),
          ),
        );
    }
    return result;
  }

  @override
  GUserFullData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserFullDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmedAt':
          result.confirmedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInAt':
          result.lastSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GDateTime),
                )!
                as _i2.GDateTime,
          );
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'defaultActor':
          result.defaultActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GUserFullData_defaultActor),
                )!
                as GUserFullData_defaultActor,
          );
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'settings':
          result.settings.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(GUserFullData_settings),
                )!
                as GUserFullData_settings,
          );
          break;
        case 'actors':
          result.actors.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(GUserFullData_actors),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GUserFullData_defaultActorSerializer
    implements StructuredSerializer<GUserFullData_defaultActor> {
  @override
  final Iterable<Type> types = const [
    GUserFullData_defaultActor,
    _$GUserFullData_defaultActor,
  ];
  @override
  final String wireName = 'GUserFullData_defaultActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserFullData_defaultActor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GUserFullData_defaultActor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserFullData_defaultActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserFullData_settingsSerializer
    implements StructuredSerializer<GUserFullData_settings> {
  @override
  final Iterable<Type> types = const [
    GUserFullData_settings,
    _$GUserFullData_settings,
  ];
  @override
  final String wireName = 'GUserFullData_settings';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserFullData_settings object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GUserFullData_settings deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserFullData_settingsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GUserFullData_actorsSerializer
    implements StructuredSerializer<GUserFullData_actors> {
  @override
  final Iterable<Type> types = const [
    GUserFullData_actors,
    _$GUserFullData_actors,
  ];
  @override
  final String wireName = 'GUserFullData_actors';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GUserFullData_actors object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    return result;
  }

  @override
  GUserFullData_actors deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GUserFullData_actorsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GActorBasicInfoDataSerializer
    implements StructuredSerializer<GActorBasicInfoData> {
  @override
  final Iterable<Type> types = const [
    GActorBasicInfoData,
    _$GActorBasicInfoData,
  ];
  @override
  final String wireName = 'GActorBasicInfoData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GActorBasicInfoData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    return result;
  }

  @override
  GActorBasicInfoData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = new GActorBasicInfoDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLoggedUserData extends GGetLoggedUserData {
  @override
  final String G__typename;
  @override
  final GGetLoggedUserData_loggedUser? loggedUser;

  factory _$GGetLoggedUserData([
    void Function(GGetLoggedUserDataBuilder)? updates,
  ]) => (new GGetLoggedUserDataBuilder()..update(updates))._build();

  _$GGetLoggedUserData._({required this.G__typename, this.loggedUser})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedUserData',
      'G__typename',
    );
  }

  @override
  GGetLoggedUserData rebuild(
    void Function(GGetLoggedUserDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedUserDataBuilder toBuilder() =>
      new GGetLoggedUserDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedUserData &&
        G__typename == other.G__typename &&
        loggedUser == other.loggedUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, loggedUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetLoggedUserData')
          ..add('G__typename', G__typename)
          ..add('loggedUser', loggedUser))
        .toString();
  }
}

class GGetLoggedUserDataBuilder
    implements Builder<GGetLoggedUserData, GGetLoggedUserDataBuilder> {
  _$GGetLoggedUserData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGetLoggedUserData_loggedUserBuilder? _loggedUser;
  GGetLoggedUserData_loggedUserBuilder get loggedUser =>
      _$this._loggedUser ??= new GGetLoggedUserData_loggedUserBuilder();
  set loggedUser(GGetLoggedUserData_loggedUserBuilder? loggedUser) =>
      _$this._loggedUser = loggedUser;

  GGetLoggedUserDataBuilder() {
    GGetLoggedUserData._initializeBuilder(this);
  }

  GGetLoggedUserDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _loggedUser = $v.loggedUser?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedUserData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedUserData;
  }

  @override
  void update(void Function(GGetLoggedUserDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedUserData build() => _build();

  _$GGetLoggedUserData _build() {
    _$GGetLoggedUserData _$result;
    try {
      _$result =
          _$v ??
          new _$GGetLoggedUserData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GGetLoggedUserData',
              'G__typename',
            ),
            loggedUser: _loggedUser?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'loggedUser';
        _loggedUser?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GGetLoggedUserData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedUserData_loggedUser extends GGetLoggedUserData_loggedUser {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i2.GDateTime? confirmedAt;
  @override
  final _i2.GDateTime? confirmationSentAt;
  @override
  final _i2.GDateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final _i2.GDateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final String? locale;
  @override
  final GGetLoggedUserData_loggedUser_defaultActor? defaultActor;
  @override
  final bool? disabled;
  @override
  final _i2.GUserRole? role;
  @override
  final String? provider;
  @override
  final int? mediaSize;
  @override
  final GGetLoggedUserData_loggedUser_settings? settings;
  @override
  final BuiltList<GGetLoggedUserData_loggedUser_actors?> actors;

  factory _$GGetLoggedUserData_loggedUser([
    void Function(GGetLoggedUserData_loggedUserBuilder)? updates,
  ]) => (new GGetLoggedUserData_loggedUserBuilder()..update(updates))._build();

  _$GGetLoggedUserData_loggedUser._({
    required this.G__typename,
    this.id,
    required this.email,
    this.confirmedAt,
    this.confirmationSentAt,
    this.lastSignInAt,
    this.lastSignInIp,
    this.currentSignInAt,
    this.currentSignInIp,
    this.locale,
    this.defaultActor,
    this.disabled,
    this.role,
    this.provider,
    this.mediaSize,
    this.settings,
    required this.actors,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedUserData_loggedUser',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      email,
      r'GGetLoggedUserData_loggedUser',
      'email',
    );
    BuiltValueNullFieldError.checkNotNull(
      actors,
      r'GGetLoggedUserData_loggedUser',
      'actors',
    );
  }

  @override
  GGetLoggedUserData_loggedUser rebuild(
    void Function(GGetLoggedUserData_loggedUserBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedUserData_loggedUserBuilder toBuilder() =>
      new GGetLoggedUserData_loggedUserBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedUserData_loggedUser &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        confirmedAt == other.confirmedAt &&
        confirmationSentAt == other.confirmationSentAt &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        locale == other.locale &&
        defaultActor == other.defaultActor &&
        disabled == other.disabled &&
        role == other.role &&
        provider == other.provider &&
        mediaSize == other.mediaSize &&
        settings == other.settings &&
        actors == other.actors;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, defaultActor.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, settings.hashCode);
    _$hash = $jc(_$hash, actors.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetLoggedUserData_loggedUser')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('confirmedAt', confirmedAt)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('locale', locale)
          ..add('defaultActor', defaultActor)
          ..add('disabled', disabled)
          ..add('role', role)
          ..add('provider', provider)
          ..add('mediaSize', mediaSize)
          ..add('settings', settings)
          ..add('actors', actors))
        .toString();
  }
}

class GGetLoggedUserData_loggedUserBuilder
    implements
        Builder<
          GGetLoggedUserData_loggedUser,
          GGetLoggedUserData_loggedUserBuilder
        > {
  _$GGetLoggedUserData_loggedUser? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i2.GDateTimeBuilder? _confirmedAt;
  _i2.GDateTimeBuilder get confirmedAt =>
      _$this._confirmedAt ??= new _i2.GDateTimeBuilder();
  set confirmedAt(_i2.GDateTimeBuilder? confirmedAt) =>
      _$this._confirmedAt = confirmedAt;

  _i2.GDateTimeBuilder? _confirmationSentAt;
  _i2.GDateTimeBuilder get confirmationSentAt =>
      _$this._confirmationSentAt ??= new _i2.GDateTimeBuilder();
  set confirmationSentAt(_i2.GDateTimeBuilder? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  _i2.GDateTimeBuilder? _lastSignInAt;
  _i2.GDateTimeBuilder get lastSignInAt =>
      _$this._lastSignInAt ??= new _i2.GDateTimeBuilder();
  set lastSignInAt(_i2.GDateTimeBuilder? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  _i2.GDateTimeBuilder? _currentSignInAt;
  _i2.GDateTimeBuilder get currentSignInAt =>
      _$this._currentSignInAt ??= new _i2.GDateTimeBuilder();
  set currentSignInAt(_i2.GDateTimeBuilder? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  GGetLoggedUserData_loggedUser_defaultActorBuilder? _defaultActor;
  GGetLoggedUserData_loggedUser_defaultActorBuilder get defaultActor =>
      _$this._defaultActor ??=
          new GGetLoggedUserData_loggedUser_defaultActorBuilder();
  set defaultActor(
    GGetLoggedUserData_loggedUser_defaultActorBuilder? defaultActor,
  ) => _$this._defaultActor = defaultActor;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GGetLoggedUserData_loggedUser_settingsBuilder? _settings;
  GGetLoggedUserData_loggedUser_settingsBuilder get settings =>
      _$this._settings ??= new GGetLoggedUserData_loggedUser_settingsBuilder();
  set settings(GGetLoggedUserData_loggedUser_settingsBuilder? settings) =>
      _$this._settings = settings;

  ListBuilder<GGetLoggedUserData_loggedUser_actors?>? _actors;
  ListBuilder<GGetLoggedUserData_loggedUser_actors?> get actors =>
      _$this._actors ??=
          new ListBuilder<GGetLoggedUserData_loggedUser_actors?>();
  set actors(ListBuilder<GGetLoggedUserData_loggedUser_actors?>? actors) =>
      _$this._actors = actors;

  GGetLoggedUserData_loggedUserBuilder() {
    GGetLoggedUserData_loggedUser._initializeBuilder(this);
  }

  GGetLoggedUserData_loggedUserBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _confirmedAt = $v.confirmedAt?.toBuilder();
      _confirmationSentAt = $v.confirmationSentAt?.toBuilder();
      _lastSignInAt = $v.lastSignInAt?.toBuilder();
      _lastSignInIp = $v.lastSignInIp;
      _currentSignInAt = $v.currentSignInAt?.toBuilder();
      _currentSignInIp = $v.currentSignInIp;
      _locale = $v.locale;
      _defaultActor = $v.defaultActor?.toBuilder();
      _disabled = $v.disabled;
      _role = $v.role;
      _provider = $v.provider;
      _mediaSize = $v.mediaSize;
      _settings = $v.settings?.toBuilder();
      _actors = $v.actors.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedUserData_loggedUser other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedUserData_loggedUser;
  }

  @override
  void update(void Function(GGetLoggedUserData_loggedUserBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedUserData_loggedUser build() => _build();

  _$GGetLoggedUserData_loggedUser _build() {
    _$GGetLoggedUserData_loggedUser _$result;
    try {
      _$result =
          _$v ??
          new _$GGetLoggedUserData_loggedUser._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GGetLoggedUserData_loggedUser',
              'G__typename',
            ),
            id: id,
            email: BuiltValueNullFieldError.checkNotNull(
              email,
              r'GGetLoggedUserData_loggedUser',
              'email',
            ),
            confirmedAt: _confirmedAt?.build(),
            confirmationSentAt: _confirmationSentAt?.build(),
            lastSignInAt: _lastSignInAt?.build(),
            lastSignInIp: lastSignInIp,
            currentSignInAt: _currentSignInAt?.build(),
            currentSignInIp: currentSignInIp,
            locale: locale,
            defaultActor: _defaultActor?.build(),
            disabled: disabled,
            role: role,
            provider: provider,
            mediaSize: mediaSize,
            settings: _settings?.build(),
            actors: actors.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confirmedAt';
        _confirmedAt?.build();
        _$failedField = 'confirmationSentAt';
        _confirmationSentAt?.build();
        _$failedField = 'lastSignInAt';
        _lastSignInAt?.build();

        _$failedField = 'currentSignInAt';
        _currentSignInAt?.build();

        _$failedField = 'defaultActor';
        _defaultActor?.build();

        _$failedField = 'settings';
        _settings?.build();
        _$failedField = 'actors';
        actors.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GGetLoggedUserData_loggedUser',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedUserData_loggedUser_defaultActor
    extends GGetLoggedUserData_loggedUser_defaultActor {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;

  factory _$GGetLoggedUserData_loggedUser_defaultActor([
    void Function(GGetLoggedUserData_loggedUser_defaultActorBuilder)? updates,
  ]) =>
      (new GGetLoggedUserData_loggedUser_defaultActorBuilder()..update(updates))
          ._build();

  _$GGetLoggedUserData_loggedUser_defaultActor._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedUserData_loggedUser_defaultActor',
      'G__typename',
    );
  }

  @override
  GGetLoggedUserData_loggedUser_defaultActor rebuild(
    void Function(GGetLoggedUserData_loggedUser_defaultActorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedUserData_loggedUser_defaultActorBuilder toBuilder() =>
      new GGetLoggedUserData_loggedUser_defaultActorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedUserData_loggedUser_defaultActor &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedUserData_loggedUser_defaultActor',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name))
        .toString();
  }
}

class GGetLoggedUserData_loggedUser_defaultActorBuilder
    implements
        Builder<
          GGetLoggedUserData_loggedUser_defaultActor,
          GGetLoggedUserData_loggedUser_defaultActorBuilder
        > {
  _$GGetLoggedUserData_loggedUser_defaultActor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GGetLoggedUserData_loggedUser_defaultActorBuilder() {
    GGetLoggedUserData_loggedUser_defaultActor._initializeBuilder(this);
  }

  GGetLoggedUserData_loggedUser_defaultActorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedUserData_loggedUser_defaultActor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedUserData_loggedUser_defaultActor;
  }

  @override
  void update(
    void Function(GGetLoggedUserData_loggedUser_defaultActorBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedUserData_loggedUser_defaultActor build() => _build();

  _$GGetLoggedUserData_loggedUser_defaultActor _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedUserData_loggedUser_defaultActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedUserData_loggedUser_defaultActor',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedUserData_loggedUser_settings
    extends GGetLoggedUserData_loggedUser_settings {
  @override
  final String G__typename;
  @override
  final _i2.GTimezone? timezone;

  factory _$GGetLoggedUserData_loggedUser_settings([
    void Function(GGetLoggedUserData_loggedUser_settingsBuilder)? updates,
  ]) => (new GGetLoggedUserData_loggedUser_settingsBuilder()..update(updates))
      ._build();

  _$GGetLoggedUserData_loggedUser_settings._({
    required this.G__typename,
    this.timezone,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedUserData_loggedUser_settings',
      'G__typename',
    );
  }

  @override
  GGetLoggedUserData_loggedUser_settings rebuild(
    void Function(GGetLoggedUserData_loggedUser_settingsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedUserData_loggedUser_settingsBuilder toBuilder() =>
      new GGetLoggedUserData_loggedUser_settingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedUserData_loggedUser_settings &&
        G__typename == other.G__typename &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedUserData_loggedUser_settings',
          )
          ..add('G__typename', G__typename)
          ..add('timezone', timezone))
        .toString();
  }
}

class GGetLoggedUserData_loggedUser_settingsBuilder
    implements
        Builder<
          GGetLoggedUserData_loggedUser_settings,
          GGetLoggedUserData_loggedUser_settingsBuilder
        > {
  _$GGetLoggedUserData_loggedUser_settings? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= new _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GGetLoggedUserData_loggedUser_settingsBuilder() {
    GGetLoggedUserData_loggedUser_settings._initializeBuilder(this);
  }

  GGetLoggedUserData_loggedUser_settingsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedUserData_loggedUser_settings other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedUserData_loggedUser_settings;
  }

  @override
  void update(
    void Function(GGetLoggedUserData_loggedUser_settingsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedUserData_loggedUser_settings build() => _build();

  _$GGetLoggedUserData_loggedUser_settings _build() {
    _$GGetLoggedUserData_loggedUser_settings _$result;
    try {
      _$result =
          _$v ??
          new _$GGetLoggedUserData_loggedUser_settings._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GGetLoggedUserData_loggedUser_settings',
              'G__typename',
            ),
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GGetLoggedUserData_loggedUser_settings',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedUserData_loggedUser_actors
    extends GGetLoggedUserData_loggedUser_actors {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? suspended;

  factory _$GGetLoggedUserData_loggedUser_actors([
    void Function(GGetLoggedUserData_loggedUser_actorsBuilder)? updates,
  ]) => (new GGetLoggedUserData_loggedUser_actorsBuilder()..update(updates))
      ._build();

  _$GGetLoggedUserData_loggedUser_actors._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.suspended,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedUserData_loggedUser_actors',
      'G__typename',
    );
  }

  @override
  GGetLoggedUserData_loggedUser_actors rebuild(
    void Function(GGetLoggedUserData_loggedUser_actorsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedUserData_loggedUser_actorsBuilder toBuilder() =>
      new GGetLoggedUserData_loggedUser_actorsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedUserData_loggedUser_actors &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        suspended == other.suspended;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetLoggedUserData_loggedUser_actors')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('suspended', suspended))
        .toString();
  }
}

class GGetLoggedUserData_loggedUser_actorsBuilder
    implements
        Builder<
          GGetLoggedUserData_loggedUser_actors,
          GGetLoggedUserData_loggedUser_actorsBuilder
        > {
  _$GGetLoggedUserData_loggedUser_actors? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  GGetLoggedUserData_loggedUser_actorsBuilder() {
    GGetLoggedUserData_loggedUser_actors._initializeBuilder(this);
  }

  GGetLoggedUserData_loggedUser_actorsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _suspended = $v.suspended;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedUserData_loggedUser_actors other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedUserData_loggedUser_actors;
  }

  @override
  void update(
    void Function(GGetLoggedUserData_loggedUser_actorsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedUserData_loggedUser_actors build() => _build();

  _$GGetLoggedUserData_loggedUser_actors _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedUserData_loggedUser_actors._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedUserData_loggedUser_actors',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
          domain: domain,
          summary: summary,
          url: url,
          suspended: suspended,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData extends GGetLoggedPersonData {
  @override
  final String G__typename;
  @override
  final GGetLoggedPersonData_loggedPerson? loggedPerson;

  factory _$GGetLoggedPersonData([
    void Function(GGetLoggedPersonDataBuilder)? updates,
  ]) => (new GGetLoggedPersonDataBuilder()..update(updates))._build();

  _$GGetLoggedPersonData._({required this.G__typename, this.loggedPerson})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData rebuild(
    void Function(GGetLoggedPersonDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonDataBuilder toBuilder() =>
      new GGetLoggedPersonDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData &&
        G__typename == other.G__typename &&
        loggedPerson == other.loggedPerson;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, loggedPerson.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetLoggedPersonData')
          ..add('G__typename', G__typename)
          ..add('loggedPerson', loggedPerson))
        .toString();
  }
}

class GGetLoggedPersonDataBuilder
    implements Builder<GGetLoggedPersonData, GGetLoggedPersonDataBuilder> {
  _$GGetLoggedPersonData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GGetLoggedPersonData_loggedPersonBuilder? _loggedPerson;
  GGetLoggedPersonData_loggedPersonBuilder get loggedPerson =>
      _$this._loggedPerson ??= new GGetLoggedPersonData_loggedPersonBuilder();
  set loggedPerson(GGetLoggedPersonData_loggedPersonBuilder? loggedPerson) =>
      _$this._loggedPerson = loggedPerson;

  GGetLoggedPersonDataBuilder() {
    GGetLoggedPersonData._initializeBuilder(this);
  }

  GGetLoggedPersonDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _loggedPerson = $v.loggedPerson?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData;
  }

  @override
  void update(void Function(GGetLoggedPersonDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData build() => _build();

  _$GGetLoggedPersonData _build() {
    _$GGetLoggedPersonData _$result;
    try {
      _$result =
          _$v ??
          new _$GGetLoggedPersonData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GGetLoggedPersonData',
              'G__typename',
            ),
            loggedPerson: _loggedPerson?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'loggedPerson';
        _loggedPerson?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GGetLoggedPersonData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson
    extends GGetLoggedPersonData_loggedPerson {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? suspended;
  @override
  final GGetLoggedPersonData_loggedPerson_avatar? avatar;
  @override
  final GGetLoggedPersonData_loggedPerson_banner? banner;
  @override
  final BuiltList<GGetLoggedPersonData_loggedPerson_feedTokens?>? feedTokens;
  @override
  final GGetLoggedPersonData_loggedPerson_organizedEvents? organizedEvents;
  @override
  final GGetLoggedPersonData_loggedPerson_participations? participations;
  @override
  final GGetLoggedPersonData_loggedPerson_memberships? memberships;
  @override
  final GGetLoggedPersonData_loggedPerson_follows? follows;
  @override
  final int? followingCount;
  @override
  final int? followersCount;
  @override
  final GGetLoggedPersonData_loggedPerson_user? user;

  factory _$GGetLoggedPersonData_loggedPerson([
    void Function(GGetLoggedPersonData_loggedPersonBuilder)? updates,
  ]) => (new GGetLoggedPersonData_loggedPersonBuilder()..update(updates))
      ._build();

  _$GGetLoggedPersonData_loggedPerson._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.suspended,
    this.avatar,
    this.banner,
    this.feedTokens,
    this.organizedEvents,
    this.participations,
    this.memberships,
    this.follows,
    this.followingCount,
    this.followersCount,
    this.user,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson rebuild(
    void Function(GGetLoggedPersonData_loggedPersonBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPersonBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPersonBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        suspended == other.suspended &&
        avatar == other.avatar &&
        banner == other.banner &&
        feedTokens == other.feedTokens &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        memberships == other.memberships &&
        follows == other.follows &&
        followingCount == other.followingCount &&
        followersCount == other.followersCount &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetLoggedPersonData_loggedPerson')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('suspended', suspended)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('feedTokens', feedTokens)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('memberships', memberships)
          ..add('follows', follows)
          ..add('followingCount', followingCount)
          ..add('followersCount', followersCount)
          ..add('user', user))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPersonBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson,
          GGetLoggedPersonData_loggedPersonBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  GGetLoggedPersonData_loggedPerson_avatarBuilder? _avatar;
  GGetLoggedPersonData_loggedPerson_avatarBuilder get avatar =>
      _$this._avatar ??= new GGetLoggedPersonData_loggedPerson_avatarBuilder();
  set avatar(GGetLoggedPersonData_loggedPerson_avatarBuilder? avatar) =>
      _$this._avatar = avatar;

  GGetLoggedPersonData_loggedPerson_bannerBuilder? _banner;
  GGetLoggedPersonData_loggedPerson_bannerBuilder get banner =>
      _$this._banner ??= new GGetLoggedPersonData_loggedPerson_bannerBuilder();
  set banner(GGetLoggedPersonData_loggedPerson_bannerBuilder? banner) =>
      _$this._banner = banner;

  ListBuilder<GGetLoggedPersonData_loggedPerson_feedTokens?>? _feedTokens;
  ListBuilder<GGetLoggedPersonData_loggedPerson_feedTokens?> get feedTokens =>
      _$this._feedTokens ??=
          new ListBuilder<GGetLoggedPersonData_loggedPerson_feedTokens?>();
  set feedTokens(
    ListBuilder<GGetLoggedPersonData_loggedPerson_feedTokens?>? feedTokens,
  ) => _$this._feedTokens = feedTokens;

  GGetLoggedPersonData_loggedPerson_organizedEventsBuilder? _organizedEvents;
  GGetLoggedPersonData_loggedPerson_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      new GGetLoggedPersonData_loggedPerson_organizedEventsBuilder();
  set organizedEvents(
    GGetLoggedPersonData_loggedPerson_organizedEventsBuilder? organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GGetLoggedPersonData_loggedPerson_participationsBuilder? _participations;
  GGetLoggedPersonData_loggedPerson_participationsBuilder get participations =>
      _$this._participations ??=
          new GGetLoggedPersonData_loggedPerson_participationsBuilder();
  set participations(
    GGetLoggedPersonData_loggedPerson_participationsBuilder? participations,
  ) => _$this._participations = participations;

  GGetLoggedPersonData_loggedPerson_membershipsBuilder? _memberships;
  GGetLoggedPersonData_loggedPerson_membershipsBuilder get memberships =>
      _$this._memberships ??=
          new GGetLoggedPersonData_loggedPerson_membershipsBuilder();
  set memberships(
    GGetLoggedPersonData_loggedPerson_membershipsBuilder? memberships,
  ) => _$this._memberships = memberships;

  GGetLoggedPersonData_loggedPerson_followsBuilder? _follows;
  GGetLoggedPersonData_loggedPerson_followsBuilder get follows =>
      _$this._follows ??=
          new GGetLoggedPersonData_loggedPerson_followsBuilder();
  set follows(GGetLoggedPersonData_loggedPerson_followsBuilder? follows) =>
      _$this._follows = follows;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  GGetLoggedPersonData_loggedPerson_userBuilder? _user;
  GGetLoggedPersonData_loggedPerson_userBuilder get user =>
      _$this._user ??= new GGetLoggedPersonData_loggedPerson_userBuilder();
  set user(GGetLoggedPersonData_loggedPerson_userBuilder? user) =>
      _$this._user = user;

  GGetLoggedPersonData_loggedPersonBuilder() {
    GGetLoggedPersonData_loggedPerson._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPersonBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _suspended = $v.suspended;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _feedTokens = $v.feedTokens?.toBuilder();
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _follows = $v.follows?.toBuilder();
      _followingCount = $v.followingCount;
      _followersCount = $v.followersCount;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPersonBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson build() => _build();

  _$GGetLoggedPersonData_loggedPerson _build() {
    _$GGetLoggedPersonData_loggedPerson _$result;
    try {
      _$result =
          _$v ??
          new _$GGetLoggedPersonData_loggedPerson._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GGetLoggedPersonData_loggedPerson',
              'G__typename',
            ),
            id: id,
            preferredUsername: preferredUsername,
            name: name,
            domain: domain,
            summary: summary,
            url: url,
            suspended: suspended,
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            feedTokens: _feedTokens?.build(),
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            memberships: _memberships?.build(),
            follows: _follows?.build(),
            followingCount: followingCount,
            followersCount: followersCount,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'feedTokens';
        _feedTokens?.build();
        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();
        _$failedField = 'memberships';
        _memberships?.build();
        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GGetLoggedPersonData_loggedPerson',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_avatar
    extends GGetLoggedPersonData_loggedPerson_avatar {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GGetLoggedPersonData_loggedPerson_avatar([
    void Function(GGetLoggedPersonData_loggedPerson_avatarBuilder)? updates,
  ]) => (new GGetLoggedPersonData_loggedPerson_avatarBuilder()..update(updates))
      ._build();

  _$GGetLoggedPersonData_loggedPerson_avatar._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_avatar',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_avatar rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_avatarBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_avatar &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_avatarBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_avatar,
          GGetLoggedPersonData_loggedPerson_avatarBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GGetLoggedPersonData_loggedPerson_avatarBuilder() {
    GGetLoggedPersonData_loggedPerson_avatar._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_avatar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_avatar;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_avatarBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_avatar build() => _build();

  _$GGetLoggedPersonData_loggedPerson_avatar _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_avatar',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_banner
    extends GGetLoggedPersonData_loggedPerson_banner {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? alt;
  @override
  final String? name;
  @override
  final String? url;
  @override
  final int? size;
  @override
  final String? contentType;

  factory _$GGetLoggedPersonData_loggedPerson_banner([
    void Function(GGetLoggedPersonData_loggedPerson_bannerBuilder)? updates,
  ]) => (new GGetLoggedPersonData_loggedPerson_bannerBuilder()..update(updates))
      ._build();

  _$GGetLoggedPersonData_loggedPerson_banner._({
    required this.G__typename,
    this.id,
    this.alt,
    this.name,
    this.url,
    this.size,
    this.contentType,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_banner',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_banner rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_bannerBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_bannerBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_bannerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_banner &&
        G__typename == other.G__typename &&
        id == other.id &&
        alt == other.alt &&
        name == other.name &&
        url == other.url &&
        size == other.size &&
        contentType == other.contentType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_banner',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('alt', alt)
          ..add('name', name)
          ..add('url', url)
          ..add('size', size)
          ..add('contentType', contentType))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_bannerBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_banner,
          GGetLoggedPersonData_loggedPerson_bannerBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  GGetLoggedPersonData_loggedPerson_bannerBuilder() {
    GGetLoggedPersonData_loggedPerson_banner._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _alt = $v.alt;
      _name = $v.name;
      _url = $v.url;
      _size = $v.size;
      _contentType = $v.contentType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_banner other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_banner;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_bannerBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_banner build() => _build();

  _$GGetLoggedPersonData_loggedPerson_banner _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_banner',
            'G__typename',
          ),
          id: id,
          alt: alt,
          name: name,
          url: url,
          size: size,
          contentType: contentType,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_feedTokens
    extends GGetLoggedPersonData_loggedPerson_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GGetLoggedPersonData_loggedPerson_feedTokens([
    void Function(GGetLoggedPersonData_loggedPerson_feedTokensBuilder)? updates,
  ]) =>
      (new GGetLoggedPersonData_loggedPerson_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GGetLoggedPersonData_loggedPerson_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_feedTokens',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_feedTokens rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_feedTokensBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_feedTokensBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_feedTokensBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_feedTokensBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_feedTokens,
          GGetLoggedPersonData_loggedPerson_feedTokensBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_feedTokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GGetLoggedPersonData_loggedPerson_feedTokensBuilder() {
    GGetLoggedPersonData_loggedPerson_feedTokens._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_feedTokensBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_feedTokens other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_feedTokens;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_feedTokensBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_feedTokens build() => _build();

  _$GGetLoggedPersonData_loggedPerson_feedTokens _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_organizedEvents
    extends GGetLoggedPersonData_loggedPerson_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GGetLoggedPersonData_loggedPerson_organizedEvents([
    void Function(GGetLoggedPersonData_loggedPerson_organizedEventsBuilder)?
    updates,
  ]) =>
      (new GGetLoggedPersonData_loggedPerson_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GGetLoggedPersonData_loggedPerson_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_organizedEvents',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_organizedEvents rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_organizedEventsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_organizedEventsBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_organizedEventsBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_organizedEvents,
          GGetLoggedPersonData_loggedPerson_organizedEventsBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_organizedEvents? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GGetLoggedPersonData_loggedPerson_organizedEventsBuilder() {
    GGetLoggedPersonData_loggedPerson_organizedEvents._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_organizedEventsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_organizedEvents other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_organizedEvents;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_organizedEventsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_organizedEvents build() => _build();

  _$GGetLoggedPersonData_loggedPerson_organizedEvents _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_participations
    extends GGetLoggedPersonData_loggedPerson_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GGetLoggedPersonData_loggedPerson_participations([
    void Function(GGetLoggedPersonData_loggedPerson_participationsBuilder)?
    updates,
  ]) =>
      (new GGetLoggedPersonData_loggedPerson_participationsBuilder()
            ..update(updates))
          ._build();

  _$GGetLoggedPersonData_loggedPerson_participations._({
    required this.G__typename,
    this.total,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_participations',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_participations rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_participationsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_participationsBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_participationsBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_participations,
          GGetLoggedPersonData_loggedPerson_participationsBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_participations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GGetLoggedPersonData_loggedPerson_participationsBuilder() {
    GGetLoggedPersonData_loggedPerson_participations._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_participationsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_participations other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_participations;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_participationsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_participations build() => _build();

  _$GGetLoggedPersonData_loggedPerson_participations _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_memberships
    extends GGetLoggedPersonData_loggedPerson_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GGetLoggedPersonData_loggedPerson_memberships([
    void Function(GGetLoggedPersonData_loggedPerson_membershipsBuilder)?
    updates,
  ]) =>
      (new GGetLoggedPersonData_loggedPerson_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GGetLoggedPersonData_loggedPerson_memberships._({
    required this.G__typename,
    this.total,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_memberships',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_memberships rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_membershipsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_membershipsBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_membershipsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_membershipsBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_memberships,
          GGetLoggedPersonData_loggedPerson_membershipsBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_memberships? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GGetLoggedPersonData_loggedPerson_membershipsBuilder() {
    GGetLoggedPersonData_loggedPerson_memberships._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_membershipsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_memberships other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_memberships;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_membershipsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_memberships build() => _build();

  _$GGetLoggedPersonData_loggedPerson_memberships _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_follows
    extends GGetLoggedPersonData_loggedPerson_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GGetLoggedPersonData_loggedPerson_follows([
    void Function(GGetLoggedPersonData_loggedPerson_followsBuilder)? updates,
  ]) =>
      (new GGetLoggedPersonData_loggedPerson_followsBuilder()..update(updates))
          ._build();

  _$GGetLoggedPersonData_loggedPerson_follows._({
    required this.G__typename,
    this.total,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_follows',
      'G__typename',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_follows rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_followsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_followsBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_followsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_followsBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_follows,
          GGetLoggedPersonData_loggedPerson_followsBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_follows? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GGetLoggedPersonData_loggedPerson_followsBuilder() {
    GGetLoggedPersonData_loggedPerson_follows._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_followsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_follows other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_follows;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_followsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_follows build() => _build();

  _$GGetLoggedPersonData_loggedPerson_follows _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GGetLoggedPersonData_loggedPerson_user
    extends GGetLoggedPersonData_loggedPerson_user {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i2.GUserRole? role;

  factory _$GGetLoggedPersonData_loggedPerson_user([
    void Function(GGetLoggedPersonData_loggedPerson_userBuilder)? updates,
  ]) => (new GGetLoggedPersonData_loggedPerson_userBuilder()..update(updates))
      ._build();

  _$GGetLoggedPersonData_loggedPerson_user._({
    required this.G__typename,
    this.id,
    required this.email,
    this.role,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GGetLoggedPersonData_loggedPerson_user',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      email,
      r'GGetLoggedPersonData_loggedPerson_user',
      'email',
    );
  }

  @override
  GGetLoggedPersonData_loggedPerson_user rebuild(
    void Function(GGetLoggedPersonData_loggedPerson_userBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GGetLoggedPersonData_loggedPerson_userBuilder toBuilder() =>
      new GGetLoggedPersonData_loggedPerson_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLoggedPersonData_loggedPerson_user &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GGetLoggedPersonData_loggedPerson_user',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('role', role))
        .toString();
  }
}

class GGetLoggedPersonData_loggedPerson_userBuilder
    implements
        Builder<
          GGetLoggedPersonData_loggedPerson_user,
          GGetLoggedPersonData_loggedPerson_userBuilder
        > {
  _$GGetLoggedPersonData_loggedPerson_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GGetLoggedPersonData_loggedPerson_userBuilder() {
    GGetLoggedPersonData_loggedPerson_user._initializeBuilder(this);
  }

  GGetLoggedPersonData_loggedPerson_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLoggedPersonData_loggedPerson_user other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLoggedPersonData_loggedPerson_user;
  }

  @override
  void update(
    void Function(GGetLoggedPersonData_loggedPerson_userBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GGetLoggedPersonData_loggedPerson_user build() => _build();

  _$GGetLoggedPersonData_loggedPerson_user _build() {
    final _$result =
        _$v ??
        new _$GGetLoggedPersonData_loggedPerson_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GGetLoggedPersonData_loggedPerson_user',
            'G__typename',
          ),
          id: id,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GGetLoggedPersonData_loggedPerson_user',
            'email',
          ),
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GUserBasicInfoData extends GUserBasicInfoData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i2.GDateTime? confirmedAt;
  @override
  final _i2.GDateTime? confirmationSentAt;
  @override
  final _i2.GDateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final _i2.GDateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final String? locale;
  @override
  final GUserBasicInfoData_defaultActor? defaultActor;
  @override
  final bool? disabled;
  @override
  final _i2.GUserRole? role;
  @override
  final String? provider;
  @override
  final int? mediaSize;

  factory _$GUserBasicInfoData([
    void Function(GUserBasicInfoDataBuilder)? updates,
  ]) => (new GUserBasicInfoDataBuilder()..update(updates))._build();

  _$GUserBasicInfoData._({
    required this.G__typename,
    this.id,
    required this.email,
    this.confirmedAt,
    this.confirmationSentAt,
    this.lastSignInAt,
    this.lastSignInIp,
    this.currentSignInAt,
    this.currentSignInIp,
    this.locale,
    this.defaultActor,
    this.disabled,
    this.role,
    this.provider,
    this.mediaSize,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserBasicInfoData',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      email,
      r'GUserBasicInfoData',
      'email',
    );
  }

  @override
  GUserBasicInfoData rebuild(
    void Function(GUserBasicInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserBasicInfoDataBuilder toBuilder() =>
      new GUserBasicInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserBasicInfoData &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        confirmedAt == other.confirmedAt &&
        confirmationSentAt == other.confirmationSentAt &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        locale == other.locale &&
        defaultActor == other.defaultActor &&
        disabled == other.disabled &&
        role == other.role &&
        provider == other.provider &&
        mediaSize == other.mediaSize;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, defaultActor.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserBasicInfoData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('confirmedAt', confirmedAt)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('locale', locale)
          ..add('defaultActor', defaultActor)
          ..add('disabled', disabled)
          ..add('role', role)
          ..add('provider', provider)
          ..add('mediaSize', mediaSize))
        .toString();
  }
}

class GUserBasicInfoDataBuilder
    implements Builder<GUserBasicInfoData, GUserBasicInfoDataBuilder> {
  _$GUserBasicInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i2.GDateTimeBuilder? _confirmedAt;
  _i2.GDateTimeBuilder get confirmedAt =>
      _$this._confirmedAt ??= new _i2.GDateTimeBuilder();
  set confirmedAt(_i2.GDateTimeBuilder? confirmedAt) =>
      _$this._confirmedAt = confirmedAt;

  _i2.GDateTimeBuilder? _confirmationSentAt;
  _i2.GDateTimeBuilder get confirmationSentAt =>
      _$this._confirmationSentAt ??= new _i2.GDateTimeBuilder();
  set confirmationSentAt(_i2.GDateTimeBuilder? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  _i2.GDateTimeBuilder? _lastSignInAt;
  _i2.GDateTimeBuilder get lastSignInAt =>
      _$this._lastSignInAt ??= new _i2.GDateTimeBuilder();
  set lastSignInAt(_i2.GDateTimeBuilder? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  _i2.GDateTimeBuilder? _currentSignInAt;
  _i2.GDateTimeBuilder get currentSignInAt =>
      _$this._currentSignInAt ??= new _i2.GDateTimeBuilder();
  set currentSignInAt(_i2.GDateTimeBuilder? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  GUserBasicInfoData_defaultActorBuilder? _defaultActor;
  GUserBasicInfoData_defaultActorBuilder get defaultActor =>
      _$this._defaultActor ??= new GUserBasicInfoData_defaultActorBuilder();
  set defaultActor(GUserBasicInfoData_defaultActorBuilder? defaultActor) =>
      _$this._defaultActor = defaultActor;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GUserBasicInfoDataBuilder() {
    GUserBasicInfoData._initializeBuilder(this);
  }

  GUserBasicInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _confirmedAt = $v.confirmedAt?.toBuilder();
      _confirmationSentAt = $v.confirmationSentAt?.toBuilder();
      _lastSignInAt = $v.lastSignInAt?.toBuilder();
      _lastSignInIp = $v.lastSignInIp;
      _currentSignInAt = $v.currentSignInAt?.toBuilder();
      _currentSignInIp = $v.currentSignInIp;
      _locale = $v.locale;
      _defaultActor = $v.defaultActor?.toBuilder();
      _disabled = $v.disabled;
      _role = $v.role;
      _provider = $v.provider;
      _mediaSize = $v.mediaSize;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserBasicInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserBasicInfoData;
  }

  @override
  void update(void Function(GUserBasicInfoDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserBasicInfoData build() => _build();

  _$GUserBasicInfoData _build() {
    _$GUserBasicInfoData _$result;
    try {
      _$result =
          _$v ??
          new _$GUserBasicInfoData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GUserBasicInfoData',
              'G__typename',
            ),
            id: id,
            email: BuiltValueNullFieldError.checkNotNull(
              email,
              r'GUserBasicInfoData',
              'email',
            ),
            confirmedAt: _confirmedAt?.build(),
            confirmationSentAt: _confirmationSentAt?.build(),
            lastSignInAt: _lastSignInAt?.build(),
            lastSignInIp: lastSignInIp,
            currentSignInAt: _currentSignInAt?.build(),
            currentSignInIp: currentSignInIp,
            locale: locale,
            defaultActor: _defaultActor?.build(),
            disabled: disabled,
            role: role,
            provider: provider,
            mediaSize: mediaSize,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confirmedAt';
        _confirmedAt?.build();
        _$failedField = 'confirmationSentAt';
        _confirmationSentAt?.build();
        _$failedField = 'lastSignInAt';
        _lastSignInAt?.build();

        _$failedField = 'currentSignInAt';
        _currentSignInAt?.build();

        _$failedField = 'defaultActor';
        _defaultActor?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GUserBasicInfoData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserBasicInfoData_defaultActor
    extends GUserBasicInfoData_defaultActor {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;

  factory _$GUserBasicInfoData_defaultActor([
    void Function(GUserBasicInfoData_defaultActorBuilder)? updates,
  ]) =>
      (new GUserBasicInfoData_defaultActorBuilder()..update(updates))._build();

  _$GUserBasicInfoData_defaultActor._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserBasicInfoData_defaultActor',
      'G__typename',
    );
  }

  @override
  GUserBasicInfoData_defaultActor rebuild(
    void Function(GUserBasicInfoData_defaultActorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserBasicInfoData_defaultActorBuilder toBuilder() =>
      new GUserBasicInfoData_defaultActorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserBasicInfoData_defaultActor &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserBasicInfoData_defaultActor')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name))
        .toString();
  }
}

class GUserBasicInfoData_defaultActorBuilder
    implements
        Builder<
          GUserBasicInfoData_defaultActor,
          GUserBasicInfoData_defaultActorBuilder
        > {
  _$GUserBasicInfoData_defaultActor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GUserBasicInfoData_defaultActorBuilder() {
    GUserBasicInfoData_defaultActor._initializeBuilder(this);
  }

  GUserBasicInfoData_defaultActorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserBasicInfoData_defaultActor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserBasicInfoData_defaultActor;
  }

  @override
  void update(void Function(GUserBasicInfoData_defaultActorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserBasicInfoData_defaultActor build() => _build();

  _$GUserBasicInfoData_defaultActor _build() {
    final _$result =
        _$v ??
        new _$GUserBasicInfoData_defaultActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GUserBasicInfoData_defaultActor',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GUserWithSettingsData extends GUserWithSettingsData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i2.GDateTime? confirmedAt;
  @override
  final _i2.GDateTime? confirmationSentAt;
  @override
  final _i2.GDateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final _i2.GDateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final String? locale;
  @override
  final GUserWithSettingsData_defaultActor? defaultActor;
  @override
  final bool? disabled;
  @override
  final _i2.GUserRole? role;
  @override
  final String? provider;
  @override
  final int? mediaSize;
  @override
  final GUserWithSettingsData_settings? settings;

  factory _$GUserWithSettingsData([
    void Function(GUserWithSettingsDataBuilder)? updates,
  ]) => (new GUserWithSettingsDataBuilder()..update(updates))._build();

  _$GUserWithSettingsData._({
    required this.G__typename,
    this.id,
    required this.email,
    this.confirmedAt,
    this.confirmationSentAt,
    this.lastSignInAt,
    this.lastSignInIp,
    this.currentSignInAt,
    this.currentSignInIp,
    this.locale,
    this.defaultActor,
    this.disabled,
    this.role,
    this.provider,
    this.mediaSize,
    this.settings,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserWithSettingsData',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(
      email,
      r'GUserWithSettingsData',
      'email',
    );
  }

  @override
  GUserWithSettingsData rebuild(
    void Function(GUserWithSettingsDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserWithSettingsDataBuilder toBuilder() =>
      new GUserWithSettingsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserWithSettingsData &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        confirmedAt == other.confirmedAt &&
        confirmationSentAt == other.confirmationSentAt &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        locale == other.locale &&
        defaultActor == other.defaultActor &&
        disabled == other.disabled &&
        role == other.role &&
        provider == other.provider &&
        mediaSize == other.mediaSize &&
        settings == other.settings;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, defaultActor.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, settings.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserWithSettingsData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('confirmedAt', confirmedAt)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('locale', locale)
          ..add('defaultActor', defaultActor)
          ..add('disabled', disabled)
          ..add('role', role)
          ..add('provider', provider)
          ..add('mediaSize', mediaSize)
          ..add('settings', settings))
        .toString();
  }
}

class GUserWithSettingsDataBuilder
    implements Builder<GUserWithSettingsData, GUserWithSettingsDataBuilder> {
  _$GUserWithSettingsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i2.GDateTimeBuilder? _confirmedAt;
  _i2.GDateTimeBuilder get confirmedAt =>
      _$this._confirmedAt ??= new _i2.GDateTimeBuilder();
  set confirmedAt(_i2.GDateTimeBuilder? confirmedAt) =>
      _$this._confirmedAt = confirmedAt;

  _i2.GDateTimeBuilder? _confirmationSentAt;
  _i2.GDateTimeBuilder get confirmationSentAt =>
      _$this._confirmationSentAt ??= new _i2.GDateTimeBuilder();
  set confirmationSentAt(_i2.GDateTimeBuilder? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  _i2.GDateTimeBuilder? _lastSignInAt;
  _i2.GDateTimeBuilder get lastSignInAt =>
      _$this._lastSignInAt ??= new _i2.GDateTimeBuilder();
  set lastSignInAt(_i2.GDateTimeBuilder? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  _i2.GDateTimeBuilder? _currentSignInAt;
  _i2.GDateTimeBuilder get currentSignInAt =>
      _$this._currentSignInAt ??= new _i2.GDateTimeBuilder();
  set currentSignInAt(_i2.GDateTimeBuilder? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  GUserWithSettingsData_defaultActorBuilder? _defaultActor;
  GUserWithSettingsData_defaultActorBuilder get defaultActor =>
      _$this._defaultActor ??= new GUserWithSettingsData_defaultActorBuilder();
  set defaultActor(GUserWithSettingsData_defaultActorBuilder? defaultActor) =>
      _$this._defaultActor = defaultActor;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GUserWithSettingsData_settingsBuilder? _settings;
  GUserWithSettingsData_settingsBuilder get settings =>
      _$this._settings ??= new GUserWithSettingsData_settingsBuilder();
  set settings(GUserWithSettingsData_settingsBuilder? settings) =>
      _$this._settings = settings;

  GUserWithSettingsDataBuilder() {
    GUserWithSettingsData._initializeBuilder(this);
  }

  GUserWithSettingsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _confirmedAt = $v.confirmedAt?.toBuilder();
      _confirmationSentAt = $v.confirmationSentAt?.toBuilder();
      _lastSignInAt = $v.lastSignInAt?.toBuilder();
      _lastSignInIp = $v.lastSignInIp;
      _currentSignInAt = $v.currentSignInAt?.toBuilder();
      _currentSignInIp = $v.currentSignInIp;
      _locale = $v.locale;
      _defaultActor = $v.defaultActor?.toBuilder();
      _disabled = $v.disabled;
      _role = $v.role;
      _provider = $v.provider;
      _mediaSize = $v.mediaSize;
      _settings = $v.settings?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserWithSettingsData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserWithSettingsData;
  }

  @override
  void update(void Function(GUserWithSettingsDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserWithSettingsData build() => _build();

  _$GUserWithSettingsData _build() {
    _$GUserWithSettingsData _$result;
    try {
      _$result =
          _$v ??
          new _$GUserWithSettingsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GUserWithSettingsData',
              'G__typename',
            ),
            id: id,
            email: BuiltValueNullFieldError.checkNotNull(
              email,
              r'GUserWithSettingsData',
              'email',
            ),
            confirmedAt: _confirmedAt?.build(),
            confirmationSentAt: _confirmationSentAt?.build(),
            lastSignInAt: _lastSignInAt?.build(),
            lastSignInIp: lastSignInIp,
            currentSignInAt: _currentSignInAt?.build(),
            currentSignInIp: currentSignInIp,
            locale: locale,
            defaultActor: _defaultActor?.build(),
            disabled: disabled,
            role: role,
            provider: provider,
            mediaSize: mediaSize,
            settings: _settings?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confirmedAt';
        _confirmedAt?.build();
        _$failedField = 'confirmationSentAt';
        _confirmationSentAt?.build();
        _$failedField = 'lastSignInAt';
        _lastSignInAt?.build();

        _$failedField = 'currentSignInAt';
        _currentSignInAt?.build();

        _$failedField = 'defaultActor';
        _defaultActor?.build();

        _$failedField = 'settings';
        _settings?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GUserWithSettingsData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserWithSettingsData_defaultActor
    extends GUserWithSettingsData_defaultActor {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;

  factory _$GUserWithSettingsData_defaultActor([
    void Function(GUserWithSettingsData_defaultActorBuilder)? updates,
  ]) => (new GUserWithSettingsData_defaultActorBuilder()..update(updates))
      ._build();

  _$GUserWithSettingsData_defaultActor._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserWithSettingsData_defaultActor',
      'G__typename',
    );
  }

  @override
  GUserWithSettingsData_defaultActor rebuild(
    void Function(GUserWithSettingsData_defaultActorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserWithSettingsData_defaultActorBuilder toBuilder() =>
      new GUserWithSettingsData_defaultActorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserWithSettingsData_defaultActor &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserWithSettingsData_defaultActor')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name))
        .toString();
  }
}

class GUserWithSettingsData_defaultActorBuilder
    implements
        Builder<
          GUserWithSettingsData_defaultActor,
          GUserWithSettingsData_defaultActorBuilder
        > {
  _$GUserWithSettingsData_defaultActor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GUserWithSettingsData_defaultActorBuilder() {
    GUserWithSettingsData_defaultActor._initializeBuilder(this);
  }

  GUserWithSettingsData_defaultActorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserWithSettingsData_defaultActor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserWithSettingsData_defaultActor;
  }

  @override
  void update(
    void Function(GUserWithSettingsData_defaultActorBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GUserWithSettingsData_defaultActor build() => _build();

  _$GUserWithSettingsData_defaultActor _build() {
    final _$result =
        _$v ??
        new _$GUserWithSettingsData_defaultActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GUserWithSettingsData_defaultActor',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GUserWithSettingsData_settings extends GUserWithSettingsData_settings {
  @override
  final String G__typename;
  @override
  final _i2.GTimezone? timezone;

  factory _$GUserWithSettingsData_settings([
    void Function(GUserWithSettingsData_settingsBuilder)? updates,
  ]) => (new GUserWithSettingsData_settingsBuilder()..update(updates))._build();

  _$GUserWithSettingsData_settings._({required this.G__typename, this.timezone})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserWithSettingsData_settings',
      'G__typename',
    );
  }

  @override
  GUserWithSettingsData_settings rebuild(
    void Function(GUserWithSettingsData_settingsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserWithSettingsData_settingsBuilder toBuilder() =>
      new GUserWithSettingsData_settingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserWithSettingsData_settings &&
        G__typename == other.G__typename &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserWithSettingsData_settings')
          ..add('G__typename', G__typename)
          ..add('timezone', timezone))
        .toString();
  }
}

class GUserWithSettingsData_settingsBuilder
    implements
        Builder<
          GUserWithSettingsData_settings,
          GUserWithSettingsData_settingsBuilder
        > {
  _$GUserWithSettingsData_settings? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= new _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GUserWithSettingsData_settingsBuilder() {
    GUserWithSettingsData_settings._initializeBuilder(this);
  }

  GUserWithSettingsData_settingsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserWithSettingsData_settings other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserWithSettingsData_settings;
  }

  @override
  void update(void Function(GUserWithSettingsData_settingsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserWithSettingsData_settings build() => _build();

  _$GUserWithSettingsData_settings _build() {
    _$GUserWithSettingsData_settings _$result;
    try {
      _$result =
          _$v ??
          new _$GUserWithSettingsData_settings._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GUserWithSettingsData_settings',
              'G__typename',
            ),
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GUserWithSettingsData_settings',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserFullData extends GUserFullData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String email;
  @override
  final _i2.GDateTime? confirmedAt;
  @override
  final _i2.GDateTime? confirmationSentAt;
  @override
  final _i2.GDateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final _i2.GDateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final String? locale;
  @override
  final GUserFullData_defaultActor? defaultActor;
  @override
  final bool? disabled;
  @override
  final _i2.GUserRole? role;
  @override
  final String? provider;
  @override
  final int? mediaSize;
  @override
  final GUserFullData_settings? settings;
  @override
  final BuiltList<GUserFullData_actors?> actors;

  factory _$GUserFullData([void Function(GUserFullDataBuilder)? updates]) =>
      (new GUserFullDataBuilder()..update(updates))._build();

  _$GUserFullData._({
    required this.G__typename,
    this.id,
    required this.email,
    this.confirmedAt,
    this.confirmationSentAt,
    this.lastSignInAt,
    this.lastSignInIp,
    this.currentSignInAt,
    this.currentSignInIp,
    this.locale,
    this.defaultActor,
    this.disabled,
    this.role,
    this.provider,
    this.mediaSize,
    this.settings,
    required this.actors,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserFullData',
      'G__typename',
    );
    BuiltValueNullFieldError.checkNotNull(email, r'GUserFullData', 'email');
    BuiltValueNullFieldError.checkNotNull(actors, r'GUserFullData', 'actors');
  }

  @override
  GUserFullData rebuild(void Function(GUserFullDataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserFullDataBuilder toBuilder() => new GUserFullDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserFullData &&
        G__typename == other.G__typename &&
        id == other.id &&
        email == other.email &&
        confirmedAt == other.confirmedAt &&
        confirmationSentAt == other.confirmationSentAt &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        locale == other.locale &&
        defaultActor == other.defaultActor &&
        disabled == other.disabled &&
        role == other.role &&
        provider == other.provider &&
        mediaSize == other.mediaSize &&
        settings == other.settings &&
        actors == other.actors;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, defaultActor.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, settings.hashCode);
    _$hash = $jc(_$hash, actors.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserFullData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('email', email)
          ..add('confirmedAt', confirmedAt)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('locale', locale)
          ..add('defaultActor', defaultActor)
          ..add('disabled', disabled)
          ..add('role', role)
          ..add('provider', provider)
          ..add('mediaSize', mediaSize)
          ..add('settings', settings)
          ..add('actors', actors))
        .toString();
  }
}

class GUserFullDataBuilder
    implements Builder<GUserFullData, GUserFullDataBuilder> {
  _$GUserFullData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  _i2.GDateTimeBuilder? _confirmedAt;
  _i2.GDateTimeBuilder get confirmedAt =>
      _$this._confirmedAt ??= new _i2.GDateTimeBuilder();
  set confirmedAt(_i2.GDateTimeBuilder? confirmedAt) =>
      _$this._confirmedAt = confirmedAt;

  _i2.GDateTimeBuilder? _confirmationSentAt;
  _i2.GDateTimeBuilder get confirmationSentAt =>
      _$this._confirmationSentAt ??= new _i2.GDateTimeBuilder();
  set confirmationSentAt(_i2.GDateTimeBuilder? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  _i2.GDateTimeBuilder? _lastSignInAt;
  _i2.GDateTimeBuilder get lastSignInAt =>
      _$this._lastSignInAt ??= new _i2.GDateTimeBuilder();
  set lastSignInAt(_i2.GDateTimeBuilder? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  _i2.GDateTimeBuilder? _currentSignInAt;
  _i2.GDateTimeBuilder get currentSignInAt =>
      _$this._currentSignInAt ??= new _i2.GDateTimeBuilder();
  set currentSignInAt(_i2.GDateTimeBuilder? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  GUserFullData_defaultActorBuilder? _defaultActor;
  GUserFullData_defaultActorBuilder get defaultActor =>
      _$this._defaultActor ??= new GUserFullData_defaultActorBuilder();
  set defaultActor(GUserFullData_defaultActorBuilder? defaultActor) =>
      _$this._defaultActor = defaultActor;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  GUserFullData_settingsBuilder? _settings;
  GUserFullData_settingsBuilder get settings =>
      _$this._settings ??= new GUserFullData_settingsBuilder();
  set settings(GUserFullData_settingsBuilder? settings) =>
      _$this._settings = settings;

  ListBuilder<GUserFullData_actors?>? _actors;
  ListBuilder<GUserFullData_actors?> get actors =>
      _$this._actors ??= new ListBuilder<GUserFullData_actors?>();
  set actors(ListBuilder<GUserFullData_actors?>? actors) =>
      _$this._actors = actors;

  GUserFullDataBuilder() {
    GUserFullData._initializeBuilder(this);
  }

  GUserFullDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _email = $v.email;
      _confirmedAt = $v.confirmedAt?.toBuilder();
      _confirmationSentAt = $v.confirmationSentAt?.toBuilder();
      _lastSignInAt = $v.lastSignInAt?.toBuilder();
      _lastSignInIp = $v.lastSignInIp;
      _currentSignInAt = $v.currentSignInAt?.toBuilder();
      _currentSignInIp = $v.currentSignInIp;
      _locale = $v.locale;
      _defaultActor = $v.defaultActor?.toBuilder();
      _disabled = $v.disabled;
      _role = $v.role;
      _provider = $v.provider;
      _mediaSize = $v.mediaSize;
      _settings = $v.settings?.toBuilder();
      _actors = $v.actors.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserFullData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserFullData;
  }

  @override
  void update(void Function(GUserFullDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserFullData build() => _build();

  _$GUserFullData _build() {
    _$GUserFullData _$result;
    try {
      _$result =
          _$v ??
          new _$GUserFullData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GUserFullData',
              'G__typename',
            ),
            id: id,
            email: BuiltValueNullFieldError.checkNotNull(
              email,
              r'GUserFullData',
              'email',
            ),
            confirmedAt: _confirmedAt?.build(),
            confirmationSentAt: _confirmationSentAt?.build(),
            lastSignInAt: _lastSignInAt?.build(),
            lastSignInIp: lastSignInIp,
            currentSignInAt: _currentSignInAt?.build(),
            currentSignInIp: currentSignInIp,
            locale: locale,
            defaultActor: _defaultActor?.build(),
            disabled: disabled,
            role: role,
            provider: provider,
            mediaSize: mediaSize,
            settings: _settings?.build(),
            actors: actors.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confirmedAt';
        _confirmedAt?.build();
        _$failedField = 'confirmationSentAt';
        _confirmationSentAt?.build();
        _$failedField = 'lastSignInAt';
        _lastSignInAt?.build();

        _$failedField = 'currentSignInAt';
        _currentSignInAt?.build();

        _$failedField = 'defaultActor';
        _defaultActor?.build();

        _$failedField = 'settings';
        _settings?.build();
        _$failedField = 'actors';
        actors.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GUserFullData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserFullData_defaultActor extends GUserFullData_defaultActor {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;

  factory _$GUserFullData_defaultActor([
    void Function(GUserFullData_defaultActorBuilder)? updates,
  ]) => (new GUserFullData_defaultActorBuilder()..update(updates))._build();

  _$GUserFullData_defaultActor._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserFullData_defaultActor',
      'G__typename',
    );
  }

  @override
  GUserFullData_defaultActor rebuild(
    void Function(GUserFullData_defaultActorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserFullData_defaultActorBuilder toBuilder() =>
      new GUserFullData_defaultActorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserFullData_defaultActor &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserFullData_defaultActor')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name))
        .toString();
  }
}

class GUserFullData_defaultActorBuilder
    implements
        Builder<GUserFullData_defaultActor, GUserFullData_defaultActorBuilder> {
  _$GUserFullData_defaultActor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GUserFullData_defaultActorBuilder() {
    GUserFullData_defaultActor._initializeBuilder(this);
  }

  GUserFullData_defaultActorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserFullData_defaultActor other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserFullData_defaultActor;
  }

  @override
  void update(void Function(GUserFullData_defaultActorBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserFullData_defaultActor build() => _build();

  _$GUserFullData_defaultActor _build() {
    final _$result =
        _$v ??
        new _$GUserFullData_defaultActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GUserFullData_defaultActor',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GUserFullData_settings extends GUserFullData_settings {
  @override
  final String G__typename;
  @override
  final _i2.GTimezone? timezone;

  factory _$GUserFullData_settings([
    void Function(GUserFullData_settingsBuilder)? updates,
  ]) => (new GUserFullData_settingsBuilder()..update(updates))._build();

  _$GUserFullData_settings._({required this.G__typename, this.timezone})
    : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserFullData_settings',
      'G__typename',
    );
  }

  @override
  GUserFullData_settings rebuild(
    void Function(GUserFullData_settingsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserFullData_settingsBuilder toBuilder() =>
      new GUserFullData_settingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserFullData_settings &&
        G__typename == other.G__typename &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserFullData_settings')
          ..add('G__typename', G__typename)
          ..add('timezone', timezone))
        .toString();
  }
}

class GUserFullData_settingsBuilder
    implements Builder<GUserFullData_settings, GUserFullData_settingsBuilder> {
  _$GUserFullData_settings? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= new _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GUserFullData_settingsBuilder() {
    GUserFullData_settings._initializeBuilder(this);
  }

  GUserFullData_settingsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserFullData_settings other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserFullData_settings;
  }

  @override
  void update(void Function(GUserFullData_settingsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserFullData_settings build() => _build();

  _$GUserFullData_settings _build() {
    _$GUserFullData_settings _$result;
    try {
      _$result =
          _$v ??
          new _$GUserFullData_settings._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GUserFullData_settings',
              'G__typename',
            ),
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
          r'GUserFullData_settings',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserFullData_actors extends GUserFullData_actors {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? suspended;

  factory _$GUserFullData_actors([
    void Function(GUserFullData_actorsBuilder)? updates,
  ]) => (new GUserFullData_actorsBuilder()..update(updates))._build();

  _$GUserFullData_actors._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.suspended,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GUserFullData_actors',
      'G__typename',
    );
  }

  @override
  GUserFullData_actors rebuild(
    void Function(GUserFullData_actorsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GUserFullData_actorsBuilder toBuilder() =>
      new GUserFullData_actorsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserFullData_actors &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        suspended == other.suspended;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserFullData_actors')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('suspended', suspended))
        .toString();
  }
}

class GUserFullData_actorsBuilder
    implements Builder<GUserFullData_actors, GUserFullData_actorsBuilder> {
  _$GUserFullData_actors? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  GUserFullData_actorsBuilder() {
    GUserFullData_actors._initializeBuilder(this);
  }

  GUserFullData_actorsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _suspended = $v.suspended;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserFullData_actors other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserFullData_actors;
  }

  @override
  void update(void Function(GUserFullData_actorsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserFullData_actors build() => _build();

  _$GUserFullData_actors _build() {
    final _$result =
        _$v ??
        new _$GUserFullData_actors._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GUserFullData_actors',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
          domain: domain,
          summary: summary,
          url: url,
          suspended: suspended,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GActorBasicInfoData extends GActorBasicInfoData {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? preferredUsername;
  @override
  final String? name;
  @override
  final String? domain;
  @override
  final String? summary;
  @override
  final String? url;
  @override
  final bool? suspended;

  factory _$GActorBasicInfoData([
    void Function(GActorBasicInfoDataBuilder)? updates,
  ]) => (new GActorBasicInfoDataBuilder()..update(updates))._build();

  _$GActorBasicInfoData._({
    required this.G__typename,
    this.id,
    this.preferredUsername,
    this.name,
    this.domain,
    this.summary,
    this.url,
    this.suspended,
  }) : super._() {
    BuiltValueNullFieldError.checkNotNull(
      G__typename,
      r'GActorBasicInfoData',
      'G__typename',
    );
  }

  @override
  GActorBasicInfoData rebuild(
    void Function(GActorBasicInfoDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GActorBasicInfoDataBuilder toBuilder() =>
      new GActorBasicInfoDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GActorBasicInfoData &&
        G__typename == other.G__typename &&
        id == other.id &&
        preferredUsername == other.preferredUsername &&
        name == other.name &&
        domain == other.domain &&
        summary == other.summary &&
        url == other.url &&
        suspended == other.suspended;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GActorBasicInfoData')
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('preferredUsername', preferredUsername)
          ..add('name', name)
          ..add('domain', domain)
          ..add('summary', summary)
          ..add('url', url)
          ..add('suspended', suspended))
        .toString();
  }
}

class GActorBasicInfoDataBuilder
    implements Builder<GActorBasicInfoData, GActorBasicInfoDataBuilder> {
  _$GActorBasicInfoData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  GActorBasicInfoDataBuilder() {
    GActorBasicInfoData._initializeBuilder(this);
  }

  GActorBasicInfoDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _preferredUsername = $v.preferredUsername;
      _name = $v.name;
      _domain = $v.domain;
      _summary = $v.summary;
      _url = $v.url;
      _suspended = $v.suspended;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GActorBasicInfoData other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GActorBasicInfoData;
  }

  @override
  void update(void Function(GActorBasicInfoDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GActorBasicInfoData build() => _build();

  _$GActorBasicInfoData _build() {
    final _$result =
        _$v ??
        new _$GActorBasicInfoData._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GActorBasicInfoData',
            'G__typename',
          ),
          id: id,
          preferredUsername: preferredUsername,
          name: name,
          domain: domain,
          summary: summary,
          url: url,
          suspended: suspended,
        );
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
