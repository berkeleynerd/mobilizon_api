// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'delete_discussion.data.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

Serializer<GDeleteDiscussionData> _$gDeleteDiscussionDataSerializer =
    _$GDeleteDiscussionDataSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion>
_$gDeleteDiscussionDataDeleteDiscussionSerializer =
    _$GDeleteDiscussionData_deleteDiscussionSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_actor>
_$gDeleteDiscussionDataDeleteDiscussionActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_actorSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_actor_avatar>
_$gDeleteDiscussionDataDeleteDiscussionActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_actor_avatarSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata>
_$gDeleteDiscussionDataDeleteDiscussionActorAvatarMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_actor_banner>
_$gDeleteDiscussionDataDeleteDiscussionActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_actor_bannerSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata>
_$gDeleteDiscussionDataDeleteDiscussionActorBannerMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments>
_$gDeleteDiscussionDataDeleteDiscussionCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_commentsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elementsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements_actor>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsActorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsConversationSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements_event>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_eventSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventContactsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventMediaSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventOptionsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventOrganizerActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventParticipantStatsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventPhysicalAddressSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventPictureSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsEventTagsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsInReplyToCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsOriginCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_comments_elements_replies>
_$gDeleteDiscussionDataDeleteDiscussionCommentsElementsRepliesSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator>
_$gDeleteDiscussionDataDeleteDiscussionCreatorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creatorSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_avatar>
_$gDeleteDiscussionDataDeleteDiscussionCreatorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_avatarSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_banner>
_$gDeleteDiscussionDataDeleteDiscussionCreatorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_bannerSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_conversations>
_$gDeleteDiscussionDataDeleteDiscussionCreatorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_conversationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_feedTokens>
_$gDeleteDiscussionDataDeleteDiscussionCreatorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokensSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_follows>
_$gDeleteDiscussionDataDeleteDiscussionCreatorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_followsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_memberOf>
_$gDeleteDiscussionDataDeleteDiscussionCreatorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_memberOfSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_memberships>
_$gDeleteDiscussionDataDeleteDiscussionCreatorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_membershipsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents>
_$gDeleteDiscussionDataDeleteDiscussionCreatorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_participations>
_$gDeleteDiscussionDataDeleteDiscussionCreatorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_participationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_creator_user>
_$gDeleteDiscussionDataDeleteDiscussionCreatorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_creator_userSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastCommentSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actorSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentActorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentAttributedToAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentAttributedToAvatarMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentAttributedToBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentAttributedToBannerMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_conversation>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversationSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationActorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventContactsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventMediaSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventOptionsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventOrganizerActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventParticipantStatsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventPhysicalAddressSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventPictureSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationEventTagsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationLastCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationOriginCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentConversationParticipantsUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_eventSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventContactsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_media>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventMediaSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_options>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventOptionsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventOrganizerActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventParticipantStatsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventPhysicalAddressSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventPictureSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentEventTagsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentActorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentConversationSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventContactsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventMediaSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventOptionsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventOrganizerActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventParticipantStatsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventPhysicalAddressSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventPictureSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentEventTagsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentInReplyToCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentOriginCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentInReplyToCommentRepliesSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_originComment>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentActorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentConversationSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventContactsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventMediaSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventOptionsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventOrganizerActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventParticipantStatsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventPhysicalAddressSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventPictureSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentEventTagsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentInReplyToCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentOriginCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentOriginCommentRepliesSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_replies>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_repliesSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorAvatarSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorBannerSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorFeedTokensSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorFollowsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorMemberOfSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorMembershipsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorOrganizedEventsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorParticipationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesActorUserSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesConversationSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventAttributedToSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventCommentsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventContactsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventConversationsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventMediaSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventMetadataSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventOptionsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventOrganizerActorSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventParticipantStatsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventParticipantsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventPhysicalAddressSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventPictureSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesEventTagsSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesInReplyToCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentSerializer();
Serializer<
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesOriginCommentSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentSerializer();
Serializer<GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies>
_$gDeleteDiscussionDataDeleteDiscussionLastCommentRepliesRepliesSerializer =
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesSerializer();
Serializer<GdeleteDiscussion_EventFieldsData>
_$gdeleteDiscussionEventFieldsDataSerializer =
    _$GdeleteDiscussion_EventFieldsDataSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_attributedTo>
_$gdeleteDiscussionEventFieldsDataAttributedToSerializer =
    _$GdeleteDiscussion_EventFieldsData_attributedToSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_comments>
_$gdeleteDiscussionEventFieldsDataCommentsSerializer =
    _$GdeleteDiscussion_EventFieldsData_commentsSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_contacts>
_$gdeleteDiscussionEventFieldsDataContactsSerializer =
    _$GdeleteDiscussion_EventFieldsData_contactsSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_conversations>
_$gdeleteDiscussionEventFieldsDataConversationsSerializer =
    _$GdeleteDiscussion_EventFieldsData_conversationsSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_media>
_$gdeleteDiscussionEventFieldsDataMediaSerializer =
    _$GdeleteDiscussion_EventFieldsData_mediaSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_metadata>
_$gdeleteDiscussionEventFieldsDataMetadataSerializer =
    _$GdeleteDiscussion_EventFieldsData_metadataSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_options>
_$gdeleteDiscussionEventFieldsDataOptionsSerializer =
    _$GdeleteDiscussion_EventFieldsData_optionsSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_organizerActor>
_$gdeleteDiscussionEventFieldsDataOrganizerActorSerializer =
    _$GdeleteDiscussion_EventFieldsData_organizerActorSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_participantStats>
_$gdeleteDiscussionEventFieldsDataParticipantStatsSerializer =
    _$GdeleteDiscussion_EventFieldsData_participantStatsSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_participants>
_$gdeleteDiscussionEventFieldsDataParticipantsSerializer =
    _$GdeleteDiscussion_EventFieldsData_participantsSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_physicalAddress>
_$gdeleteDiscussionEventFieldsDataPhysicalAddressSerializer =
    _$GdeleteDiscussion_EventFieldsData_physicalAddressSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_picture>
_$gdeleteDiscussionEventFieldsDataPictureSerializer =
    _$GdeleteDiscussion_EventFieldsData_pictureSerializer();
Serializer<GdeleteDiscussion_EventFieldsData_tags>
_$gdeleteDiscussionEventFieldsDataTagsSerializer =
    _$GdeleteDiscussion_EventFieldsData_tagsSerializer();
Serializer<GdeleteDiscussion_MediaFieldsData>
_$gdeleteDiscussionMediaFieldsDataSerializer =
    _$GdeleteDiscussion_MediaFieldsDataSerializer();
Serializer<GdeleteDiscussion_MediaFieldsData_metadata>
_$gdeleteDiscussionMediaFieldsDataMetadataSerializer =
    _$GdeleteDiscussion_MediaFieldsData_metadataSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData>
_$gdeleteDiscussionPersonFieldsDataSerializer =
    _$GdeleteDiscussion_PersonFieldsDataSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_avatar>
_$gdeleteDiscussionPersonFieldsDataAvatarSerializer =
    _$GdeleteDiscussion_PersonFieldsData_avatarSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_banner>
_$gdeleteDiscussionPersonFieldsDataBannerSerializer =
    _$GdeleteDiscussion_PersonFieldsData_bannerSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_conversations>
_$gdeleteDiscussionPersonFieldsDataConversationsSerializer =
    _$GdeleteDiscussion_PersonFieldsData_conversationsSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_feedTokens>
_$gdeleteDiscussionPersonFieldsDataFeedTokensSerializer =
    _$GdeleteDiscussion_PersonFieldsData_feedTokensSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_follows>
_$gdeleteDiscussionPersonFieldsDataFollowsSerializer =
    _$GdeleteDiscussion_PersonFieldsData_followsSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_memberOf>
_$gdeleteDiscussionPersonFieldsDataMemberOfSerializer =
    _$GdeleteDiscussion_PersonFieldsData_memberOfSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_memberships>
_$gdeleteDiscussionPersonFieldsDataMembershipsSerializer =
    _$GdeleteDiscussion_PersonFieldsData_membershipsSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_organizedEvents>
_$gdeleteDiscussionPersonFieldsDataOrganizedEventsSerializer =
    _$GdeleteDiscussion_PersonFieldsData_organizedEventsSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_participations>
_$gdeleteDiscussionPersonFieldsDataParticipationsSerializer =
    _$GdeleteDiscussion_PersonFieldsData_participationsSerializer();
Serializer<GdeleteDiscussion_PersonFieldsData_user>
_$gdeleteDiscussionPersonFieldsDataUserSerializer =
    _$GdeleteDiscussion_PersonFieldsData_userSerializer();

class _$GDeleteDiscussionDataSerializer
    implements StructuredSerializer<GDeleteDiscussionData> {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData,
    _$GDeleteDiscussionData,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.deleteDiscussion;
    if (value != null) {
      result
        ..add('deleteDiscussion')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deleteDiscussion':
          result.deleteDiscussion.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussionSerializer
    implements StructuredSerializer<GDeleteDiscussionData_deleteDiscussion> {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion,
    _$GDeleteDiscussionData_deleteDiscussion,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_actor,
            ),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments,
            ),
          ),
        );
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastComment;
    if (value != null) {
      result
        ..add('lastComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment,
            ),
          ),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussionBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_actor,
          );
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments,
          );
          break;
        case 'creator':
          result.creator.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastComment':
          result.lastComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment,
          );
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actorSerializer
    implements
        StructuredSerializer<GDeleteDiscussionData_deleteDiscussion_actor> {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_actor,
    _$GDeleteDiscussionData_deleteDiscussion_actor,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_actor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_actor_banner,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_actor_banner,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_actor_avatar,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_actor_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.blurhash;
    if (value != null) {
      result
        ..add('blurhash')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.height;
    if (value != null) {
      result
        ..add('height')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.width;
    if (value != null) {
      result
        ..add('width')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'blurhash':
          result.blurhash =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'height':
          result.height =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'width':
          result.width =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_actor_banner,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_actor_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.blurhash;
    if (value != null) {
      result
        ..add('blurhash')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.height;
    if (value != null) {
      result
        ..add('height')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.width;
    if (value != null) {
      result
        ..add('width')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'blurhash':
          result.blurhash =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'height':
          result.height =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'width':
          result.width =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_commentsSerializer
    implements
        StructuredSerializer<GDeleteDiscussionData_deleteDiscussion_comments> {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments,
    _$GDeleteDiscussionData_deleteDiscussion_comments,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.elements;
    if (value != null) {
      result
        ..add('elements')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements,
              ),
            ]),
          ),
        );
    }
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'elements':
          result.elements.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elementsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor,
            ),
          ),
        );
    }
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo,
            ),
          ),
        );
    }
    value = object.conversation;
    if (value != null) {
      result
        ..add('conversation')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation,
            ),
          ),
        );
    }
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.event;
    if (value != null) {
      result
        ..add('event')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.inReplyToComment;
    if (value != null) {
      result
        ..add('inReplyToComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment,
            ),
          ),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.originComment;
    if (value != null) {
      result
        ..add('originComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment,
            ),
          ),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.replies;
    if (value != null) {
      result
        ..add('replies')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_replies,
              ),
            ]),
          ),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor,
          );
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo,
          );
          break;
        case 'conversation':
          result.conversation.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation,
          );
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'event':
          result.event.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'inReplyToComment':
          result.inReplyToComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment,
          );
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'originComment':
          result.originComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment,
          );
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'replies':
          result.replies.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_replies,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.conversationParticipantId;
    if (value != null) {
      result
        ..add('conversationParticipantId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.unread;
    if (value != null) {
      result
        ..add('unread')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'conversationParticipantId':
          result.conversationParticipantId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'unread':
          result.unread =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_eventSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media,
              ),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags,
              ),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_replies
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_comments_elements_replies,
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_comments_elements_replies';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_comments_elements_replies object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_replies deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creatorSerializer
    implements
        StructuredSerializer<GDeleteDiscussionData_deleteDiscussion_creator> {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator,
    _$GDeleteDiscussionData_deleteDiscussion_creator,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_creator';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_creator_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_creator_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_creator_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_creatorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_creator_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_creator_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_creator_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_creator_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_creator_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_banner,
    _$GDeleteDiscussionData_deleteDiscussion_creator_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_creator_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_conversations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_conversations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_feedTokens object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_feedTokens deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_follows,
    _$GDeleteDiscussionData_deleteDiscussion_creator_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_follows object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_follows deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_memberOf object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberOf deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_creator_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_memberships object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberships deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_participations,
    _$GDeleteDiscussionData_deleteDiscussion_creator_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_creator_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_participations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_participations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_creator_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_creator_user,
    _$GDeleteDiscussionData_deleteDiscussion_creator_user,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_creator_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_creator_user object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_user deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_creator_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment,
  ];
  @override
  final String wireName = 'GDeleteDiscussionData_deleteDiscussion_lastComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor,
            ),
          ),
        );
    }
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo,
            ),
          ),
        );
    }
    value = object.conversation;
    if (value != null) {
      result
        ..add('conversation')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation,
            ),
          ),
        );
    }
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.event;
    if (value != null) {
      result
        ..add('event')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.inReplyToComment;
    if (value != null) {
      result
        ..add('inReplyToComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment,
            ),
          ),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.originComment;
    if (value != null) {
      result
        ..add('originComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment,
            ),
          ),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.replies;
    if (value != null) {
      result
        ..add('replies')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies,
              ),
            ]),
          ),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor,
          );
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo,
          );
          break;
        case 'conversation':
          result.conversation.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation,
          );
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'event':
          result.event.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'inReplyToComment':
          result.inReplyToComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment,
          );
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'originComment':
          result.originComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment,
          );
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'replies':
          result.replies.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.blurhash;
    if (value != null) {
      result
        ..add('blurhash')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.height;
    if (value != null) {
      result
        ..add('height')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.width;
    if (value != null) {
      result
        ..add('width')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'blurhash':
          result.blurhash =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'height':
          result.height =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'width':
          result.width =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.blurhash;
    if (value != null) {
      result
        ..add('blurhash')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.height;
    if (value != null) {
      result
        ..add('height')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.width;
    if (value != null) {
      result
        ..add('width')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'blurhash':
          result.blurhash =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'height':
          result.height =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'width':
          result.width =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversationSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor,
            ),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments,
            ),
          ),
        );
    }
    value = object.conversationParticipantId;
    if (value != null) {
      result
        ..add('conversationParticipantId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.event;
    if (value != null) {
      result
        ..add('event')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastComment;
    if (value != null) {
      result
        ..add('lastComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment,
            ),
          ),
        );
    }
    value = object.originComment;
    if (value != null) {
      result
        ..add('originComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants,
              ),
            ]),
          ),
        );
    }
    value = object.unread;
    if (value != null) {
      result
        ..add('unread')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor,
          );
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments,
          );
          break;
        case 'conversationParticipantId':
          result.conversationParticipantId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'event':
          result.event.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastComment':
          result.lastComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment,
          );
          break;
        case 'originComment':
          result.originComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'unread':
          result.unread =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media,
              ),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags,
              ),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_eventSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_event_media,
              ),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags,
              ),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_event_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_options,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_media
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_media,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_media object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_media deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_options
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_options,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_options object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_options deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor,
            ),
          ),
        );
    }
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo,
            ),
          ),
        );
    }
    value = object.conversation;
    if (value != null) {
      result
        ..add('conversation')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation,
            ),
          ),
        );
    }
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.event;
    if (value != null) {
      result
        ..add('event')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.inReplyToComment;
    if (value != null) {
      result
        ..add('inReplyToComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment,
            ),
          ),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.originComment;
    if (value != null) {
      result
        ..add('originComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment,
            ),
          ),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.replies;
    if (value != null) {
      result
        ..add('replies')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies,
              ),
            ]),
          ),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor,
          );
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo,
          );
          break;
        case 'conversation':
          result.conversation.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation,
          );
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'event':
          result.event.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'inReplyToComment':
          result.inReplyToComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment,
          );
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'originComment':
          result.originComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment,
          );
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'replies':
          result.replies.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.conversationParticipantId;
    if (value != null) {
      result
        ..add('conversationParticipantId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.unread;
    if (value != null) {
      result
        ..add('unread')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'conversationParticipantId':
          result.conversationParticipantId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'unread':
          result.unread =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media,
              ),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags,
              ),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor,
            ),
          ),
        );
    }
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo,
            ),
          ),
        );
    }
    value = object.conversation;
    if (value != null) {
      result
        ..add('conversation')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation,
            ),
          ),
        );
    }
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.event;
    if (value != null) {
      result
        ..add('event')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.inReplyToComment;
    if (value != null) {
      result
        ..add('inReplyToComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment,
            ),
          ),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.originComment;
    if (value != null) {
      result
        ..add('originComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment,
            ),
          ),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.replies;
    if (value != null) {
      result
        ..add('replies')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies,
              ),
            ]),
          ),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor,
          );
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo,
          );
          break;
        case 'conversation':
          result.conversation.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation,
          );
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'event':
          result.event.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'inReplyToComment':
          result.inReplyToComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment,
          );
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'originComment':
          result.originComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment,
          );
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'replies':
          result.replies.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.conversationParticipantId;
    if (value != null) {
      result
        ..add('conversationParticipantId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.unread;
    if (value != null) {
      result
        ..add('unread')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'conversationParticipantId':
          result.conversationParticipantId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'unread':
          result.unread =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media,
              ),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags,
              ),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_repliesSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.actor;
    if (value != null) {
      result
        ..add('actor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor,
            ),
          ),
        );
    }
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo,
            ),
          ),
        );
    }
    value = object.conversation;
    if (value != null) {
      result
        ..add('conversation')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation,
            ),
          ),
        );
    }
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.event;
    if (value != null) {
      result
        ..add('event')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.inReplyToComment;
    if (value != null) {
      result
        ..add('inReplyToComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment,
            ),
          ),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.originComment;
    if (value != null) {
      result
        ..add('originComment')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment,
            ),
          ),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.replies;
    if (value != null) {
      result
        ..add('replies')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies,
              ),
            ]),
          ),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'actor':
          result.actor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor,
          );
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo,
          );
          break;
        case 'conversation':
          result.conversation.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation,
          );
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'event':
          result.event.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'inReplyToComment':
          result.inReplyToComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment,
          );
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'originComment':
          result.originComment.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment,
          );
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'replies':
          result.replies.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.conversationParticipantId;
    if (value != null) {
      result
        ..add('conversationParticipantId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.unread;
    if (value != null) {
      result
        ..add('unread')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'conversationParticipantId':
          result.conversationParticipantId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'unread':
          result.unread =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media,
              ),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags,
              ),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture,
                  ),
                )!
                as GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
    object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesSerializer
    implements
        StructuredSerializer<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies
        > {
  @override
  final Iterable<Type> types = const [
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies,
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies,
  ];
  @override
  final String wireName =
      'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies
  deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result =
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsDataSerializer
    implements StructuredSerializer<GdeleteDiscussion_EventFieldsData> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData,
    _$GdeleteDiscussion_EventFieldsData,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.attributedTo;
    if (value != null) {
      result
        ..add('attributedTo')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_attributedTo,
            ),
          ),
        );
    }
    value = object.beginsOn;
    if (value != null) {
      result
        ..add('beginsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCategory),
          ),
        );
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GdeleteDiscussion_EventFieldsData_comments,
              ),
            ]),
          ),
        );
    }
    value = object.contacts;
    if (value != null) {
      result
        ..add('contacts')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GdeleteDiscussion_EventFieldsData_contacts,
              ),
            ]),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_conversations,
            ),
          ),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.endsOn;
    if (value != null) {
      result
        ..add('endsOn')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.externalParticipationUrl;
    if (value != null) {
      result
        ..add('externalParticipationUrl')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.joinOptions;
    if (value != null) {
      result
        ..add('joinOptions')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventJoinOptions),
          ),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.longEvent;
    if (value != null) {
      result
        ..add('longEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.media;
    if (value != null) {
      result
        ..add('media')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(GdeleteDiscussion_EventFieldsData_media),
            ]),
          ),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GdeleteDiscussion_EventFieldsData_metadata,
              ),
            ]),
          ),
        );
    }
    value = object.onlineAddress;
    if (value != null) {
      result
        ..add('onlineAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.options;
    if (value != null) {
      result
        ..add('options')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_options,
            ),
          ),
        );
    }
    value = object.organizerActor;
    if (value != null) {
      result
        ..add('organizerActor')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_organizerActor,
            ),
          ),
        );
    }
    value = object.participantStats;
    if (value != null) {
      result
        ..add('participantStats')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_participantStats,
            ),
          ),
        );
    }
    value = object.participants;
    if (value != null) {
      result
        ..add('participants')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_participants,
            ),
          ),
        );
    }
    value = object.phoneAddress;
    if (value != null) {
      result
        ..add('phoneAddress')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.physicalAddress;
    if (value != null) {
      result
        ..add('physicalAddress')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_physicalAddress,
            ),
          ),
        );
    }
    value = object.picture;
    if (value != null) {
      result
        ..add('picture')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_EventFieldsData_picture,
            ),
          ),
        );
    }
    value = object.publishAt;
    if (value != null) {
      result
        ..add('publishAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventStatus),
          ),
        );
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(GdeleteDiscussion_EventFieldsData_tags),
            ]),
          ),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'attributedTo':
          result.attributedTo.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_attributedTo,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_attributedTo,
          );
          break;
        case 'beginsOn':
          result.beginsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'category':
          result.category =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCategory),
                  )
                  as _i2.GEventCategory?;
          break;
        case 'comments':
          result.comments.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_EventFieldsData_comments,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'contacts':
          result.contacts.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_EventFieldsData_contacts,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_conversations,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_conversations,
          );
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'draft':
          result.draft =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'endsOn':
          result.endsOn =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'externalParticipationUrl':
          result.externalParticipationUrl =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'joinOptions':
          result.joinOptions =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventJoinOptions),
                  )
                  as _i2.GEventJoinOptions?;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'longEvent':
          result.longEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'media':
          result.media.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_EventFieldsData_media,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_EventFieldsData_metadata,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'onlineAddress':
          result.onlineAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'options':
          result.options.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_options,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_options,
          );
          break;
        case 'organizerActor':
          result.organizerActor.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_organizerActor,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_organizerActor,
          );
          break;
        case 'participantStats':
          result.participantStats.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_participantStats,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_participantStats,
          );
          break;
        case 'participants':
          result.participants.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_participants,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_participants,
          );
          break;
        case 'phoneAddress':
          result.phoneAddress =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'physicalAddress':
          result.physicalAddress.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_physicalAddress,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_physicalAddress,
          );
          break;
        case 'picture':
          result.picture.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_EventFieldsData_picture,
                  ),
                )!
                as GdeleteDiscussion_EventFieldsData_picture,
          );
          break;
        case 'publishAt':
          result.publishAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'status':
          result.status =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventStatus),
                  )
                  as _i2.GEventStatus?;
          break;
        case 'tags':
          result.tags.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_EventFieldsData_tags,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventVisibility),
                  )
                  as _i2.GEventVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_attributedToSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_attributedTo> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_attributedTo,
    _$GdeleteDiscussion_EventFieldsData_attributedTo,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_attributedTo';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_attributedTo object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_attributedTo deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_attributedToBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_commentsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_comments> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_comments,
    _$GdeleteDiscussion_EventFieldsData_comments,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_comments';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_comments object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'isAnnouncement',
      serializers.serialize(
        object.isAnnouncement,
        specifiedType: const FullType(bool),
      ),
      'threadLanguages',
      serializers.serialize(
        object.threadLanguages,
        specifiedType: const FullType(BuiltList, const [
          const FullType.nullable(String),
        ]),
      ),
    ];
    Object? value;
    value = object.deletedAt;
    if (value != null) {
      result
        ..add('deletedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.language;
    if (value != null) {
      result
        ..add('language')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.primaryLanguage;
    if (value != null) {
      result
        ..add('primaryLanguage')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.text;
    if (value != null) {
      result
        ..add('text')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.totalReplies;
    if (value != null) {
      result
        ..add('totalReplies')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.uuid;
    if (value != null) {
      result
        ..add('uuid')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUUID),
          ),
        );
    }
    value = object.visibility;
    if (value != null) {
      result
        ..add('visibility')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GCommentVisibility),
          ),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_comments deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_commentsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'deletedAt':
          result.deletedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'isAnnouncement':
          result.isAnnouncement =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )!
                  as bool;
          break;
        case 'language':
          result.language =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'primaryLanguage':
          result.primaryLanguage =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'publishedAt':
          result.publishedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'text':
          result.text =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'threadLanguages':
          result.threadLanguages.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'totalReplies':
          result.totalReplies =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'updatedAt':
          result.updatedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'uuid':
          result.uuid.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GUUID),
                )!
                as _i2.GUUID,
          );
          break;
        case 'visibility':
          result.visibility =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GCommentVisibility),
                  )
                  as _i2.GCommentVisibility?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_contactsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_contacts> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_contacts,
    _$GdeleteDiscussion_EventFieldsData_contacts,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_contacts';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_contacts object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_contacts deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_contactsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_conversationsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_conversations> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_conversations,
    _$GdeleteDiscussion_EventFieldsData_conversations,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_conversations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_conversations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_mediaSerializer
    implements StructuredSerializer<GdeleteDiscussion_EventFieldsData_media> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_media,
    _$GdeleteDiscussion_EventFieldsData_media,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_media';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_media object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_media deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_mediaBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_metadataSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_metadata> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_metadata,
    _$GdeleteDiscussion_EventFieldsData_metadata,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_metadata object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.key;
    if (value != null) {
      result
        ..add('key')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventMetadataType),
          ),
        );
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_metadata deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'key':
          result.key =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventMetadataType),
                  )
                  as _i2.GEventMetadataType?;
          break;
        case 'value':
          result.value =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_optionsSerializer
    implements StructuredSerializer<GdeleteDiscussion_EventFieldsData_options> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_options,
    _$GdeleteDiscussion_EventFieldsData_options,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_options';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_options object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.anonymousParticipation;
    if (value != null) {
      result
        ..add('anonymousParticipation')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.attendees;
    if (value != null) {
      result
        ..add('attendees')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(String),
            ]),
          ),
        );
    }
    value = object.commentModeration;
    if (value != null) {
      result
        ..add('commentModeration')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GEventCommentModeration),
          ),
        );
    }
    value = object.hideNumberOfParticipants;
    if (value != null) {
      result
        ..add('hideNumberOfParticipants')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.hideOrganizerWhenGroupEvent;
    if (value != null) {
      result
        ..add('hideOrganizerWhenGroupEvent')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.isOnline;
    if (value != null) {
      result
        ..add('isOnline')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.maximumAttendeeCapacity;
    if (value != null) {
      result
        ..add('maximumAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.program;
    if (value != null) {
      result
        ..add('program')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.remainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('remainingAttendeeCapacity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.showEndTime;
    if (value != null) {
      result
        ..add('showEndTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showParticipationPrice;
    if (value != null) {
      result
        ..add('showParticipationPrice')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showRemainingAttendeeCapacity;
    if (value != null) {
      result
        ..add('showRemainingAttendeeCapacity')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.showStartTime;
    if (value != null) {
      result
        ..add('showStartTime')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_options deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_optionsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'anonymousParticipation':
          result.anonymousParticipation =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'attendees':
          result.attendees.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(String),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'commentModeration':
          result.commentModeration =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GEventCommentModeration),
                  )
                  as _i2.GEventCommentModeration?;
          break;
        case 'hideNumberOfParticipants':
          result.hideNumberOfParticipants =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'hideOrganizerWhenGroupEvent':
          result.hideOrganizerWhenGroupEvent =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'isOnline':
          result.isOnline =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'maximumAttendeeCapacity':
          result.maximumAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'program':
          result.program =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'remainingAttendeeCapacity':
          result.remainingAttendeeCapacity =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'showEndTime':
          result.showEndTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showParticipationPrice':
          result.showParticipationPrice =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showRemainingAttendeeCapacity':
          result.showRemainingAttendeeCapacity =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'showStartTime':
          result.showStartTime =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_organizerActorSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_organizerActor> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_organizerActor,
    _$GdeleteDiscussion_EventFieldsData_organizerActor,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_organizerActor';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_organizerActor object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_organizerActor deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_organizerActorBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_participantStatsSerializer
    implements
        StructuredSerializer<
          GdeleteDiscussion_EventFieldsData_participantStats
        > {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_participantStats,
    _$GdeleteDiscussion_EventFieldsData_participantStats,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_participantStats';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_participantStats object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.administrator;
    if (value != null) {
      result
        ..add('administrator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.creator;
    if (value != null) {
      result
        ..add('creator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.going;
    if (value != null) {
      result
        ..add('going')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.moderator;
    if (value != null) {
      result
        ..add('moderator')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notApproved;
    if (value != null) {
      result
        ..add('notApproved')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.notConfirmed;
    if (value != null) {
      result
        ..add('notConfirmed')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.participant;
    if (value != null) {
      result
        ..add('participant')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.rejected;
    if (value != null) {
      result
        ..add('rejected')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_participantStats deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_participantStatsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'administrator':
          result.administrator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'creator':
          result.creator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'going':
          result.going =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'moderator':
          result.moderator =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notApproved':
          result.notApproved =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'notConfirmed':
          result.notConfirmed =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'participant':
          result.participant =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'rejected':
          result.rejected =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_participantsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_EventFieldsData_participants> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_participants,
    _$GdeleteDiscussion_EventFieldsData_participants,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_participants';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_participants object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_participants deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_participantsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_physicalAddressSerializer
    implements
        StructuredSerializer<
          GdeleteDiscussion_EventFieldsData_physicalAddress
        > {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_physicalAddress,
    _$GdeleteDiscussion_EventFieldsData_physicalAddress,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_physicalAddress';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_physicalAddress object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.geom;
    if (value != null) {
      result
        ..add('geom')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GPoint),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locality;
    if (value != null) {
      result
        ..add('locality')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.originId;
    if (value != null) {
      result
        ..add('originId')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.region;
    if (value != null) {
      result
        ..add('region')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.street;
    if (value != null) {
      result
        ..add('street')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.timezone;
    if (value != null) {
      result
        ..add('timezone')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GTimezone),
          ),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_physicalAddress deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_physicalAddressBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'country':
          result.country =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'description':
          result.description =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'geom':
          result.geom.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GPoint),
                )!
                as _i2.GPoint,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locality':
          result.locality =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'originId':
          result.originId =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'postalCode':
          result.postalCode =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'region':
          result.region =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'street':
          result.street =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'timezone':
          result.timezone.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GTimezone),
                )!
                as _i2.GTimezone,
          );
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_pictureSerializer
    implements StructuredSerializer<GdeleteDiscussion_EventFieldsData_picture> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_picture,
    _$GdeleteDiscussion_EventFieldsData_picture,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_picture';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_picture object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_picture deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_pictureBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_EventFieldsData_tagsSerializer
    implements StructuredSerializer<GdeleteDiscussion_EventFieldsData_tags> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_EventFieldsData_tags,
    _$GdeleteDiscussion_EventFieldsData_tags,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_EventFieldsData_tags';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_EventFieldsData_tags object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_EventFieldsData_tags deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_EventFieldsData_tagsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'slug':
          result.slug =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'title':
          result.title =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_MediaFieldsDataSerializer
    implements StructuredSerializer<GdeleteDiscussion_MediaFieldsData> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_MediaFieldsData,
    _$GdeleteDiscussion_MediaFieldsData,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_MediaFieldsData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_MediaFieldsData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_MediaFieldsData_metadata,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_MediaFieldsData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_MediaFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'metadata':
          result.metadata.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_MediaFieldsData_metadata,
                  ),
                )!
                as GdeleteDiscussion_MediaFieldsData_metadata,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_MediaFieldsData_metadataSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_MediaFieldsData_metadata> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_MediaFieldsData_metadata,
    _$GdeleteDiscussion_MediaFieldsData_metadata,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_MediaFieldsData_metadata';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_MediaFieldsData_metadata object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.blurhash;
    if (value != null) {
      result
        ..add('blurhash')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.height;
    if (value != null) {
      result
        ..add('height')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.width;
    if (value != null) {
      result
        ..add('width')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_MediaFieldsData_metadata deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_MediaFieldsData_metadataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'blurhash':
          result.blurhash =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'height':
          result.height =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'width':
          result.width =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsDataSerializer
    implements StructuredSerializer<GdeleteDiscussion_PersonFieldsData> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData,
    _$GdeleteDiscussion_PersonFieldsData,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.avatar;
    if (value != null) {
      result
        ..add('avatar')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_avatar,
            ),
          ),
        );
    }
    value = object.banner;
    if (value != null) {
      result
        ..add('banner')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_banner,
            ),
          ),
        );
    }
    value = object.conversations;
    if (value != null) {
      result
        ..add('conversations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_conversations,
            ),
          ),
        );
    }
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.feedTokens;
    if (value != null) {
      result
        ..add('feedTokens')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GdeleteDiscussion_PersonFieldsData_feedTokens,
              ),
            ]),
          ),
        );
    }
    value = object.followersCount;
    if (value != null) {
      result
        ..add('followersCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.followingCount;
    if (value != null) {
      result
        ..add('followingCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.follows;
    if (value != null) {
      result
        ..add('follows')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_follows,
            ),
          ),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.local;
    if (value != null) {
      result
        ..add('local')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.manuallyApprovesFollowers;
    if (value != null) {
      result
        ..add('manuallyApprovesFollowers')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.memberOf;
    if (value != null) {
      result
        ..add('memberOf')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(BuiltList, const [
              const FullType.nullable(
                GdeleteDiscussion_PersonFieldsData_memberOf,
              ),
            ]),
          ),
        );
    }
    value = object.memberships;
    if (value != null) {
      result
        ..add('memberships')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_memberships,
            ),
          ),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.organizedEvents;
    if (value != null) {
      result
        ..add('organizedEvents')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_organizedEvents,
            ),
          ),
        );
    }
    value = object.participations;
    if (value != null) {
      result
        ..add('participations')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_participations,
            ),
          ),
        );
    }
    value = object.preferredUsername;
    if (value != null) {
      result
        ..add('preferredUsername')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.summary;
    if (value != null) {
      result
        ..add('summary')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.suspended;
    if (value != null) {
      result
        ..add('suspended')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GActorType),
          ),
        );
    }
    value = object.unreadConversationsCount;
    if (value != null) {
      result
        ..add('unreadConversationsCount')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(
              GdeleteDiscussion_PersonFieldsData_user,
            ),
          ),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsDataBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'avatar':
          result.avatar.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_avatar,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_avatar,
          );
          break;
        case 'banner':
          result.banner.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_banner,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_banner,
          );
          break;
        case 'conversations':
          result.conversations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_conversations,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_conversations,
          );
          break;
        case 'domain':
          result.domain =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'feedTokens':
          result.feedTokens.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_PersonFieldsData_feedTokens,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'followersCount':
          result.followersCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'followingCount':
          result.followingCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'follows':
          result.follows.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_follows,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_follows,
          );
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'local':
          result.local =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'manuallyApprovesFollowers':
          result.manuallyApprovesFollowers =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'memberOf':
          result.memberOf.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(BuiltList, const [
                    const FullType.nullable(
                      GdeleteDiscussion_PersonFieldsData_memberOf,
                    ),
                  ]),
                )!
                as BuiltList<Object?>,
          );
          break;
        case 'memberships':
          result.memberships.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_memberships,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_memberships,
          );
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'organizedEvents':
          result.organizedEvents.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_organizedEvents,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_organizedEvents,
          );
          break;
        case 'participations':
          result.participations.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_participations,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_participations,
          );
          break;
        case 'preferredUsername':
          result.preferredUsername =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'summary':
          result.summary =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'suspended':
          result.suspended =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'type':
          result.type =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GActorType),
                  )
                  as _i2.GActorType?;
          break;
        case 'unreadConversationsCount':
          result.unreadConversationsCount =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'user':
          result.user.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(
                    GdeleteDiscussion_PersonFieldsData_user,
                  ),
                )!
                as GdeleteDiscussion_PersonFieldsData_user,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_avatarSerializer
    implements StructuredSerializer<GdeleteDiscussion_PersonFieldsData_avatar> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_avatar,
    _$GdeleteDiscussion_PersonFieldsData_avatar,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_avatar';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_avatar object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_avatar deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_avatarBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_bannerSerializer
    implements StructuredSerializer<GdeleteDiscussion_PersonFieldsData_banner> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_banner,
    _$GdeleteDiscussion_PersonFieldsData_banner,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_banner';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_banner object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.size;
    if (value != null) {
      result
        ..add('size')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_banner deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_bannerBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'alt':
          result.alt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'contentType':
          result.contentType =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'name':
          result.name =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'size':
          result.size =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'url':
          result.url =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_conversationsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_PersonFieldsData_conversations> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_conversations,
    _$GdeleteDiscussion_PersonFieldsData_conversations,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_conversations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_conversations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_conversations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_conversationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_feedTokensSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_PersonFieldsData_feedTokens> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_feedTokens,
    _$GdeleteDiscussion_PersonFieldsData_feedTokens,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_feedTokens';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_feedTokens object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_feedTokens deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_feedTokensBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'token':
          result.token =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_followsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_PersonFieldsData_follows> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_follows,
    _$GdeleteDiscussion_PersonFieldsData_follows,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_follows';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_follows object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_follows deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_followsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_memberOfSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_PersonFieldsData_memberOf> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_memberOf,
    _$GdeleteDiscussion_PersonFieldsData_memberOf,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_memberOf';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_memberOf object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.insertedAt;
    if (value != null) {
      result
        ..add('insertedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GMemberRoleEnum),
          ),
        );
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GNaiveDateTime),
          ),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_memberOf deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_memberOfBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'insertedAt':
          result.insertedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GMemberRoleEnum),
                  )
                  as _i2.GMemberRoleEnum?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(
            serializers.deserialize(
                  value,
                  specifiedType: const FullType(_i2.GNaiveDateTime),
                )!
                as _i2.GNaiveDateTime,
          );
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_membershipsSerializer
    implements
        StructuredSerializer<GdeleteDiscussion_PersonFieldsData_memberships> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_memberships,
    _$GdeleteDiscussion_PersonFieldsData_memberships,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_memberships';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_memberships object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_memberships deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_membershipsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_organizedEventsSerializer
    implements
        StructuredSerializer<
          GdeleteDiscussion_PersonFieldsData_organizedEvents
        > {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_organizedEvents,
    _$GdeleteDiscussion_PersonFieldsData_organizedEvents,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_organizedEvents';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_organizedEvents object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_organizedEvents deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_participationsSerializer
    implements
        StructuredSerializer<
          GdeleteDiscussion_PersonFieldsData_participations
        > {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_participations,
    _$GdeleteDiscussion_PersonFieldsData_participations,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_participations';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_participations object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.total;
    if (value != null) {
      result
        ..add('total')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_participations deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_participationsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'total':
          result.total =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GdeleteDiscussion_PersonFieldsData_userSerializer
    implements StructuredSerializer<GdeleteDiscussion_PersonFieldsData_user> {
  @override
  final Iterable<Type> types = const [
    GdeleteDiscussion_PersonFieldsData_user,
    _$GdeleteDiscussion_PersonFieldsData_user,
  ];
  @override
  final String wireName = 'GdeleteDiscussion_PersonFieldsData_user';

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    GdeleteDiscussion_PersonFieldsData_user object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = <Object?>[
      '__typename',
      serializers.serialize(
        object.G__typename,
        specifiedType: const FullType(String),
      ),
      'email',
      serializers.serialize(
        object.email,
        specifiedType: const FullType(String),
      ),
    ];
    Object? value;
    value = object.confirmationSentAt;
    if (value != null) {
      result
        ..add('confirmationSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.confirmationToken;
    if (value != null) {
      result
        ..add('confirmationToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.confirmedAt;
    if (value != null) {
      result
        ..add('confirmedAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInAt;
    if (value != null) {
      result
        ..add('currentSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.currentSignInIp;
    if (value != null) {
      result
        ..add('currentSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.disabled;
    if (value != null) {
      result
        ..add('disabled')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(bool)),
        );
    }
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.lastSignInAt;
    if (value != null) {
      result
        ..add('lastSignInAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.lastSignInIp;
    if (value != null) {
      result
        ..add('lastSignInIp')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.locale;
    if (value != null) {
      result
        ..add('locale')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.mediaSize;
    if (value != null) {
      result
        ..add('mediaSize')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.provider;
    if (value != null) {
      result
        ..add('provider')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.resetPasswordSentAt;
    if (value != null) {
      result
        ..add('resetPasswordSentAt')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(DateTime)),
        );
    }
    value = object.resetPasswordToken;
    if (value != null) {
      result
        ..add('resetPasswordToken')
        ..add(
          serializers.serialize(value, specifiedType: const FullType(String)),
        );
    }
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(
          serializers.serialize(
            value,
            specifiedType: const FullType(_i2.GUserRole),
          ),
        );
    }
    return result;
  }

  @override
  GdeleteDiscussion_PersonFieldsData_user deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = GdeleteDiscussion_PersonFieldsData_userBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case '__typename':
          result.G__typename =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'confirmationSentAt':
          result.confirmationSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'confirmationToken':
          result.confirmationToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'confirmedAt':
          result.confirmedAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInAt':
          result.currentSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'currentSignInIp':
          result.currentSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'disabled':
          result.disabled =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(bool),
                  )
                  as bool?;
          break;
        case 'email':
          result.email =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )!
                  as String;
          break;
        case 'id':
          result.id =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'lastSignInAt':
          result.lastSignInAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'lastSignInIp':
          result.lastSignInIp =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'locale':
          result.locale =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'mediaSize':
          result.mediaSize =
              serializers.deserialize(value, specifiedType: const FullType(int))
                  as int?;
          break;
        case 'provider':
          result.provider =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'resetPasswordSentAt':
          result.resetPasswordSentAt =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(DateTime),
                  )
                  as DateTime?;
          break;
        case 'resetPasswordToken':
          result.resetPasswordToken =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(String),
                  )
                  as String?;
          break;
        case 'role':
          result.role =
              serializers.deserialize(
                    value,
                    specifiedType: const FullType(_i2.GUserRole),
                  )
                  as _i2.GUserRole?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDiscussionData extends GDeleteDiscussionData {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion? deleteDiscussion;

  factory _$GDeleteDiscussionData([
    void Function(GDeleteDiscussionDataBuilder)? updates,
  ]) => (GDeleteDiscussionDataBuilder()..update(updates))._build();

  _$GDeleteDiscussionData._({required this.G__typename, this.deleteDiscussion})
    : super._();
  @override
  GDeleteDiscussionData rebuild(
    void Function(GDeleteDiscussionDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionDataBuilder toBuilder() =>
      GDeleteDiscussionDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData &&
        G__typename == other.G__typename &&
        deleteDiscussion == other.deleteDiscussion;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deleteDiscussion.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeleteDiscussionData')
          ..add('G__typename', G__typename)
          ..add('deleteDiscussion', deleteDiscussion))
        .toString();
  }
}

class GDeleteDiscussionDataBuilder
    implements Builder<GDeleteDiscussionData, GDeleteDiscussionDataBuilder> {
  _$GDeleteDiscussionData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussionBuilder? _deleteDiscussion;
  GDeleteDiscussionData_deleteDiscussionBuilder get deleteDiscussion =>
      _$this._deleteDiscussion ??=
          GDeleteDiscussionData_deleteDiscussionBuilder();
  set deleteDiscussion(
    GDeleteDiscussionData_deleteDiscussionBuilder? deleteDiscussion,
  ) => _$this._deleteDiscussion = deleteDiscussion;

  GDeleteDiscussionDataBuilder() {
    GDeleteDiscussionData._initializeBuilder(this);
  }

  GDeleteDiscussionDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deleteDiscussion = $v.deleteDiscussion?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData other) {
    _$v = other as _$GDeleteDiscussionData;
  }

  @override
  void update(void Function(GDeleteDiscussionDataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData build() => _build();

  _$GDeleteDiscussionData _build() {
    _$GDeleteDiscussionData _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData',
              'G__typename',
            ),
            deleteDiscussion: _deleteDiscussion?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'deleteDiscussion';
        _deleteDiscussion?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion
    extends GDeleteDiscussionData_deleteDiscussion {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_actor? actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments? comments;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator? creator;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment? lastComment;
  @override
  final String? slug;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion([
    void Function(GDeleteDiscussionData_deleteDiscussionBuilder)? updates,
  ]) => (GDeleteDiscussionData_deleteDiscussionBuilder()..update(updates))
      ._build();

  _$GDeleteDiscussionData_deleteDiscussion._({
    required this.G__typename,
    this.actor,
    this.comments,
    this.creator,
    this.id,
    this.insertedAt,
    this.lastComment,
    this.slug,
    this.title,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussionBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussionBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        comments == other.comments &&
        creator == other.creator &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        lastComment == other.lastComment &&
        slug == other.slug &&
        title == other.title &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, lastComment.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('comments', comments)
          ..add('creator', creator)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('lastComment', lastComment)
          ..add('slug', slug)
          ..add('title', title)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussionBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion,
          GDeleteDiscussionData_deleteDiscussionBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_actorBuilder? _actor;
  GDeleteDiscussionData_deleteDiscussion_actorBuilder get actor =>
      _$this._actor ??= GDeleteDiscussionData_deleteDiscussion_actorBuilder();
  set actor(GDeleteDiscussionData_deleteDiscussion_actorBuilder? actor) =>
      _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_commentsBuilder? _comments;
  GDeleteDiscussionData_deleteDiscussion_commentsBuilder get comments =>
      _$this._comments ??=
          GDeleteDiscussionData_deleteDiscussion_commentsBuilder();
  set comments(
    GDeleteDiscussionData_deleteDiscussion_commentsBuilder? comments,
  ) => _$this._comments = comments;

  GDeleteDiscussionData_deleteDiscussion_creatorBuilder? _creator;
  GDeleteDiscussionData_deleteDiscussion_creatorBuilder get creator =>
      _$this._creator ??=
          GDeleteDiscussionData_deleteDiscussion_creatorBuilder();
  set creator(GDeleteDiscussionData_deleteDiscussion_creatorBuilder? creator) =>
      _$this._creator = creator;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder? _lastComment;
  GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder get lastComment =>
      _$this._lastComment ??=
          GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder();
  set lastComment(
    GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder? lastComment,
  ) => _$this._lastComment = lastComment;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussionBuilder() {
    GDeleteDiscussionData_deleteDiscussion._initializeBuilder(this);
  }

  GDeleteDiscussionData_deleteDiscussionBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _comments = $v.comments?.toBuilder();
      _creator = $v.creator?.toBuilder();
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _lastComment = $v.lastComment?.toBuilder();
      _slug = $v.slug;
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussionBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion _build() {
    _$GDeleteDiscussionData_deleteDiscussion _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion',
              'G__typename',
            ),
            actor: _actor?.build(),
            comments: _comments?.build(),
            creator: _creator?.build(),
            id: id,
            insertedAt: insertedAt,
            lastComment: _lastComment?.build(),
            slug: slug,
            title: title,
            updatedAt: updatedAt,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'creator';
        _creator?.build();

        _$failedField = 'lastComment';
        _lastComment?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor
    extends GDeleteDiscussionData_deleteDiscussion_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_actor_avatar? avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_actor_banner? banner;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_actor([
    void Function(GDeleteDiscussionData_deleteDiscussion_actorBuilder)? updates,
  ]) => (GDeleteDiscussionData_deleteDiscussion_actorBuilder()..update(updates))
      ._build();

  _$GDeleteDiscussionData_deleteDiscussion_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_actor rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_actorBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_actorBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_actorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_actor,
          GDeleteDiscussionData_deleteDiscussion_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder? _avatar;
  GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder get avatar =>
      _$this._avatar ??=
          GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder? avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder? _banner;
  GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder get banner =>
      _$this._banner ??=
          GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder? banner,
  ) => _$this._banner = banner;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_actor._initializeBuilder(this);
  }

  GDeleteDiscussionData_deleteDiscussion_actorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_actor other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_actor;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_actorBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_actor _build() {
    _$GDeleteDiscussionData_deleteDiscussion_actor _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            domain: domain,
            followersCount: followersCount,
            followingCount: followingCount,
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            name: name,
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_avatar
    extends GDeleteDiscussionData_deleteDiscussion_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata? metadata;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_actor_avatar([
    void Function(GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.metadata,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        metadata == other.metadata &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('metadata', metadata)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_actor_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder?
  _metadata;
  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder
  get metadata => _$this._metadata ??=
      GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder();
  set metadata(
    GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder?
    metadata,
  ) => _$this._metadata = metadata;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _metadata = $v.metadata?.toBuilder();
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_actor_avatar other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_actor_avatar;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_actor_avatarBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_avatar _build() {
    _$GDeleteDiscussionData_deleteDiscussion_actor_avatar _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_actor_avatar._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_actor_avatar',
              'G__typename',
            ),
            alt: alt,
            contentType: contentType,
            id: id,
            metadata: _metadata?.build(),
            name: name,
            size: size,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_actor_avatar',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata
    extends GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata {
  @override
  final String G__typename;
  @override
  final String? blurhash;
  @override
  final int? height;
  @override
  final int? width;

  factory _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata._({
    required this.G__typename,
    this.blurhash,
    this.height,
    this.width,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata &&
        G__typename == other.G__typename &&
        blurhash == other.blurhash &&
        height == other.height &&
        width == other.width;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, blurhash.hashCode);
    _$hash = $jc(_$hash, height.hashCode);
    _$hash = $jc(_$hash, width.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('blurhash', blurhash)
          ..add('height', height)
          ..add('width', width))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata,
          GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _blurhash;
  String? get blurhash => _$this._blurhash;
  set blurhash(String? blurhash) => _$this._blurhash = blurhash;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _blurhash = $v.blurhash;
      _height = $v.height;
      _width = $v.width;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata other,
  ) {
    _$v =
        other as _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_actor_avatar_metadata',
            'G__typename',
          ),
          blurhash: blurhash,
          height: height,
          width: width,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_banner
    extends GDeleteDiscussionData_deleteDiscussion_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata? metadata;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_actor_banner([
    void Function(GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.metadata,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        metadata == other.metadata &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('metadata', metadata)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_actor_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder?
  _metadata;
  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder
  get metadata => _$this._metadata ??=
      GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder();
  set metadata(
    GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder?
    metadata,
  ) => _$this._metadata = metadata;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _metadata = $v.metadata?.toBuilder();
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_actor_banner other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_actor_banner;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_actor_bannerBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_banner _build() {
    _$GDeleteDiscussionData_deleteDiscussion_actor_banner _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_actor_banner._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_actor_banner',
              'G__typename',
            ),
            alt: alt,
            contentType: contentType,
            id: id,
            metadata: _metadata?.build(),
            name: name,
            size: size,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_actor_banner',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata
    extends GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata {
  @override
  final String G__typename;
  @override
  final String? blurhash;
  @override
  final int? height;
  @override
  final int? width;

  factory _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata._({
    required this.G__typename,
    this.blurhash,
    this.height,
    this.width,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata &&
        G__typename == other.G__typename &&
        blurhash == other.blurhash &&
        height == other.height &&
        width == other.width;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, blurhash.hashCode);
    _$hash = $jc(_$hash, height.hashCode);
    _$hash = $jc(_$hash, width.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('blurhash', blurhash)
          ..add('height', height)
          ..add('width', width))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata,
          GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _blurhash;
  String? get blurhash => _$this._blurhash;
  set blurhash(String? blurhash) => _$this._blurhash = blurhash;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _blurhash = $v.blurhash;
      _height = $v.height;
      _width = $v.width;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata other,
  ) {
    _$v =
        other as _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_actor_banner_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_actor_banner_metadata',
            'G__typename',
          ),
          blurhash: blurhash,
          height: height,
          width: width,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments
    extends GDeleteDiscussionData_deleteDiscussion_comments {
  @override
  final String G__typename;
  @override
  final BuiltList<GDeleteDiscussionData_deleteDiscussion_comments_elements?>?
  elements;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments([
    void Function(GDeleteDiscussionData_deleteDiscussion_commentsBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments._({
    required this.G__typename,
    this.elements,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_commentsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_commentsBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_commentsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_comments &&
        G__typename == other.G__typename &&
        elements == other.elements &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, elements.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments',
          )
          ..add('G__typename', G__typename)
          ..add('elements', elements)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments,
          GDeleteDiscussionData_deleteDiscussion_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  ListBuilder<GDeleteDiscussionData_deleteDiscussion_comments_elements?>?
  _elements;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_comments_elements?>
  get elements => _$this._elements ??=
      ListBuilder<GDeleteDiscussionData_deleteDiscussion_comments_elements?>();
  set elements(
    ListBuilder<GDeleteDiscussionData_deleteDiscussion_comments_elements?>?
    elements,
  ) => _$this._elements = elements;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments._initializeBuilder(this);
  }

  GDeleteDiscussionData_deleteDiscussion_commentsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _elements = $v.elements?.toBuilder();
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_comments other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_comments;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_commentsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments',
              'G__typename',
            ),
            elements: _elements?.build(),
            total: total,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'elements';
        _elements?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements
    extends GDeleteDiscussionData_deleteDiscussion_comments_elements {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor? actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo?
  attributedTo;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation?
  conversation;
  @override
  final DateTime? deletedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event? event;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment?
  inReplyToComment;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment?
  originComment;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_replies?
  >?
  replies;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements._({
    required this.G__typename,
    this.actor,
    this.attributedTo,
    this.conversation,
    this.deletedAt,
    this.event,
    this.id,
    this.inReplyToComment,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.originComment,
    this.primaryLanguage,
    this.publishedAt,
    this.replies,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_comments_elements &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        attributedTo == other.attributedTo &&
        conversation == other.conversation &&
        deletedAt == other.deletedAt &&
        event == other.event &&
        id == other.id &&
        inReplyToComment == other.inReplyToComment &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        originComment == other.originComment &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        replies == other.replies &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, conversation.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, event.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, inReplyToComment.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, originComment.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, replies.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('attributedTo', attributedTo)
          ..add('conversation', conversation)
          ..add('deletedAt', deletedAt)
          ..add('event', event)
          ..add('id', id)
          ..add('inReplyToComment', inReplyToComment)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('originComment', originComment)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('replies', replies)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements,
          GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder? _actor;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder
  get actor => _$this._actor ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder();
  set actor(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder?
    actor,
  ) => _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder?
  _conversation;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder
  get conversation => _$this._conversation ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder();
  set conversation(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder?
    conversation,
  ) => _$this._conversation = conversation;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder? _event;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder
  get event => _$this._event ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder();
  set event(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder?
    event,
  ) => _$this._event = event;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder?
  _inReplyToComment;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder
  get inReplyToComment => _$this._inReplyToComment ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder();
  set inReplyToComment(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder?
    inReplyToComment,
  ) => _$this._inReplyToComment = inReplyToComment;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder?
  _originComment;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder
  get originComment => _$this._originComment ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder();
  set originComment(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder?
    originComment,
  ) => _$this._originComment = originComment;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_replies?
  >?
  _replies;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_comments_elements_replies?>
  get replies => _$this._replies ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_replies?
      >();
  set replies(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_replies?
    >?
    replies,
  ) => _$this._replies = replies;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _attributedTo = $v.attributedTo?.toBuilder();
      _conversation = $v.conversation?.toBuilder();
      _deletedAt = $v.deletedAt;
      _event = $v.event?.toBuilder();
      _id = $v.id;
      _inReplyToComment = $v.inReplyToComment?.toBuilder();
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _originComment = $v.originComment?.toBuilder();
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _replies = $v.replies?.toBuilder();
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_comments_elements other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_comments_elements;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elementsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements',
              'G__typename',
            ),
            actor: _actor?.build(),
            attributedTo: _attributedTo?.build(),
            conversation: _conversation?.build(),
            deletedAt: deletedAt,
            event: _event?.build(),
            id: id,
            inReplyToComment: _inReplyToComment?.build(),
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            originComment: _originComment?.build(),
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            replies: _replies?.build(),
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'attributedTo';
        _attributedTo?.build();
        _$failedField = 'conversation';
        _conversation?.build();

        _$failedField = 'event';
        _event?.build();

        _$failedField = 'inReplyToComment';
        _inReplyToComment?.build();

        _$failedField = 'originComment';
        _originComment?.build();

        _$failedField = 'replies';
        _replies?.build();

        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor
    extends GDeleteDiscussionData_deleteDiscussion_comments_elements_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner?
  banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user?
  user;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder?
  _user;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder?
    user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_actor_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation {
  @override
  final String G__typename;
  @override
  final String? conversationParticipantId;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool? unread;
  @override
  final DateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation._({
    required this.G__typename,
    this.conversationParticipantId,
    this.id,
    this.insertedAt,
    this.unread,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation &&
        G__typename == other.G__typename &&
        conversationParticipantId == other.conversationParticipantId &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        unread == other.unread &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, conversationParticipantId.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, unread.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation',
          )
          ..add('G__typename', G__typename)
          ..add('conversationParticipantId', conversationParticipantId)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('unread', unread)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _conversationParticipantId;
  String? get conversationParticipantId => _$this._conversationParticipantId;
  set conversationParticipantId(String? conversationParticipantId) =>
      _$this._conversationParticipantId = conversationParticipantId;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _unread;
  bool? get unread => _$this._unread;
  set unread(bool? unread) => _$this._unread = unread;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _conversationParticipantId = $v.conversationParticipantId;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _unread = $v.unread;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_conversationBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_conversation',
            'G__typename',
          ),
          conversationParticipantId: conversationParticipantId,
          id: id,
          insertedAt: insertedAt,
          unread: unread,
          updatedAt: updatedAt,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event
    extends GDeleteDiscussionData_deleteDiscussion_comments_elements_event {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo?
  attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments?
  >?
  comments;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts?
  >?
  contacts;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations?
  conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media?
  >?
  media;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata?
  >?
  metadata;
  @override
  final String? onlineAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options?
  options;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor?
  organizerActor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats?
  participantStats;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants?
  participants;
  @override
  final String? phoneAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress?
  physicalAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture?
  picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags?
  >?
  tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event',
          )
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments?
  >?
  _comments;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments?
  >
  get comments => _$this._comments ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments?
      >();
  set comments(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments?
    >?
    comments,
  ) => _$this._comments = comments;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts?
  >?
  _contacts;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts?
  >
  get contacts => _$this._contacts ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts?
      >();
  set contacts(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts?
    >?
    contacts,
  ) => _$this._contacts = contacts;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media?
  >?
  _media;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media?
  >
  get media => _$this._media ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media?
      >();
  set media(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media?
    >?
    media,
  ) => _$this._media = media;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata?
  >?
  _metadata;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata?
  >
  get metadata => _$this._metadata ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata?
      >();
  set metadata(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata?
    >?
    metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder?
  _options;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder
  get options => _$this._options ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder();
  set options(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder?
    options,
  ) => _$this._options = options;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder?
  _organizerActor;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder
  get organizerActor => _$this._organizerActor ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder();
  set organizerActor(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder?
    organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder?
  _participantStats;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder();
  set participantStats(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder?
    participantStats,
  ) => _$this._participantStats = participantStats;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder?
  _participants;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder
  get participants => _$this._participants ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder();
  set participants(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder?
    participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder?
  _physicalAddress;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder();
  set physicalAddress(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder?
    physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder?
  _picture;
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder
  get picture => _$this._picture ??=
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder();
  set picture(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder?
    picture,
  ) => _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags?
  >?
  _tags;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags?
  >
  get tags => _$this._tags ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags?
      >();
  set tags(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags?
    >?
    tags,
  ) => _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_eventBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contactsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_mediaBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_optionsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStatsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddressBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_pictureBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tagsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_event_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_inReplyToComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
    extends
        GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_originCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_originComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies
    extends GDeleteDiscussionData_deleteDiscussion_comments_elements_replies {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_replies rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_comments_elements_replies &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_comments_elements_replies',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_comments_elements_replies,
          GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder() {
    GDeleteDiscussionData_deleteDiscussion_comments_elements_replies._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_comments_elements_replies other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_comments_elements_repliesBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_comments_elements_replies build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies _build() {
    _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_comments_elements_replies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_replies',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_comments_elements_replies',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_comments_elements_replies',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator
    extends GDeleteDiscussionData_deleteDiscussion_creator {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_avatar? avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_banner? banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<GDeleteDiscussionData_deleteDiscussion_creator_feedTokens?>?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_follows? follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<GDeleteDiscussionData_deleteDiscussion_creator_memberOf?>?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_memberships? memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_creator_user? user;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator([
    void Function(GDeleteDiscussionData_deleteDiscussion_creatorBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creatorBuilder()..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_creatorBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creatorBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creatorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator,
          GDeleteDiscussionData_deleteDiscussion_creatorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder? _avatar;
  GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder get avatar =>
      _$this._avatar ??=
          GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder? avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder? _banner;
  GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder get banner =>
      _$this._banner ??=
          GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder? banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_feedTokens?>?
  _feedTokens;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_feedTokens?>
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_feedTokens?>();
  set feedTokens(
    ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_feedTokens?>?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder? _follows;
  GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder get follows =>
      _$this._follows ??=
          GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder? follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_memberOf?>?
  _memberOf;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_memberOf?>
  get memberOf => _$this._memberOf ??=
      ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_memberOf?>();
  set memberOf(
    ListBuilder<GDeleteDiscussionData_deleteDiscussion_creator_memberOf?>?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_creator_userBuilder? _user;
  GDeleteDiscussionData_deleteDiscussion_creator_userBuilder get user =>
      _$this._user ??=
          GDeleteDiscussionData_deleteDiscussion_creator_userBuilder();
  set user(GDeleteDiscussionData_deleteDiscussion_creator_userBuilder? user) =>
      _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_creatorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator._initializeBuilder(this);
  }

  GDeleteDiscussionData_deleteDiscussion_creatorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_creator other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_creatorBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator _build() {
    _$GDeleteDiscussionData_deleteDiscussion_creator _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_creator._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_creator',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_creator',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_avatar
    extends GDeleteDiscussionData_deleteDiscussion_creator_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_avatar([
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_avatar rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_avatar,
          GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_creator_avatar other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_avatar;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_avatarBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_avatar build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_avatar _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_banner
    extends GDeleteDiscussionData_deleteDiscussion_creator_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_banner([
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_banner rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_banner,
          GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_creator_banner other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_banner;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_bannerBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_banner build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_banner _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_conversations
    extends GDeleteDiscussionData_deleteDiscussion_creator_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_conversations rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_creator_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_conversations,
          GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_conversations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_creator_conversations other,
  ) {
    _$v =
        other as _$GDeleteDiscussionData_deleteDiscussion_creator_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_conversations build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_conversations _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens
    extends GDeleteDiscussionData_deleteDiscussion_creator_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_feedTokens rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_creator_feedTokens other,
  ) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_feedTokens build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_follows
    extends GDeleteDiscussionData_deleteDiscussion_creator_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_follows rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_follows,
          GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_follows? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_creator_follows other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_follows build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_follows _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf
    extends GDeleteDiscussionData_deleteDiscussion_creator_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberOf rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_memberOf,
          GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_creator_memberOf other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberOf build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf _build() {
    _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_creator_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_creator_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_creator_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_memberships
    extends GDeleteDiscussionData_deleteDiscussion_creator_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberships rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_creator_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_memberships,
          GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_memberships? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_creator_memberships other,
  ) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_memberships build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_memberships _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents
    extends GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_participations
    extends GDeleteDiscussionData_deleteDiscussion_creator_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_participations rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_creator_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_participations,
          GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_participations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_creator_participations other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_creator_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_creator_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_participations build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_participations _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_creator_user
    extends GDeleteDiscussionData_deleteDiscussion_creator_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_creator_user([
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_userBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_creator_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_creator_user rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_userBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_userBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_creator_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_creator_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_creator_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_creator_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_creator_user,
          GDeleteDiscussionData_deleteDiscussion_creator_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_creator_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_creator_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_creator_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_creator_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_creator_user other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_creator_user;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_creator_userBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_creator_user build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_creator_user _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_creator_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_creator_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_creator_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment
    extends GDeleteDiscussionData_deleteDiscussion_lastComment {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor? actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo?
  attributedTo;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation?
  conversation;
  @override
  final DateTime? deletedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event? event;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment?
  inReplyToComment;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment?
  originComment;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final BuiltList<GDeleteDiscussionData_deleteDiscussion_lastComment_replies?>?
  replies;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment([
    void Function(GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder)?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment._({
    required this.G__typename,
    this.actor,
    this.attributedTo,
    this.conversation,
    this.deletedAt,
    this.event,
    this.id,
    this.inReplyToComment,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.originComment,
    this.primaryLanguage,
    this.publishedAt,
    this.replies,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment rebuild(
    void Function(GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_lastComment &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        attributedTo == other.attributedTo &&
        conversation == other.conversation &&
        deletedAt == other.deletedAt &&
        event == other.event &&
        id == other.id &&
        inReplyToComment == other.inReplyToComment &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        originComment == other.originComment &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        replies == other.replies &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, conversation.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, event.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, inReplyToComment.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, originComment.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, replies.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('attributedTo', attributedTo)
          ..add('conversation', conversation)
          ..add('deletedAt', deletedAt)
          ..add('event', event)
          ..add('id', id)
          ..add('inReplyToComment', inReplyToComment)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('originComment', originComment)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('replies', replies)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment,
          GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder? _actor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder get actor =>
      _$this._actor ??=
          GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder();
  set actor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder? actor,
  ) => _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder?
  _conversation;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder
  get conversation => _$this._conversation ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder();
  set conversation(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder?
    conversation,
  ) => _$this._conversation = conversation;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder? _event;
  GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder get event =>
      _$this._event ??=
          GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder();
  set event(
    GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder? event,
  ) => _$this._event = event;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder?
  _inReplyToComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder
  get inReplyToComment => _$this._inReplyToComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder();
  set inReplyToComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder?
    inReplyToComment,
  ) => _$this._inReplyToComment = inReplyToComment;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder?
  _originComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder
  get originComment => _$this._originComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder();
  set originComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder?
    originComment,
  ) => _$this._originComment = originComment;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_replies?>?
  _replies;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_replies?>
  get replies => _$this._replies ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies?
      >();
  set replies(
    ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_replies?>?
    replies,
  ) => _$this._replies = replies;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment._initializeBuilder(this);
  }

  GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _attributedTo = $v.attributedTo?.toBuilder();
      _conversation = $v.conversation?.toBuilder();
      _deletedAt = $v.deletedAt;
      _event = $v.event?.toBuilder();
      _id = $v.id;
      _inReplyToComment = $v.inReplyToComment?.toBuilder();
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _originComment = $v.originComment?.toBuilder();
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _replies = $v.replies?.toBuilder();
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_lastComment other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_lastComment;
  }

  @override
  void update(
    void Function(GDeleteDiscussionData_deleteDiscussion_lastCommentBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment',
              'G__typename',
            ),
            actor: _actor?.build(),
            attributedTo: _attributedTo?.build(),
            conversation: _conversation?.build(),
            deletedAt: deletedAt,
            event: _event?.build(),
            id: id,
            inReplyToComment: _inReplyToComment?.build(),
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            originComment: _originComment?.build(),
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            replies: _replies?.build(),
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'attributedTo';
        _attributedTo?.build();
        _$failedField = 'conversation';
        _conversation?.build();

        _$failedField = 'event';
        _event?.build();

        _$failedField = 'inReplyToComment';
        _inReplyToComment?.build();

        _$failedField = 'originComment';
        _originComment?.build();

        _$failedField = 'replies';
        _replies?.build();

        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar? avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner? banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user? user;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_lastComment_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder? _user;
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder? user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_lastComment_actor other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user,
          GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_actor_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_actor_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner?
  banner;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            domain: domain,
            followersCount: followersCount,
            followingCount: followingCount,
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            name: name,
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata?
  metadata;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.metadata,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        metadata == other.metadata &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('metadata', metadata)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder?
  _metadata;
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder
  get metadata => _$this._metadata ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder();
  set metadata(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder?
    metadata,
  ) => _$this._metadata = metadata;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _metadata = $v.metadata?.toBuilder();
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar',
              'G__typename',
            ),
            alt: alt,
            contentType: contentType,
            id: id,
            metadata: _metadata?.build(),
            name: name,
            size: size,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata {
  @override
  final String G__typename;
  @override
  final String? blurhash;
  @override
  final int? height;
  @override
  final int? width;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata._({
    required this.G__typename,
    this.blurhash,
    this.height,
    this.width,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata &&
        G__typename == other.G__typename &&
        blurhash == other.blurhash &&
        height == other.height &&
        width == other.width;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, blurhash.hashCode);
    _$hash = $jc(_$hash, height.hashCode);
    _$hash = $jc(_$hash, width.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('blurhash', blurhash)
          ..add('height', height)
          ..add('width', width))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _blurhash;
  String? get blurhash => _$this._blurhash;
  set blurhash(String? blurhash) => _$this._blurhash = blurhash;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _blurhash = $v.blurhash;
      _height = $v.height;
      _width = $v.width;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_avatar_metadata',
            'G__typename',
          ),
          blurhash: blurhash,
          height: height,
          width: width,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata?
  metadata;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.metadata,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        metadata == other.metadata &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('metadata', metadata)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder?
  _metadata;
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder
  get metadata => _$this._metadata ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder();
  set metadata(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder?
    metadata,
  ) => _$this._metadata = metadata;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _metadata = $v.metadata?.toBuilder();
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner',
              'G__typename',
            ),
            alt: alt,
            contentType: contentType,
            id: id,
            metadata: _metadata?.build(),
            name: name,
            size: size,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata {
  @override
  final String G__typename;
  @override
  final String? blurhash;
  @override
  final int? height;
  @override
  final int? width;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata._({
    required this.G__typename,
    this.blurhash,
    this.height,
    this.width,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata &&
        G__typename == other.G__typename &&
        blurhash == other.blurhash &&
        height == other.height &&
        width == other.width;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, blurhash.hashCode);
    _$hash = $jc(_$hash, height.hashCode);
    _$hash = $jc(_$hash, width.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('blurhash', blurhash)
          ..add('height', height)
          ..add('width', width))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _blurhash;
  String? get blurhash => _$this._blurhash;
  set blurhash(String? blurhash) => _$this._blurhash = blurhash;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _blurhash = $v.blurhash;
      _height = $v.height;
      _width = $v.width;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_attributedTo_banner_metadata',
            'G__typename',
          ),
          blurhash: blurhash,
          height: height,
          width: width,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_conversation {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor?
  actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments?
  comments;
  @override
  final String? conversationParticipantId;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event?
  event;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment?
  lastComment;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment?
  originComment;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants?
  >?
  participants;
  @override
  final bool? unread;
  @override
  final DateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation._({
    required this.G__typename,
    this.actor,
    this.comments,
    this.conversationParticipantId,
    this.event,
    this.id,
    this.insertedAt,
    this.lastComment,
    this.originComment,
    this.participants,
    this.unread,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        comments == other.comments &&
        conversationParticipantId == other.conversationParticipantId &&
        event == other.event &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        lastComment == other.lastComment &&
        originComment == other.originComment &&
        participants == other.participants &&
        unread == other.unread &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, conversationParticipantId.hashCode);
    _$hash = $jc(_$hash, event.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, lastComment.hashCode);
    _$hash = $jc(_$hash, originComment.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, unread.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('comments', comments)
          ..add('conversationParticipantId', conversationParticipantId)
          ..add('event', event)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('lastComment', lastComment)
          ..add('originComment', originComment)
          ..add('participants', participants)
          ..add('unread', unread)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder?
  _actor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder
  get actor => _$this._actor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder();
  set actor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder?
    actor,
  ) => _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder?
  _comments;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder
  get comments => _$this._comments ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder();
  set comments(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder?
    comments,
  ) => _$this._comments = comments;

  String? _conversationParticipantId;
  String? get conversationParticipantId => _$this._conversationParticipantId;
  set conversationParticipantId(String? conversationParticipantId) =>
      _$this._conversationParticipantId = conversationParticipantId;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder?
  _event;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder
  get event => _$this._event ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder();
  set event(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder?
    event,
  ) => _$this._event = event;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder?
  _lastComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder
  get lastComment => _$this._lastComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder();
  set lastComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder?
    lastComment,
  ) => _$this._lastComment = lastComment;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder?
  _originComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder
  get originComment => _$this._originComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder();
  set originComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder?
    originComment,
  ) => _$this._originComment = originComment;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants?
  >?
  _participants;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants?
  >
  get participants => _$this._participants ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants?
      >();
  set participants(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants?
    >?
    participants,
  ) => _$this._participants = participants;

  bool? _unread;
  bool? get unread => _$this._unread;
  set unread(bool? unread) => _$this._unread = unread;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _comments = $v.comments?.toBuilder();
      _conversationParticipantId = $v.conversationParticipantId;
      _event = $v.event?.toBuilder();
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _lastComment = $v.lastComment?.toBuilder();
      _originComment = $v.originComment?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _unread = $v.unread;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversationBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation',
              'G__typename',
            ),
            actor: _actor?.build(),
            comments: _comments?.build(),
            conversationParticipantId: conversationParticipantId,
            event: _event?.build(),
            id: id,
            insertedAt: insertedAt,
            lastComment: _lastComment?.build(),
            originComment: _originComment?.build(),
            participants: _participants?.build(),
            unread: unread,
            updatedAt: updatedAt,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'comments';
        _comments?.build();

        _$failedField = 'event';
        _event?.build();

        _$failedField = 'lastComment';
        _lastComment?.build();
        _$failedField = 'originComment';
        _originComment?.build();
        _$failedField = 'participants';
        _participants?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner?
  banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user?
  user;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder?
  _user;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder?
    user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_actor_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_comments',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo?
  attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments?
  >?
  comments;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts?
  >?
  contacts;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations?
  conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media?
  >?
  media;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata?
  >?
  metadata;
  @override
  final String? onlineAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options?
  options;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor?
  organizerActor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats?
  participantStats;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants?
  participants;
  @override
  final String? phoneAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress?
  physicalAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture?
  picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags?
  >?
  tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event',
          )
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments?
  >?
  _comments;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments?
  >
  get comments => _$this._comments ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments?
      >();
  set comments(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments?
    >?
    comments,
  ) => _$this._comments = comments;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts?
  >?
  _contacts;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts?
  >
  get contacts => _$this._contacts ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts?
      >();
  set contacts(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts?
    >?
    contacts,
  ) => _$this._contacts = contacts;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media?
  >?
  _media;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media?
  >
  get media => _$this._media ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media?
      >();
  set media(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media?
    >?
    media,
  ) => _$this._media = media;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata?
  >?
  _metadata;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata?
  >
  get metadata => _$this._metadata ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata?
      >();
  set metadata(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata?
    >?
    metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder?
  _options;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder
  get options => _$this._options ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder();
  set options(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder?
    options,
  ) => _$this._options = options;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder?
  _organizerActor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder
  get organizerActor => _$this._organizerActor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder();
  set organizerActor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder?
    organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder?
  _participantStats;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder();
  set participantStats(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder?
    participantStats,
  ) => _$this._participantStats = participantStats;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder?
  _participants;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder
  get participants => _$this._participants ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder();
  set participants(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder?
    participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder?
  _physicalAddress;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder();
  set physicalAddress(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder?
    physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder?
  _picture;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder
  get picture => _$this._picture ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder();
  set picture(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder?
    picture,
  ) => _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags?
  >?
  _tags;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags?
  >
  get tags => _$this._tags ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags?
      >();
  set tags(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags?
    >?
    tags,
  ) => _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_eventBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contactsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_mediaBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_optionsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStatsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddressBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_pictureBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tagsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_event_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_lastComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_originComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner?
  banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user?
  user;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder?
  _user;
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder?
    user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user,
          GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_conversation_participants_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo?
  attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments?
  >?
  comments;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts?
  >?
  contacts;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations?
  conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_media?
  >?
  media;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata?
  >?
  metadata;
  @override
  final String? onlineAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_options?
  options;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor?
  organizerActor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats?
  participantStats;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants?
  participants;
  @override
  final String? phoneAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress?
  physicalAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture?
  picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags?
  >?
  tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDiscussionData_deleteDiscussion_lastComment_event &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event',
          )
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event,
          GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments?
  >?
  _comments;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments?
  >
  get comments => _$this._comments ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments?
      >();
  set comments(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments?
    >?
    comments,
  ) => _$this._comments = comments;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts?
  >?
  _contacts;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts?
  >
  get contacts => _$this._contacts ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts?
      >();
  set contacts(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts?
    >?
    contacts,
  ) => _$this._contacts = contacts;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_event_media?>?
  _media;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_event_media?>
  get media => _$this._media ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_media?
      >();
  set media(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_media?
    >?
    media,
  ) => _$this._media = media;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata?
  >?
  _metadata;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata?
  >
  get metadata => _$this._metadata ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata?
      >();
  set metadata(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata?
    >?
    metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder?
  _options;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder
  get options => _$this._options ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder();
  set options(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder?
    options,
  ) => _$this._options = options;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder?
  _organizerActor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder
  get organizerActor => _$this._organizerActor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder();
  set organizerActor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder?
    organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder?
  _participantStats;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder();
  set participantStats(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder?
    participantStats,
  ) => _$this._participantStats = participantStats;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder?
  _participants;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder
  get participants => _$this._participants ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder();
  set participants(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder?
    participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder?
  _physicalAddress;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder();
  set physicalAddress(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder?
    physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder?
  _picture;
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder
  get picture => _$this._picture ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder();
  set picture(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder?
    picture,
  ) => _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags?>?
  _tags;
  ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags?>
  get tags => _$this._tags ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags?
      >();
  set tags(
    ListBuilder<GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags?>?
    tags,
  ) => _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDiscussionData_deleteDiscussion_lastComment_event other) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_eventBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_event._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_event',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_event',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_contactsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_media rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_media,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_media._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_media other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_mediaBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_media build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_options rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_options,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_options._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_options other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_optionsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_options build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStatsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddressBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_pictureBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags,
          GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_event_tagsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_event_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor?
  actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo?
  attributedTo;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation?
  conversation;
  @override
  final DateTime? deletedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event?
  event;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment?
  inReplyToComment;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment?
  originComment;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies?
  >?
  replies;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment._({
    required this.G__typename,
    this.actor,
    this.attributedTo,
    this.conversation,
    this.deletedAt,
    this.event,
    this.id,
    this.inReplyToComment,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.originComment,
    this.primaryLanguage,
    this.publishedAt,
    this.replies,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        attributedTo == other.attributedTo &&
        conversation == other.conversation &&
        deletedAt == other.deletedAt &&
        event == other.event &&
        id == other.id &&
        inReplyToComment == other.inReplyToComment &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        originComment == other.originComment &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        replies == other.replies &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, conversation.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, event.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, inReplyToComment.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, originComment.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, replies.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('attributedTo', attributedTo)
          ..add('conversation', conversation)
          ..add('deletedAt', deletedAt)
          ..add('event', event)
          ..add('id', id)
          ..add('inReplyToComment', inReplyToComment)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('originComment', originComment)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('replies', replies)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder?
  _actor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder
  get actor => _$this._actor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder();
  set actor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder?
    actor,
  ) => _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder?
  _conversation;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder
  get conversation => _$this._conversation ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder();
  set conversation(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder?
    conversation,
  ) => _$this._conversation = conversation;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder?
  _event;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder
  get event => _$this._event ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder();
  set event(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder?
    event,
  ) => _$this._event = event;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder?
  _inReplyToComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder
  get inReplyToComment => _$this._inReplyToComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder();
  set inReplyToComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder?
    inReplyToComment,
  ) => _$this._inReplyToComment = inReplyToComment;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder?
  _originComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder
  get originComment => _$this._originComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder();
  set originComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder?
    originComment,
  ) => _$this._originComment = originComment;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies?
  >?
  _replies;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies?
  >
  get replies => _$this._replies ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies?
      >();
  set replies(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies?
    >?
    replies,
  ) => _$this._replies = replies;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _attributedTo = $v.attributedTo?.toBuilder();
      _conversation = $v.conversation?.toBuilder();
      _deletedAt = $v.deletedAt;
      _event = $v.event?.toBuilder();
      _id = $v.id;
      _inReplyToComment = $v.inReplyToComment?.toBuilder();
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _originComment = $v.originComment?.toBuilder();
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _replies = $v.replies?.toBuilder();
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment',
              'G__typename',
            ),
            actor: _actor?.build(),
            attributedTo: _attributedTo?.build(),
            conversation: _conversation?.build(),
            deletedAt: deletedAt,
            event: _event?.build(),
            id: id,
            inReplyToComment: _inReplyToComment?.build(),
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            originComment: _originComment?.build(),
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            replies: _replies?.build(),
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'attributedTo';
        _attributedTo?.build();
        _$failedField = 'conversation';
        _conversation?.build();

        _$failedField = 'event';
        _event?.build();

        _$failedField = 'inReplyToComment';
        _inReplyToComment?.build();

        _$failedField = 'originComment';
        _originComment?.build();

        _$failedField = 'replies';
        _replies?.build();

        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner?
  banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user?
  user;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder?
  _user;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder?
    user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_actor_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation {
  @override
  final String G__typename;
  @override
  final String? conversationParticipantId;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool? unread;
  @override
  final DateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation._({
    required this.G__typename,
    this.conversationParticipantId,
    this.id,
    this.insertedAt,
    this.unread,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation &&
        G__typename == other.G__typename &&
        conversationParticipantId == other.conversationParticipantId &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        unread == other.unread &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, conversationParticipantId.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, unread.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation',
          )
          ..add('G__typename', G__typename)
          ..add('conversationParticipantId', conversationParticipantId)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('unread', unread)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _conversationParticipantId;
  String? get conversationParticipantId => _$this._conversationParticipantId;
  set conversationParticipantId(String? conversationParticipantId) =>
      _$this._conversationParticipantId = conversationParticipantId;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _unread;
  bool? get unread => _$this._unread;
  set unread(bool? unread) => _$this._unread = unread;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _conversationParticipantId = $v.conversationParticipantId;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _unread = $v.unread;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversationBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_conversation',
            'G__typename',
          ),
          conversationParticipantId: conversationParticipantId,
          id: id,
          insertedAt: insertedAt,
          unread: unread,
          updatedAt: updatedAt,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo?
  attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments?
  >?
  comments;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts?
  >?
  contacts;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations?
  conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media?
  >?
  media;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata?
  >?
  metadata;
  @override
  final String? onlineAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options?
  options;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor?
  organizerActor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats?
  participantStats;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants?
  participants;
  @override
  final String? phoneAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress?
  physicalAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture?
  picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags?
  >?
  tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event',
          )
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments?
  >?
  _comments;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments?
  >
  get comments => _$this._comments ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments?
      >();
  set comments(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments?
    >?
    comments,
  ) => _$this._comments = comments;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts?
  >?
  _contacts;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts?
  >
  get contacts => _$this._contacts ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts?
      >();
  set contacts(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts?
    >?
    contacts,
  ) => _$this._contacts = contacts;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media?
  >?
  _media;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media?
  >
  get media => _$this._media ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media?
      >();
  set media(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media?
    >?
    media,
  ) => _$this._media = media;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata?
  >?
  _metadata;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata?
  >
  get metadata => _$this._metadata ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata?
      >();
  set metadata(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata?
    >?
    metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder?
  _options;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder
  get options => _$this._options ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder();
  set options(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder?
    options,
  ) => _$this._options = options;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder?
  _organizerActor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder
  get organizerActor => _$this._organizerActor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder();
  set organizerActor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder?
    organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder?
  _participantStats;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder();
  set participantStats(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder?
    participantStats,
  ) => _$this._participantStats = participantStats;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder?
  _participants;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder
  get participants => _$this._participants ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder();
  set participants(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder?
    participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder?
  _physicalAddress;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder();
  set physicalAddress(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder?
    physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder?
  _picture;
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder
  get picture => _$this._picture ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder();
  set picture(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder?
    picture,
  ) => _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags?
  >?
  _tags;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags?
  >
  get tags => _$this._tags ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags?
      >();
  set tags(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags?
    >?
    tags,
  ) => _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_eventBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contactsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_mediaBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_optionsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStatsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddressBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_pictureBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tagsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_event_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_inReplyToComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_originComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies,
          GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_repliesBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_inReplyToComment_replies',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_originComment {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor?
  actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo?
  attributedTo;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation?
  conversation;
  @override
  final DateTime? deletedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event?
  event;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment?
  inReplyToComment;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment?
  originComment;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies?
  >?
  replies;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment._({
    required this.G__typename,
    this.actor,
    this.attributedTo,
    this.conversation,
    this.deletedAt,
    this.event,
    this.id,
    this.inReplyToComment,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.originComment,
    this.primaryLanguage,
    this.publishedAt,
    this.replies,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        attributedTo == other.attributedTo &&
        conversation == other.conversation &&
        deletedAt == other.deletedAt &&
        event == other.event &&
        id == other.id &&
        inReplyToComment == other.inReplyToComment &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        originComment == other.originComment &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        replies == other.replies &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, conversation.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, event.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, inReplyToComment.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, originComment.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, replies.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('attributedTo', attributedTo)
          ..add('conversation', conversation)
          ..add('deletedAt', deletedAt)
          ..add('event', event)
          ..add('id', id)
          ..add('inReplyToComment', inReplyToComment)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('originComment', originComment)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('replies', replies)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder?
  _actor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder
  get actor => _$this._actor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder();
  set actor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder?
    actor,
  ) => _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder?
  _conversation;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder
  get conversation => _$this._conversation ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder();
  set conversation(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder?
    conversation,
  ) => _$this._conversation = conversation;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder?
  _event;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder
  get event => _$this._event ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder();
  set event(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder?
    event,
  ) => _$this._event = event;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder?
  _inReplyToComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder
  get inReplyToComment => _$this._inReplyToComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder();
  set inReplyToComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder?
    inReplyToComment,
  ) => _$this._inReplyToComment = inReplyToComment;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder?
  _originComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder
  get originComment => _$this._originComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder();
  set originComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder?
    originComment,
  ) => _$this._originComment = originComment;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies?
  >?
  _replies;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies?
  >
  get replies => _$this._replies ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies?
      >();
  set replies(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies?
    >?
    replies,
  ) => _$this._replies = replies;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _attributedTo = $v.attributedTo?.toBuilder();
      _conversation = $v.conversation?.toBuilder();
      _deletedAt = $v.deletedAt;
      _event = $v.event?.toBuilder();
      _id = $v.id;
      _inReplyToComment = $v.inReplyToComment?.toBuilder();
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _originComment = $v.originComment?.toBuilder();
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _replies = $v.replies?.toBuilder();
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment',
              'G__typename',
            ),
            actor: _actor?.build(),
            attributedTo: _attributedTo?.build(),
            conversation: _conversation?.build(),
            deletedAt: deletedAt,
            event: _event?.build(),
            id: id,
            inReplyToComment: _inReplyToComment?.build(),
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            originComment: _originComment?.build(),
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            replies: _replies?.build(),
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'attributedTo';
        _attributedTo?.build();
        _$failedField = 'conversation';
        _conversation?.build();

        _$failedField = 'event';
        _event?.build();

        _$failedField = 'inReplyToComment';
        _inReplyToComment?.build();

        _$failedField = 'originComment';
        _originComment?.build();

        _$failedField = 'replies';
        _replies?.build();

        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner?
  banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user?
  user;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder?
  _user;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder?
    user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_actor_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation {
  @override
  final String G__typename;
  @override
  final String? conversationParticipantId;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool? unread;
  @override
  final DateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation._({
    required this.G__typename,
    this.conversationParticipantId,
    this.id,
    this.insertedAt,
    this.unread,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation &&
        G__typename == other.G__typename &&
        conversationParticipantId == other.conversationParticipantId &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        unread == other.unread &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, conversationParticipantId.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, unread.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation',
          )
          ..add('G__typename', G__typename)
          ..add('conversationParticipantId', conversationParticipantId)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('unread', unread)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _conversationParticipantId;
  String? get conversationParticipantId => _$this._conversationParticipantId;
  set conversationParticipantId(String? conversationParticipantId) =>
      _$this._conversationParticipantId = conversationParticipantId;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _unread;
  bool? get unread => _$this._unread;
  set unread(bool? unread) => _$this._unread = unread;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _conversationParticipantId = $v.conversationParticipantId;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _unread = $v.unread;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversationBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_conversation',
            'G__typename',
          ),
          conversationParticipantId: conversationParticipantId,
          id: id,
          insertedAt: insertedAt,
          unread: unread,
          updatedAt: updatedAt,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo?
  attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments?
  >?
  comments;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts?
  >?
  contacts;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations?
  conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media?
  >?
  media;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata?
  >?
  metadata;
  @override
  final String? onlineAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options?
  options;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor?
  organizerActor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats?
  participantStats;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants?
  participants;
  @override
  final String? phoneAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress?
  physicalAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture?
  picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags?
  >?
  tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event',
          )
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments?
  >?
  _comments;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments?
  >
  get comments => _$this._comments ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments?
      >();
  set comments(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments?
    >?
    comments,
  ) => _$this._comments = comments;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts?
  >?
  _contacts;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts?
  >
  get contacts => _$this._contacts ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts?
      >();
  set contacts(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts?
    >?
    contacts,
  ) => _$this._contacts = contacts;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media?
  >?
  _media;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media?
  >
  get media => _$this._media ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media?
      >();
  set media(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media?
    >?
    media,
  ) => _$this._media = media;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata?
  >?
  _metadata;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata?
  >
  get metadata => _$this._metadata ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata?
      >();
  set metadata(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata?
    >?
    metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder?
  _options;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder
  get options => _$this._options ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder();
  set options(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder?
    options,
  ) => _$this._options = options;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder?
  _organizerActor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder
  get organizerActor => _$this._organizerActor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder();
  set organizerActor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder?
    organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder?
  _participantStats;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder();
  set participantStats(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder?
    participantStats,
  ) => _$this._participantStats = participantStats;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder?
  _participants;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder
  get participants => _$this._participants ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder();
  set participants(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder?
    participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder?
  _physicalAddress;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder();
  set physicalAddress(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder?
    physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder?
  _picture;
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder
  get picture => _$this._picture ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder();
  set picture(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder?
    picture,
  ) => _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags?
  >?
  _tags;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags?
  >
  get tags => _$this._tags ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags?
      >();
  set tags(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags?
    >?
    tags,
  ) => _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_eventBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contactsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_mediaBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_optionsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStatsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddressBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_pictureBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tagsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_event_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_inReplyToComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_originComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies,
          GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_repliesBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_originComment_replies',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_replies {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor? actor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo?
  attributedTo;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation?
  conversation;
  @override
  final DateTime? deletedAt;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event? event;
  @override
  final String? id;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment?
  inReplyToComment;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment?
  originComment;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies?
  >?
  replies;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies._({
    required this.G__typename,
    this.actor,
    this.attributedTo,
    this.conversation,
    this.deletedAt,
    this.event,
    this.id,
    this.inReplyToComment,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.originComment,
    this.primaryLanguage,
    this.publishedAt,
    this.replies,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies &&
        G__typename == other.G__typename &&
        actor == other.actor &&
        attributedTo == other.attributedTo &&
        conversation == other.conversation &&
        deletedAt == other.deletedAt &&
        event == other.event &&
        id == other.id &&
        inReplyToComment == other.inReplyToComment &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        originComment == other.originComment &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        replies == other.replies &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, actor.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, conversation.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, event.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, inReplyToComment.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, originComment.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, replies.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies',
          )
          ..add('G__typename', G__typename)
          ..add('actor', actor)
          ..add('attributedTo', attributedTo)
          ..add('conversation', conversation)
          ..add('deletedAt', deletedAt)
          ..add('event', event)
          ..add('id', id)
          ..add('inReplyToComment', inReplyToComment)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('originComment', originComment)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('replies', replies)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies,
          GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder?
  _actor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder
  get actor => _$this._actor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder();
  set actor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder?
    actor,
  ) => _$this._actor = actor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder?
  _conversation;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder
  get conversation => _$this._conversation ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder();
  set conversation(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder?
    conversation,
  ) => _$this._conversation = conversation;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder?
  _event;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder
  get event => _$this._event ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder();
  set event(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder?
    event,
  ) => _$this._event = event;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder?
  _inReplyToComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder
  get inReplyToComment => _$this._inReplyToComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder();
  set inReplyToComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder?
    inReplyToComment,
  ) => _$this._inReplyToComment = inReplyToComment;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder?
  _originComment;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder
  get originComment => _$this._originComment ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder();
  set originComment(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder?
    originComment,
  ) => _$this._originComment = originComment;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies?
  >?
  _replies;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies?
  >
  get replies => _$this._replies ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies?
      >();
  set replies(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies?
    >?
    replies,
  ) => _$this._replies = replies;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _actor = $v.actor?.toBuilder();
      _attributedTo = $v.attributedTo?.toBuilder();
      _conversation = $v.conversation?.toBuilder();
      _deletedAt = $v.deletedAt;
      _event = $v.event?.toBuilder();
      _id = $v.id;
      _inReplyToComment = $v.inReplyToComment?.toBuilder();
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _originComment = $v.originComment?.toBuilder();
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _replies = $v.replies?.toBuilder();
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies other,
  ) {
    _$v = other as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_repliesBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies',
              'G__typename',
            ),
            actor: _actor?.build(),
            attributedTo: _attributedTo?.build(),
            conversation: _conversation?.build(),
            deletedAt: deletedAt,
            event: _event?.build(),
            id: id,
            inReplyToComment: _inReplyToComment?.build(),
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            originComment: _originComment?.build(),
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            replies: _replies?.build(),
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actor';
        _actor?.build();
        _$failedField = 'attributedTo';
        _attributedTo?.build();
        _$failedField = 'conversation';
        _conversation?.build();

        _$failedField = 'event';
        _event?.build();

        _$failedField = 'inReplyToComment';
        _inReplyToComment?.build();

        _$failedField = 'originComment';
        _originComment?.build();

        _$failedField = 'replies';
        _replies?.build();

        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar?
  avatar;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner?
  banner;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations?
  conversations;
  @override
  final String? domain;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens?
  >?
  feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows?
  follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf?
  >?
  memberOf;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships?
  memberships;
  @override
  final String? name;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents?
  organizedEvents;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations?
  participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user?
  user;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor',
          )
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder?
  _avatar;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder
  get avatar => _$this._avatar ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder();
  set avatar(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder?
    avatar,
  ) => _$this._avatar = avatar;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder?
  _banner;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder
  get banner => _$this._banner ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder();
  set banner(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder?
    banner,
  ) => _$this._banner = banner;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens?
  >?
  _feedTokens;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens?
  >
  get feedTokens => _$this._feedTokens ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens?
      >();
  set feedTokens(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens?
    >?
    feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder?
  _follows;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder
  get follows => _$this._follows ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder();
  set follows(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder?
    follows,
  ) => _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf?
  >?
  _memberOf;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf?
  >
  get memberOf => _$this._memberOf ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf?
      >();
  set memberOf(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf?
    >?
    memberOf,
  ) => _$this._memberOf = memberOf;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder?
  _memberships;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder
  get memberships => _$this._memberships ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder();
  set memberships(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder?
    memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder?
  _organizedEvents;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder();
  set organizedEvents(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder?
    organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder?
  _participations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder
  get participations => _$this._participations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder();
  set participations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder?
    participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder?
  _user;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder
  get user => _$this._user ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder();
  set user(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder?
    user,
  ) => _$this._user = user;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatarBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_bannerBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokensBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_followsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOfBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_membershipsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEventsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_userBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_actor_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation {
  @override
  final String G__typename;
  @override
  final String? conversationParticipantId;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool? unread;
  @override
  final DateTime? updatedAt;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation._({
    required this.G__typename,
    this.conversationParticipantId,
    this.id,
    this.insertedAt,
    this.unread,
    this.updatedAt,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation &&
        G__typename == other.G__typename &&
        conversationParticipantId == other.conversationParticipantId &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        unread == other.unread &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, conversationParticipantId.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, unread.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation',
          )
          ..add('G__typename', G__typename)
          ..add('conversationParticipantId', conversationParticipantId)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('unread', unread)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _conversationParticipantId;
  String? get conversationParticipantId => _$this._conversationParticipantId;
  set conversationParticipantId(String? conversationParticipantId) =>
      _$this._conversationParticipantId = conversationParticipantId;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _unread;
  bool? get unread => _$this._unread;
  set unread(bool? unread) => _$this._unread = unread;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _conversationParticipantId = $v.conversationParticipantId;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _unread = $v.unread;
      _updatedAt = $v.updatedAt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversationBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_conversation',
            'G__typename',
          ),
          conversationParticipantId: conversationParticipantId,
          id: id,
          insertedAt: insertedAt,
          unread: unread,
          updatedAt: updatedAt,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event {
  @override
  final String G__typename;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo?
  attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments?
  >?
  comments;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts?
  >?
  contacts;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations?
  conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media?
  >?
  media;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata?
  >?
  metadata;
  @override
  final String? onlineAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options?
  options;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor?
  organizerActor;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats?
  participantStats;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants?
  participants;
  @override
  final String? phoneAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress?
  physicalAddress;
  @override
  final GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture?
  picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags?
  >?
  tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event',
          )
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder?
  _attributedTo;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder
  get attributedTo => _$this._attributedTo ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder();
  set attributedTo(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder?
    attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments?
  >?
  _comments;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments?
  >
  get comments => _$this._comments ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments?
      >();
  set comments(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments?
    >?
    comments,
  ) => _$this._comments = comments;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts?
  >?
  _contacts;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts?
  >
  get contacts => _$this._contacts ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts?
      >();
  set contacts(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts?
    >?
    contacts,
  ) => _$this._contacts = contacts;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder?
  _conversations;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder
  get conversations => _$this._conversations ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder();
  set conversations(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder?
    conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media?
  >?
  _media;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media?
  >
  get media => _$this._media ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media?
      >();
  set media(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media?
    >?
    media,
  ) => _$this._media = media;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata?
  >?
  _metadata;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata?
  >
  get metadata => _$this._metadata ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata?
      >();
  set metadata(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata?
    >?
    metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder?
  _options;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder
  get options => _$this._options ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder();
  set options(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder?
    options,
  ) => _$this._options = options;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder?
  _organizerActor;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder
  get organizerActor => _$this._organizerActor ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder();
  set organizerActor(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder?
    organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder?
  _participantStats;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder();
  set participantStats(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder?
    participantStats,
  ) => _$this._participantStats = participantStats;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder?
  _participants;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder
  get participants => _$this._participants ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder();
  set participants(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder?
    participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder?
  _physicalAddress;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder();
  set physicalAddress(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder?
    physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder?
  _picture;
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder
  get picture => _$this._picture ??=
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder();
  set picture(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder?
    picture,
  ) => _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags?
  >?
  _tags;
  ListBuilder<
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags?
  >
  get tags => _$this._tags ??=
      ListBuilder<
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags?
      >();
  set tags(
    ListBuilder<
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags?
    >?
    tags,
  ) => _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_eventBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedToBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_commentsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contactsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversationsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_mediaBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadataBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_optionsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActorBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStatsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participantsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddressBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_pictureBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tagsBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags
  _build() {
    final _$result =
        _$v ??
        _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_event_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_inReplyToComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
    extends
        GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
  rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment?
  _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
    other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originCommentBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
  build() => _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_originComment',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies
    extends GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies([
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder,
    )?
    updates,
  ]) =>
      (GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder()
            ..update(updates))
          ._build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies rebuild(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder,
    )
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder
  toBuilder() =>
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other
            is GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder
    implements
        Builder<
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies,
          GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder
        > {
  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder() {
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies._initializeBuilder(
      this,
    );
  }

  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder
  get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(
    GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies other,
  ) {
    _$v =
        other
            as _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies;
  }

  @override
  void update(
    void Function(
      GDeleteDiscussionData_deleteDiscussion_lastComment_replies_repliesBuilder,
    )?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies build() =>
      _build();

  _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies
  _build() {
    _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies
    _$result;
    try {
      _$result =
          _$v ??
          _$GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GDeleteDiscussionData_deleteDiscussion_lastComment_replies_replies',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData
    extends GdeleteDiscussion_EventFieldsData {
  @override
  final String G__typename;
  @override
  final GdeleteDiscussion_EventFieldsData_attributedTo? attributedTo;
  @override
  final DateTime? beginsOn;
  @override
  final _i2.GEventCategory? category;
  @override
  final BuiltList<GdeleteDiscussion_EventFieldsData_comments?>? comments;
  @override
  final BuiltList<GdeleteDiscussion_EventFieldsData_contacts?>? contacts;
  @override
  final GdeleteDiscussion_EventFieldsData_conversations? conversations;
  @override
  final String? description;
  @override
  final bool? draft;
  @override
  final DateTime? endsOn;
  @override
  final String? externalParticipationUrl;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final _i2.GEventJoinOptions? joinOptions;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final bool? longEvent;
  @override
  final BuiltList<GdeleteDiscussion_EventFieldsData_media?>? media;
  @override
  final BuiltList<GdeleteDiscussion_EventFieldsData_metadata?>? metadata;
  @override
  final String? onlineAddress;
  @override
  final GdeleteDiscussion_EventFieldsData_options? options;
  @override
  final GdeleteDiscussion_EventFieldsData_organizerActor? organizerActor;
  @override
  final GdeleteDiscussion_EventFieldsData_participantStats? participantStats;
  @override
  final GdeleteDiscussion_EventFieldsData_participants? participants;
  @override
  final String? phoneAddress;
  @override
  final GdeleteDiscussion_EventFieldsData_physicalAddress? physicalAddress;
  @override
  final GdeleteDiscussion_EventFieldsData_picture? picture;
  @override
  final DateTime? publishAt;
  @override
  final String? slug;
  @override
  final _i2.GEventStatus? status;
  @override
  final BuiltList<GdeleteDiscussion_EventFieldsData_tags?>? tags;
  @override
  final String? title;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GEventVisibility? visibility;

  factory _$GdeleteDiscussion_EventFieldsData([
    void Function(GdeleteDiscussion_EventFieldsDataBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsDataBuilder()..update(updates))._build();

  _$GdeleteDiscussion_EventFieldsData._({
    required this.G__typename,
    this.attributedTo,
    this.beginsOn,
    this.category,
    this.comments,
    this.contacts,
    this.conversations,
    this.description,
    this.draft,
    this.endsOn,
    this.externalParticipationUrl,
    this.id,
    this.insertedAt,
    this.joinOptions,
    this.language,
    this.local,
    this.longEvent,
    this.media,
    this.metadata,
    this.onlineAddress,
    this.options,
    this.organizerActor,
    this.participantStats,
    this.participants,
    this.phoneAddress,
    this.physicalAddress,
    this.picture,
    this.publishAt,
    this.slug,
    this.status,
    this.tags,
    this.title,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData rebuild(
    void Function(GdeleteDiscussion_EventFieldsDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsDataBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData &&
        G__typename == other.G__typename &&
        attributedTo == other.attributedTo &&
        beginsOn == other.beginsOn &&
        category == other.category &&
        comments == other.comments &&
        contacts == other.contacts &&
        conversations == other.conversations &&
        description == other.description &&
        draft == other.draft &&
        endsOn == other.endsOn &&
        externalParticipationUrl == other.externalParticipationUrl &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        joinOptions == other.joinOptions &&
        language == other.language &&
        local == other.local &&
        longEvent == other.longEvent &&
        media == other.media &&
        metadata == other.metadata &&
        onlineAddress == other.onlineAddress &&
        options == other.options &&
        organizerActor == other.organizerActor &&
        participantStats == other.participantStats &&
        participants == other.participants &&
        phoneAddress == other.phoneAddress &&
        physicalAddress == other.physicalAddress &&
        picture == other.picture &&
        publishAt == other.publishAt &&
        slug == other.slug &&
        status == other.status &&
        tags == other.tags &&
        title == other.title &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, attributedTo.hashCode);
    _$hash = $jc(_$hash, beginsOn.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jc(_$hash, contacts.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, endsOn.hashCode);
    _$hash = $jc(_$hash, externalParticipationUrl.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, joinOptions.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, longEvent.hashCode);
    _$hash = $jc(_$hash, media.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, onlineAddress.hashCode);
    _$hash = $jc(_$hash, options.hashCode);
    _$hash = $jc(_$hash, organizerActor.hashCode);
    _$hash = $jc(_$hash, participantStats.hashCode);
    _$hash = $jc(_$hash, participants.hashCode);
    _$hash = $jc(_$hash, phoneAddress.hashCode);
    _$hash = $jc(_$hash, physicalAddress.hashCode);
    _$hash = $jc(_$hash, picture.hashCode);
    _$hash = $jc(_$hash, publishAt.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, tags.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GdeleteDiscussion_EventFieldsData')
          ..add('G__typename', G__typename)
          ..add('attributedTo', attributedTo)
          ..add('beginsOn', beginsOn)
          ..add('category', category)
          ..add('comments', comments)
          ..add('contacts', contacts)
          ..add('conversations', conversations)
          ..add('description', description)
          ..add('draft', draft)
          ..add('endsOn', endsOn)
          ..add('externalParticipationUrl', externalParticipationUrl)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('joinOptions', joinOptions)
          ..add('language', language)
          ..add('local', local)
          ..add('longEvent', longEvent)
          ..add('media', media)
          ..add('metadata', metadata)
          ..add('onlineAddress', onlineAddress)
          ..add('options', options)
          ..add('organizerActor', organizerActor)
          ..add('participantStats', participantStats)
          ..add('participants', participants)
          ..add('phoneAddress', phoneAddress)
          ..add('physicalAddress', physicalAddress)
          ..add('picture', picture)
          ..add('publishAt', publishAt)
          ..add('slug', slug)
          ..add('status', status)
          ..add('tags', tags)
          ..add('title', title)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsDataBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData,
          GdeleteDiscussion_EventFieldsDataBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GdeleteDiscussion_EventFieldsData_attributedToBuilder? _attributedTo;
  GdeleteDiscussion_EventFieldsData_attributedToBuilder get attributedTo =>
      _$this._attributedTo ??=
          GdeleteDiscussion_EventFieldsData_attributedToBuilder();
  set attributedTo(
    GdeleteDiscussion_EventFieldsData_attributedToBuilder? attributedTo,
  ) => _$this._attributedTo = attributedTo;

  DateTime? _beginsOn;
  DateTime? get beginsOn => _$this._beginsOn;
  set beginsOn(DateTime? beginsOn) => _$this._beginsOn = beginsOn;

  _i2.GEventCategory? _category;
  _i2.GEventCategory? get category => _$this._category;
  set category(_i2.GEventCategory? category) => _$this._category = category;

  ListBuilder<GdeleteDiscussion_EventFieldsData_comments?>? _comments;
  ListBuilder<GdeleteDiscussion_EventFieldsData_comments?> get comments =>
      _$this._comments ??=
          ListBuilder<GdeleteDiscussion_EventFieldsData_comments?>();
  set comments(
    ListBuilder<GdeleteDiscussion_EventFieldsData_comments?>? comments,
  ) => _$this._comments = comments;

  ListBuilder<GdeleteDiscussion_EventFieldsData_contacts?>? _contacts;
  ListBuilder<GdeleteDiscussion_EventFieldsData_contacts?> get contacts =>
      _$this._contacts ??=
          ListBuilder<GdeleteDiscussion_EventFieldsData_contacts?>();
  set contacts(
    ListBuilder<GdeleteDiscussion_EventFieldsData_contacts?>? contacts,
  ) => _$this._contacts = contacts;

  GdeleteDiscussion_EventFieldsData_conversationsBuilder? _conversations;
  GdeleteDiscussion_EventFieldsData_conversationsBuilder get conversations =>
      _$this._conversations ??=
          GdeleteDiscussion_EventFieldsData_conversationsBuilder();
  set conversations(
    GdeleteDiscussion_EventFieldsData_conversationsBuilder? conversations,
  ) => _$this._conversations = conversations;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  DateTime? _endsOn;
  DateTime? get endsOn => _$this._endsOn;
  set endsOn(DateTime? endsOn) => _$this._endsOn = endsOn;

  String? _externalParticipationUrl;
  String? get externalParticipationUrl => _$this._externalParticipationUrl;
  set externalParticipationUrl(String? externalParticipationUrl) =>
      _$this._externalParticipationUrl = externalParticipationUrl;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  _i2.GEventJoinOptions? _joinOptions;
  _i2.GEventJoinOptions? get joinOptions => _$this._joinOptions;
  set joinOptions(_i2.GEventJoinOptions? joinOptions) =>
      _$this._joinOptions = joinOptions;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _longEvent;
  bool? get longEvent => _$this._longEvent;
  set longEvent(bool? longEvent) => _$this._longEvent = longEvent;

  ListBuilder<GdeleteDiscussion_EventFieldsData_media?>? _media;
  ListBuilder<GdeleteDiscussion_EventFieldsData_media?> get media =>
      _$this._media ??= ListBuilder<GdeleteDiscussion_EventFieldsData_media?>();
  set media(ListBuilder<GdeleteDiscussion_EventFieldsData_media?>? media) =>
      _$this._media = media;

  ListBuilder<GdeleteDiscussion_EventFieldsData_metadata?>? _metadata;
  ListBuilder<GdeleteDiscussion_EventFieldsData_metadata?> get metadata =>
      _$this._metadata ??=
          ListBuilder<GdeleteDiscussion_EventFieldsData_metadata?>();
  set metadata(
    ListBuilder<GdeleteDiscussion_EventFieldsData_metadata?>? metadata,
  ) => _$this._metadata = metadata;

  String? _onlineAddress;
  String? get onlineAddress => _$this._onlineAddress;
  set onlineAddress(String? onlineAddress) =>
      _$this._onlineAddress = onlineAddress;

  GdeleteDiscussion_EventFieldsData_optionsBuilder? _options;
  GdeleteDiscussion_EventFieldsData_optionsBuilder get options =>
      _$this._options ??= GdeleteDiscussion_EventFieldsData_optionsBuilder();
  set options(GdeleteDiscussion_EventFieldsData_optionsBuilder? options) =>
      _$this._options = options;

  GdeleteDiscussion_EventFieldsData_organizerActorBuilder? _organizerActor;
  GdeleteDiscussion_EventFieldsData_organizerActorBuilder get organizerActor =>
      _$this._organizerActor ??=
          GdeleteDiscussion_EventFieldsData_organizerActorBuilder();
  set organizerActor(
    GdeleteDiscussion_EventFieldsData_organizerActorBuilder? organizerActor,
  ) => _$this._organizerActor = organizerActor;

  GdeleteDiscussion_EventFieldsData_participantStatsBuilder? _participantStats;
  GdeleteDiscussion_EventFieldsData_participantStatsBuilder
  get participantStats => _$this._participantStats ??=
      GdeleteDiscussion_EventFieldsData_participantStatsBuilder();
  set participantStats(
    GdeleteDiscussion_EventFieldsData_participantStatsBuilder? participantStats,
  ) => _$this._participantStats = participantStats;

  GdeleteDiscussion_EventFieldsData_participantsBuilder? _participants;
  GdeleteDiscussion_EventFieldsData_participantsBuilder get participants =>
      _$this._participants ??=
          GdeleteDiscussion_EventFieldsData_participantsBuilder();
  set participants(
    GdeleteDiscussion_EventFieldsData_participantsBuilder? participants,
  ) => _$this._participants = participants;

  String? _phoneAddress;
  String? get phoneAddress => _$this._phoneAddress;
  set phoneAddress(String? phoneAddress) => _$this._phoneAddress = phoneAddress;

  GdeleteDiscussion_EventFieldsData_physicalAddressBuilder? _physicalAddress;
  GdeleteDiscussion_EventFieldsData_physicalAddressBuilder
  get physicalAddress => _$this._physicalAddress ??=
      GdeleteDiscussion_EventFieldsData_physicalAddressBuilder();
  set physicalAddress(
    GdeleteDiscussion_EventFieldsData_physicalAddressBuilder? physicalAddress,
  ) => _$this._physicalAddress = physicalAddress;

  GdeleteDiscussion_EventFieldsData_pictureBuilder? _picture;
  GdeleteDiscussion_EventFieldsData_pictureBuilder get picture =>
      _$this._picture ??= GdeleteDiscussion_EventFieldsData_pictureBuilder();
  set picture(GdeleteDiscussion_EventFieldsData_pictureBuilder? picture) =>
      _$this._picture = picture;

  DateTime? _publishAt;
  DateTime? get publishAt => _$this._publishAt;
  set publishAt(DateTime? publishAt) => _$this._publishAt = publishAt;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  _i2.GEventStatus? _status;
  _i2.GEventStatus? get status => _$this._status;
  set status(_i2.GEventStatus? status) => _$this._status = status;

  ListBuilder<GdeleteDiscussion_EventFieldsData_tags?>? _tags;
  ListBuilder<GdeleteDiscussion_EventFieldsData_tags?> get tags =>
      _$this._tags ??= ListBuilder<GdeleteDiscussion_EventFieldsData_tags?>();
  set tags(ListBuilder<GdeleteDiscussion_EventFieldsData_tags?>? tags) =>
      _$this._tags = tags;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GEventVisibility? _visibility;
  _i2.GEventVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GEventVisibility? visibility) =>
      _$this._visibility = visibility;

  GdeleteDiscussion_EventFieldsDataBuilder() {
    GdeleteDiscussion_EventFieldsData._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _attributedTo = $v.attributedTo?.toBuilder();
      _beginsOn = $v.beginsOn;
      _category = $v.category;
      _comments = $v.comments?.toBuilder();
      _contacts = $v.contacts?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _description = $v.description;
      _draft = $v.draft;
      _endsOn = $v.endsOn;
      _externalParticipationUrl = $v.externalParticipationUrl;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _joinOptions = $v.joinOptions;
      _language = $v.language;
      _local = $v.local;
      _longEvent = $v.longEvent;
      _media = $v.media?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _onlineAddress = $v.onlineAddress;
      _options = $v.options?.toBuilder();
      _organizerActor = $v.organizerActor?.toBuilder();
      _participantStats = $v.participantStats?.toBuilder();
      _participants = $v.participants?.toBuilder();
      _phoneAddress = $v.phoneAddress;
      _physicalAddress = $v.physicalAddress?.toBuilder();
      _picture = $v.picture?.toBuilder();
      _publishAt = $v.publishAt;
      _slug = $v.slug;
      _status = $v.status;
      _tags = $v.tags?.toBuilder();
      _title = $v.title;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsDataBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData build() => _build();

  _$GdeleteDiscussion_EventFieldsData _build() {
    _$GdeleteDiscussion_EventFieldsData _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_EventFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_EventFieldsData',
              'G__typename',
            ),
            attributedTo: _attributedTo?.build(),
            beginsOn: beginsOn,
            category: category,
            comments: _comments?.build(),
            contacts: _contacts?.build(),
            conversations: _conversations?.build(),
            description: description,
            draft: draft,
            endsOn: endsOn,
            externalParticipationUrl: externalParticipationUrl,
            id: id,
            insertedAt: insertedAt,
            joinOptions: joinOptions,
            language: language,
            local: local,
            longEvent: longEvent,
            media: _media?.build(),
            metadata: _metadata?.build(),
            onlineAddress: onlineAddress,
            options: _options?.build(),
            organizerActor: _organizerActor?.build(),
            participantStats: _participantStats?.build(),
            participants: _participants?.build(),
            phoneAddress: phoneAddress,
            physicalAddress: _physicalAddress?.build(),
            picture: _picture?.build(),
            publishAt: publishAt,
            slug: slug,
            status: status,
            tags: _tags?.build(),
            title: title,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributedTo';
        _attributedTo?.build();

        _$failedField = 'comments';
        _comments?.build();
        _$failedField = 'contacts';
        _contacts?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'media';
        _media?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'options';
        _options?.build();
        _$failedField = 'organizerActor';
        _organizerActor?.build();
        _$failedField = 'participantStats';
        _participantStats?.build();
        _$failedField = 'participants';
        _participants?.build();

        _$failedField = 'physicalAddress';
        _physicalAddress?.build();
        _$failedField = 'picture';
        _picture?.build();

        _$failedField = 'tags';
        _tags?.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_EventFieldsData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_attributedTo
    extends GdeleteDiscussion_EventFieldsData_attributedTo {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GdeleteDiscussion_EventFieldsData_attributedTo([
    void Function(GdeleteDiscussion_EventFieldsData_attributedToBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_EventFieldsData_attributedToBuilder()..update(updates))
          ._build();

  _$GdeleteDiscussion_EventFieldsData_attributedTo._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_attributedTo rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_attributedToBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_attributedToBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_attributedToBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_attributedTo &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_attributedTo',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_attributedToBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_attributedTo,
          GdeleteDiscussion_EventFieldsData_attributedToBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_attributedTo? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_EventFieldsData_attributedToBuilder() {
    GdeleteDiscussion_EventFieldsData_attributedTo._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_attributedToBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_attributedTo other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_attributedTo;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_attributedToBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_attributedTo build() => _build();

  _$GdeleteDiscussion_EventFieldsData_attributedTo _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_attributedTo._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_attributedTo',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_comments
    extends GdeleteDiscussion_EventFieldsData_comments {
  @override
  final String G__typename;
  @override
  final DateTime? deletedAt;
  @override
  final String? id;
  @override
  final DateTime? insertedAt;
  @override
  final bool isAnnouncement;
  @override
  final String? language;
  @override
  final bool? local;
  @override
  final String? primaryLanguage;
  @override
  final DateTime? publishedAt;
  @override
  final String? text;
  @override
  final BuiltList<String?> threadLanguages;
  @override
  final int? totalReplies;
  @override
  final DateTime? updatedAt;
  @override
  final String? url;
  @override
  final _i2.GUUID? uuid;
  @override
  final _i2.GCommentVisibility? visibility;

  factory _$GdeleteDiscussion_EventFieldsData_comments([
    void Function(GdeleteDiscussion_EventFieldsData_commentsBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_commentsBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_comments._({
    required this.G__typename,
    this.deletedAt,
    this.id,
    this.insertedAt,
    required this.isAnnouncement,
    this.language,
    this.local,
    this.primaryLanguage,
    this.publishedAt,
    this.text,
    required this.threadLanguages,
    this.totalReplies,
    this.updatedAt,
    this.url,
    this.uuid,
    this.visibility,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_comments rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_commentsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_commentsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_commentsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_comments &&
        G__typename == other.G__typename &&
        deletedAt == other.deletedAt &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        isAnnouncement == other.isAnnouncement &&
        language == other.language &&
        local == other.local &&
        primaryLanguage == other.primaryLanguage &&
        publishedAt == other.publishedAt &&
        text == other.text &&
        threadLanguages == other.threadLanguages &&
        totalReplies == other.totalReplies &&
        updatedAt == other.updatedAt &&
        url == other.url &&
        uuid == other.uuid &&
        visibility == other.visibility;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, deletedAt.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, isAnnouncement.hashCode);
    _$hash = $jc(_$hash, language.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, primaryLanguage.hashCode);
    _$hash = $jc(_$hash, publishedAt.hashCode);
    _$hash = $jc(_$hash, text.hashCode);
    _$hash = $jc(_$hash, threadLanguages.hashCode);
    _$hash = $jc(_$hash, totalReplies.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, uuid.hashCode);
    _$hash = $jc(_$hash, visibility.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_comments',
          )
          ..add('G__typename', G__typename)
          ..add('deletedAt', deletedAt)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('isAnnouncement', isAnnouncement)
          ..add('language', language)
          ..add('local', local)
          ..add('primaryLanguage', primaryLanguage)
          ..add('publishedAt', publishedAt)
          ..add('text', text)
          ..add('threadLanguages', threadLanguages)
          ..add('totalReplies', totalReplies)
          ..add('updatedAt', updatedAt)
          ..add('url', url)
          ..add('uuid', uuid)
          ..add('visibility', visibility))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_commentsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_comments,
          GdeleteDiscussion_EventFieldsData_commentsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_comments? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _deletedAt;
  DateTime? get deletedAt => _$this._deletedAt;
  set deletedAt(DateTime? deletedAt) => _$this._deletedAt = deletedAt;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _insertedAt;
  DateTime? get insertedAt => _$this._insertedAt;
  set insertedAt(DateTime? insertedAt) => _$this._insertedAt = insertedAt;

  bool? _isAnnouncement;
  bool? get isAnnouncement => _$this._isAnnouncement;
  set isAnnouncement(bool? isAnnouncement) =>
      _$this._isAnnouncement = isAnnouncement;

  String? _language;
  String? get language => _$this._language;
  set language(String? language) => _$this._language = language;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  String? _primaryLanguage;
  String? get primaryLanguage => _$this._primaryLanguage;
  set primaryLanguage(String? primaryLanguage) =>
      _$this._primaryLanguage = primaryLanguage;

  DateTime? _publishedAt;
  DateTime? get publishedAt => _$this._publishedAt;
  set publishedAt(DateTime? publishedAt) => _$this._publishedAt = publishedAt;

  String? _text;
  String? get text => _$this._text;
  set text(String? text) => _$this._text = text;

  ListBuilder<String?>? _threadLanguages;
  ListBuilder<String?> get threadLanguages =>
      _$this._threadLanguages ??= ListBuilder<String?>();
  set threadLanguages(ListBuilder<String?>? threadLanguages) =>
      _$this._threadLanguages = threadLanguages;

  int? _totalReplies;
  int? get totalReplies => _$this._totalReplies;
  set totalReplies(int? totalReplies) => _$this._totalReplies = totalReplies;

  DateTime? _updatedAt;
  DateTime? get updatedAt => _$this._updatedAt;
  set updatedAt(DateTime? updatedAt) => _$this._updatedAt = updatedAt;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  _i2.GUUIDBuilder? _uuid;
  _i2.GUUIDBuilder get uuid => _$this._uuid ??= _i2.GUUIDBuilder();
  set uuid(_i2.GUUIDBuilder? uuid) => _$this._uuid = uuid;

  _i2.GCommentVisibility? _visibility;
  _i2.GCommentVisibility? get visibility => _$this._visibility;
  set visibility(_i2.GCommentVisibility? visibility) =>
      _$this._visibility = visibility;

  GdeleteDiscussion_EventFieldsData_commentsBuilder() {
    GdeleteDiscussion_EventFieldsData_comments._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_commentsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _deletedAt = $v.deletedAt;
      _id = $v.id;
      _insertedAt = $v.insertedAt;
      _isAnnouncement = $v.isAnnouncement;
      _language = $v.language;
      _local = $v.local;
      _primaryLanguage = $v.primaryLanguage;
      _publishedAt = $v.publishedAt;
      _text = $v.text;
      _threadLanguages = $v.threadLanguages.toBuilder();
      _totalReplies = $v.totalReplies;
      _updatedAt = $v.updatedAt;
      _url = $v.url;
      _uuid = $v.uuid?.toBuilder();
      _visibility = $v.visibility;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_comments other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_comments;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_commentsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_comments build() => _build();

  _$GdeleteDiscussion_EventFieldsData_comments _build() {
    _$GdeleteDiscussion_EventFieldsData_comments _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_EventFieldsData_comments._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_EventFieldsData_comments',
              'G__typename',
            ),
            deletedAt: deletedAt,
            id: id,
            insertedAt: insertedAt,
            isAnnouncement: BuiltValueNullFieldError.checkNotNull(
              isAnnouncement,
              r'GdeleteDiscussion_EventFieldsData_comments',
              'isAnnouncement',
            ),
            language: language,
            local: local,
            primaryLanguage: primaryLanguage,
            publishedAt: publishedAt,
            text: text,
            threadLanguages: threadLanguages.build(),
            totalReplies: totalReplies,
            updatedAt: updatedAt,
            url: url,
            uuid: _uuid?.build(),
            visibility: visibility,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'threadLanguages';
        threadLanguages.build();

        _$failedField = 'uuid';
        _uuid?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_EventFieldsData_comments',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_contacts
    extends GdeleteDiscussion_EventFieldsData_contacts {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GdeleteDiscussion_EventFieldsData_contacts([
    void Function(GdeleteDiscussion_EventFieldsData_contactsBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_contactsBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_contacts._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_contacts rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_contactsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_contactsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_contactsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_contacts &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_contacts',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_contactsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_contacts,
          GdeleteDiscussion_EventFieldsData_contactsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_contacts? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_EventFieldsData_contactsBuilder() {
    GdeleteDiscussion_EventFieldsData_contacts._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_contactsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_contacts other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_contacts;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_contactsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_contacts build() => _build();

  _$GdeleteDiscussion_EventFieldsData_contacts _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_contacts._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_contacts',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_conversations
    extends GdeleteDiscussion_EventFieldsData_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_EventFieldsData_conversations([
    void Function(GdeleteDiscussion_EventFieldsData_conversationsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_EventFieldsData_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_EventFieldsData_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_conversations rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_conversationsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_conversationsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_conversationsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_conversationsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_conversations,
          GdeleteDiscussion_EventFieldsData_conversationsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_conversations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_EventFieldsData_conversationsBuilder() {
    GdeleteDiscussion_EventFieldsData_conversations._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_conversationsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_conversations other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_conversations;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_conversationsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_conversations build() => _build();

  _$GdeleteDiscussion_EventFieldsData_conversations _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_media
    extends GdeleteDiscussion_EventFieldsData_media {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GdeleteDiscussion_EventFieldsData_media([
    void Function(GdeleteDiscussion_EventFieldsData_mediaBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_mediaBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_media._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_media rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_mediaBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_mediaBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_mediaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_media &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_media',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_mediaBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_media,
          GdeleteDiscussion_EventFieldsData_mediaBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_media? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_EventFieldsData_mediaBuilder() {
    GdeleteDiscussion_EventFieldsData_media._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_mediaBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_media other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_media;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_mediaBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_media build() => _build();

  _$GdeleteDiscussion_EventFieldsData_media _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_media._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_media',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_metadata
    extends GdeleteDiscussion_EventFieldsData_metadata {
  @override
  final String G__typename;
  @override
  final String? key;
  @override
  final String? title;
  @override
  final _i2.GEventMetadataType? type;
  @override
  final String? value;

  factory _$GdeleteDiscussion_EventFieldsData_metadata([
    void Function(GdeleteDiscussion_EventFieldsData_metadataBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_metadataBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_metadata._({
    required this.G__typename,
    this.key,
    this.title,
    this.type,
    this.value,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_metadata rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_metadataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_metadataBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_metadataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_metadata &&
        G__typename == other.G__typename &&
        key == other.key &&
        title == other.title &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('key', key)
          ..add('title', title)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_metadataBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_metadata,
          GdeleteDiscussion_EventFieldsData_metadataBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_metadata? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  _i2.GEventMetadataType? _type;
  _i2.GEventMetadataType? get type => _$this._type;
  set type(_i2.GEventMetadataType? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GdeleteDiscussion_EventFieldsData_metadataBuilder() {
    GdeleteDiscussion_EventFieldsData_metadata._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_metadataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _key = $v.key;
      _title = $v.title;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_metadata other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_metadata;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_metadataBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_metadata build() => _build();

  _$GdeleteDiscussion_EventFieldsData_metadata _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_metadata',
            'G__typename',
          ),
          key: key,
          title: title,
          type: type,
          value: value,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_options
    extends GdeleteDiscussion_EventFieldsData_options {
  @override
  final String G__typename;
  @override
  final bool? anonymousParticipation;
  @override
  final BuiltList<String?>? attendees;
  @override
  final _i2.GEventCommentModeration? commentModeration;
  @override
  final bool? hideNumberOfParticipants;
  @override
  final bool? hideOrganizerWhenGroupEvent;
  @override
  final bool? isOnline;
  @override
  final int? maximumAttendeeCapacity;
  @override
  final String? program;
  @override
  final int? remainingAttendeeCapacity;
  @override
  final bool? showEndTime;
  @override
  final bool? showParticipationPrice;
  @override
  final bool? showRemainingAttendeeCapacity;
  @override
  final bool? showStartTime;
  @override
  final _i2.GTimezone? timezone;

  factory _$GdeleteDiscussion_EventFieldsData_options([
    void Function(GdeleteDiscussion_EventFieldsData_optionsBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_optionsBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_options._({
    required this.G__typename,
    this.anonymousParticipation,
    this.attendees,
    this.commentModeration,
    this.hideNumberOfParticipants,
    this.hideOrganizerWhenGroupEvent,
    this.isOnline,
    this.maximumAttendeeCapacity,
    this.program,
    this.remainingAttendeeCapacity,
    this.showEndTime,
    this.showParticipationPrice,
    this.showRemainingAttendeeCapacity,
    this.showStartTime,
    this.timezone,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_options rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_optionsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_optionsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_optionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_options &&
        G__typename == other.G__typename &&
        anonymousParticipation == other.anonymousParticipation &&
        attendees == other.attendees &&
        commentModeration == other.commentModeration &&
        hideNumberOfParticipants == other.hideNumberOfParticipants &&
        hideOrganizerWhenGroupEvent == other.hideOrganizerWhenGroupEvent &&
        isOnline == other.isOnline &&
        maximumAttendeeCapacity == other.maximumAttendeeCapacity &&
        program == other.program &&
        remainingAttendeeCapacity == other.remainingAttendeeCapacity &&
        showEndTime == other.showEndTime &&
        showParticipationPrice == other.showParticipationPrice &&
        showRemainingAttendeeCapacity == other.showRemainingAttendeeCapacity &&
        showStartTime == other.showStartTime &&
        timezone == other.timezone;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, anonymousParticipation.hashCode);
    _$hash = $jc(_$hash, attendees.hashCode);
    _$hash = $jc(_$hash, commentModeration.hashCode);
    _$hash = $jc(_$hash, hideNumberOfParticipants.hashCode);
    _$hash = $jc(_$hash, hideOrganizerWhenGroupEvent.hashCode);
    _$hash = $jc(_$hash, isOnline.hashCode);
    _$hash = $jc(_$hash, maximumAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, program.hashCode);
    _$hash = $jc(_$hash, remainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showEndTime.hashCode);
    _$hash = $jc(_$hash, showParticipationPrice.hashCode);
    _$hash = $jc(_$hash, showRemainingAttendeeCapacity.hashCode);
    _$hash = $jc(_$hash, showStartTime.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_options',
          )
          ..add('G__typename', G__typename)
          ..add('anonymousParticipation', anonymousParticipation)
          ..add('attendees', attendees)
          ..add('commentModeration', commentModeration)
          ..add('hideNumberOfParticipants', hideNumberOfParticipants)
          ..add('hideOrganizerWhenGroupEvent', hideOrganizerWhenGroupEvent)
          ..add('isOnline', isOnline)
          ..add('maximumAttendeeCapacity', maximumAttendeeCapacity)
          ..add('program', program)
          ..add('remainingAttendeeCapacity', remainingAttendeeCapacity)
          ..add('showEndTime', showEndTime)
          ..add('showParticipationPrice', showParticipationPrice)
          ..add('showRemainingAttendeeCapacity', showRemainingAttendeeCapacity)
          ..add('showStartTime', showStartTime)
          ..add('timezone', timezone))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_optionsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_options,
          GdeleteDiscussion_EventFieldsData_optionsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_options? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  bool? _anonymousParticipation;
  bool? get anonymousParticipation => _$this._anonymousParticipation;
  set anonymousParticipation(bool? anonymousParticipation) =>
      _$this._anonymousParticipation = anonymousParticipation;

  ListBuilder<String?>? _attendees;
  ListBuilder<String?> get attendees =>
      _$this._attendees ??= ListBuilder<String?>();
  set attendees(ListBuilder<String?>? attendees) =>
      _$this._attendees = attendees;

  _i2.GEventCommentModeration? _commentModeration;
  _i2.GEventCommentModeration? get commentModeration =>
      _$this._commentModeration;
  set commentModeration(_i2.GEventCommentModeration? commentModeration) =>
      _$this._commentModeration = commentModeration;

  bool? _hideNumberOfParticipants;
  bool? get hideNumberOfParticipants => _$this._hideNumberOfParticipants;
  set hideNumberOfParticipants(bool? hideNumberOfParticipants) =>
      _$this._hideNumberOfParticipants = hideNumberOfParticipants;

  bool? _hideOrganizerWhenGroupEvent;
  bool? get hideOrganizerWhenGroupEvent => _$this._hideOrganizerWhenGroupEvent;
  set hideOrganizerWhenGroupEvent(bool? hideOrganizerWhenGroupEvent) =>
      _$this._hideOrganizerWhenGroupEvent = hideOrganizerWhenGroupEvent;

  bool? _isOnline;
  bool? get isOnline => _$this._isOnline;
  set isOnline(bool? isOnline) => _$this._isOnline = isOnline;

  int? _maximumAttendeeCapacity;
  int? get maximumAttendeeCapacity => _$this._maximumAttendeeCapacity;
  set maximumAttendeeCapacity(int? maximumAttendeeCapacity) =>
      _$this._maximumAttendeeCapacity = maximumAttendeeCapacity;

  String? _program;
  String? get program => _$this._program;
  set program(String? program) => _$this._program = program;

  int? _remainingAttendeeCapacity;
  int? get remainingAttendeeCapacity => _$this._remainingAttendeeCapacity;
  set remainingAttendeeCapacity(int? remainingAttendeeCapacity) =>
      _$this._remainingAttendeeCapacity = remainingAttendeeCapacity;

  bool? _showEndTime;
  bool? get showEndTime => _$this._showEndTime;
  set showEndTime(bool? showEndTime) => _$this._showEndTime = showEndTime;

  bool? _showParticipationPrice;
  bool? get showParticipationPrice => _$this._showParticipationPrice;
  set showParticipationPrice(bool? showParticipationPrice) =>
      _$this._showParticipationPrice = showParticipationPrice;

  bool? _showRemainingAttendeeCapacity;
  bool? get showRemainingAttendeeCapacity =>
      _$this._showRemainingAttendeeCapacity;
  set showRemainingAttendeeCapacity(bool? showRemainingAttendeeCapacity) =>
      _$this._showRemainingAttendeeCapacity = showRemainingAttendeeCapacity;

  bool? _showStartTime;
  bool? get showStartTime => _$this._showStartTime;
  set showStartTime(bool? showStartTime) =>
      _$this._showStartTime = showStartTime;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  GdeleteDiscussion_EventFieldsData_optionsBuilder() {
    GdeleteDiscussion_EventFieldsData_options._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_optionsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _anonymousParticipation = $v.anonymousParticipation;
      _attendees = $v.attendees?.toBuilder();
      _commentModeration = $v.commentModeration;
      _hideNumberOfParticipants = $v.hideNumberOfParticipants;
      _hideOrganizerWhenGroupEvent = $v.hideOrganizerWhenGroupEvent;
      _isOnline = $v.isOnline;
      _maximumAttendeeCapacity = $v.maximumAttendeeCapacity;
      _program = $v.program;
      _remainingAttendeeCapacity = $v.remainingAttendeeCapacity;
      _showEndTime = $v.showEndTime;
      _showParticipationPrice = $v.showParticipationPrice;
      _showRemainingAttendeeCapacity = $v.showRemainingAttendeeCapacity;
      _showStartTime = $v.showStartTime;
      _timezone = $v.timezone?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_options other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_options;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_optionsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_options build() => _build();

  _$GdeleteDiscussion_EventFieldsData_options _build() {
    _$GdeleteDiscussion_EventFieldsData_options _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_EventFieldsData_options._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_EventFieldsData_options',
              'G__typename',
            ),
            anonymousParticipation: anonymousParticipation,
            attendees: _attendees?.build(),
            commentModeration: commentModeration,
            hideNumberOfParticipants: hideNumberOfParticipants,
            hideOrganizerWhenGroupEvent: hideOrganizerWhenGroupEvent,
            isOnline: isOnline,
            maximumAttendeeCapacity: maximumAttendeeCapacity,
            program: program,
            remainingAttendeeCapacity: remainingAttendeeCapacity,
            showEndTime: showEndTime,
            showParticipationPrice: showParticipationPrice,
            showRemainingAttendeeCapacity: showRemainingAttendeeCapacity,
            showStartTime: showStartTime,
            timezone: _timezone?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attendees';
        _attendees?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_EventFieldsData_options',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_organizerActor
    extends GdeleteDiscussion_EventFieldsData_organizerActor {
  @override
  final String G__typename;
  @override
  final String? domain;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final String? name;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final String? url;

  factory _$GdeleteDiscussion_EventFieldsData_organizerActor([
    void Function(GdeleteDiscussion_EventFieldsData_organizerActorBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_EventFieldsData_organizerActorBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_EventFieldsData_organizerActor._({
    required this.G__typename,
    this.domain,
    this.followersCount,
    this.followingCount,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.name,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_organizerActor rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_organizerActorBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_organizerActorBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_organizerActorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_organizerActor &&
        G__typename == other.G__typename &&
        domain == other.domain &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        name == other.name &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_organizerActor',
          )
          ..add('G__typename', G__typename)
          ..add('domain', domain)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('name', name)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_organizerActorBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_organizerActor,
          GdeleteDiscussion_EventFieldsData_organizerActorBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_organizerActor? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_EventFieldsData_organizerActorBuilder() {
    GdeleteDiscussion_EventFieldsData_organizerActor._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_organizerActorBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _domain = $v.domain;
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _name = $v.name;
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_organizerActor other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_organizerActor;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_organizerActorBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_organizerActor build() => _build();

  _$GdeleteDiscussion_EventFieldsData_organizerActor _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_organizerActor._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_organizerActor',
            'G__typename',
          ),
          domain: domain,
          followersCount: followersCount,
          followingCount: followingCount,
          id: id,
          local: local,
          manuallyApprovesFollowers: manuallyApprovesFollowers,
          mediaSize: mediaSize,
          name: name,
          preferredUsername: preferredUsername,
          summary: summary,
          suspended: suspended,
          type: type,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_participantStats
    extends GdeleteDiscussion_EventFieldsData_participantStats {
  @override
  final String G__typename;
  @override
  final int? administrator;
  @override
  final int? creator;
  @override
  final int? going;
  @override
  final int? moderator;
  @override
  final int? notApproved;
  @override
  final int? notConfirmed;
  @override
  final int? participant;
  @override
  final int? rejected;

  factory _$GdeleteDiscussion_EventFieldsData_participantStats([
    void Function(GdeleteDiscussion_EventFieldsData_participantStatsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_EventFieldsData_participantStatsBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_EventFieldsData_participantStats._({
    required this.G__typename,
    this.administrator,
    this.creator,
    this.going,
    this.moderator,
    this.notApproved,
    this.notConfirmed,
    this.participant,
    this.rejected,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_participantStats rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_participantStatsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_participantStatsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_participantStatsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_participantStats &&
        G__typename == other.G__typename &&
        administrator == other.administrator &&
        creator == other.creator &&
        going == other.going &&
        moderator == other.moderator &&
        notApproved == other.notApproved &&
        notConfirmed == other.notConfirmed &&
        participant == other.participant &&
        rejected == other.rejected;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, administrator.hashCode);
    _$hash = $jc(_$hash, creator.hashCode);
    _$hash = $jc(_$hash, going.hashCode);
    _$hash = $jc(_$hash, moderator.hashCode);
    _$hash = $jc(_$hash, notApproved.hashCode);
    _$hash = $jc(_$hash, notConfirmed.hashCode);
    _$hash = $jc(_$hash, participant.hashCode);
    _$hash = $jc(_$hash, rejected.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_participantStats',
          )
          ..add('G__typename', G__typename)
          ..add('administrator', administrator)
          ..add('creator', creator)
          ..add('going', going)
          ..add('moderator', moderator)
          ..add('notApproved', notApproved)
          ..add('notConfirmed', notConfirmed)
          ..add('participant', participant)
          ..add('rejected', rejected))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_participantStatsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_participantStats,
          GdeleteDiscussion_EventFieldsData_participantStatsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_participantStats? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _administrator;
  int? get administrator => _$this._administrator;
  set administrator(int? administrator) =>
      _$this._administrator = administrator;

  int? _creator;
  int? get creator => _$this._creator;
  set creator(int? creator) => _$this._creator = creator;

  int? _going;
  int? get going => _$this._going;
  set going(int? going) => _$this._going = going;

  int? _moderator;
  int? get moderator => _$this._moderator;
  set moderator(int? moderator) => _$this._moderator = moderator;

  int? _notApproved;
  int? get notApproved => _$this._notApproved;
  set notApproved(int? notApproved) => _$this._notApproved = notApproved;

  int? _notConfirmed;
  int? get notConfirmed => _$this._notConfirmed;
  set notConfirmed(int? notConfirmed) => _$this._notConfirmed = notConfirmed;

  int? _participant;
  int? get participant => _$this._participant;
  set participant(int? participant) => _$this._participant = participant;

  int? _rejected;
  int? get rejected => _$this._rejected;
  set rejected(int? rejected) => _$this._rejected = rejected;

  GdeleteDiscussion_EventFieldsData_participantStatsBuilder() {
    GdeleteDiscussion_EventFieldsData_participantStats._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_participantStatsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _administrator = $v.administrator;
      _creator = $v.creator;
      _going = $v.going;
      _moderator = $v.moderator;
      _notApproved = $v.notApproved;
      _notConfirmed = $v.notConfirmed;
      _participant = $v.participant;
      _rejected = $v.rejected;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_participantStats other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_participantStats;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_participantStatsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_participantStats build() => _build();

  _$GdeleteDiscussion_EventFieldsData_participantStats _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_participantStats._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_participantStats',
            'G__typename',
          ),
          administrator: administrator,
          creator: creator,
          going: going,
          moderator: moderator,
          notApproved: notApproved,
          notConfirmed: notConfirmed,
          participant: participant,
          rejected: rejected,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_participants
    extends GdeleteDiscussion_EventFieldsData_participants {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_EventFieldsData_participants([
    void Function(GdeleteDiscussion_EventFieldsData_participantsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_EventFieldsData_participantsBuilder()..update(updates))
          ._build();

  _$GdeleteDiscussion_EventFieldsData_participants._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_participants rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_participantsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_participantsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_participantsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_participants &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_participants',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_participantsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_participants,
          GdeleteDiscussion_EventFieldsData_participantsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_participants? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_EventFieldsData_participantsBuilder() {
    GdeleteDiscussion_EventFieldsData_participants._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_participantsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_participants other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_participants;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_participantsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_participants build() => _build();

  _$GdeleteDiscussion_EventFieldsData_participants _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_participants._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_participants',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_physicalAddress
    extends GdeleteDiscussion_EventFieldsData_physicalAddress {
  @override
  final String G__typename;
  @override
  final String? country;
  @override
  final String? description;
  @override
  final _i2.GPoint? geom;
  @override
  final String? id;
  @override
  final String? locality;
  @override
  final String? originId;
  @override
  final String? postalCode;
  @override
  final String? region;
  @override
  final String? street;
  @override
  final _i2.GTimezone? timezone;
  @override
  final String? type;
  @override
  final String? url;

  factory _$GdeleteDiscussion_EventFieldsData_physicalAddress([
    void Function(GdeleteDiscussion_EventFieldsData_physicalAddressBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_EventFieldsData_physicalAddressBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_EventFieldsData_physicalAddress._({
    required this.G__typename,
    this.country,
    this.description,
    this.geom,
    this.id,
    this.locality,
    this.originId,
    this.postalCode,
    this.region,
    this.street,
    this.timezone,
    this.type,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_physicalAddress rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_physicalAddressBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_physicalAddressBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_physicalAddressBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_physicalAddress &&
        G__typename == other.G__typename &&
        country == other.country &&
        description == other.description &&
        geom == other.geom &&
        id == other.id &&
        locality == other.locality &&
        originId == other.originId &&
        postalCode == other.postalCode &&
        region == other.region &&
        street == other.street &&
        timezone == other.timezone &&
        type == other.type &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, geom.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, locality.hashCode);
    _$hash = $jc(_$hash, originId.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, region.hashCode);
    _$hash = $jc(_$hash, street.hashCode);
    _$hash = $jc(_$hash, timezone.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_physicalAddress',
          )
          ..add('G__typename', G__typename)
          ..add('country', country)
          ..add('description', description)
          ..add('geom', geom)
          ..add('id', id)
          ..add('locality', locality)
          ..add('originId', originId)
          ..add('postalCode', postalCode)
          ..add('region', region)
          ..add('street', street)
          ..add('timezone', timezone)
          ..add('type', type)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_physicalAddressBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_physicalAddress,
          GdeleteDiscussion_EventFieldsData_physicalAddressBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_physicalAddress? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  _i2.GPointBuilder? _geom;
  _i2.GPointBuilder get geom => _$this._geom ??= _i2.GPointBuilder();
  set geom(_i2.GPointBuilder? geom) => _$this._geom = geom;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _locality;
  String? get locality => _$this._locality;
  set locality(String? locality) => _$this._locality = locality;

  String? _originId;
  String? get originId => _$this._originId;
  set originId(String? originId) => _$this._originId = originId;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _region;
  String? get region => _$this._region;
  set region(String? region) => _$this._region = region;

  String? _street;
  String? get street => _$this._street;
  set street(String? street) => _$this._street = street;

  _i2.GTimezoneBuilder? _timezone;
  _i2.GTimezoneBuilder get timezone =>
      _$this._timezone ??= _i2.GTimezoneBuilder();
  set timezone(_i2.GTimezoneBuilder? timezone) => _$this._timezone = timezone;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_EventFieldsData_physicalAddressBuilder() {
    GdeleteDiscussion_EventFieldsData_physicalAddress._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_physicalAddressBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _country = $v.country;
      _description = $v.description;
      _geom = $v.geom?.toBuilder();
      _id = $v.id;
      _locality = $v.locality;
      _originId = $v.originId;
      _postalCode = $v.postalCode;
      _region = $v.region;
      _street = $v.street;
      _timezone = $v.timezone?.toBuilder();
      _type = $v.type;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_physicalAddress other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_physicalAddress;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_physicalAddressBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_physicalAddress build() => _build();

  _$GdeleteDiscussion_EventFieldsData_physicalAddress _build() {
    _$GdeleteDiscussion_EventFieldsData_physicalAddress _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_EventFieldsData_physicalAddress._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_EventFieldsData_physicalAddress',
              'G__typename',
            ),
            country: country,
            description: description,
            geom: _geom?.build(),
            id: id,
            locality: locality,
            originId: originId,
            postalCode: postalCode,
            region: region,
            street: street,
            timezone: _timezone?.build(),
            type: type,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'geom';
        _geom?.build();

        _$failedField = 'timezone';
        _timezone?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_EventFieldsData_physicalAddress',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_picture
    extends GdeleteDiscussion_EventFieldsData_picture {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GdeleteDiscussion_EventFieldsData_picture([
    void Function(GdeleteDiscussion_EventFieldsData_pictureBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_pictureBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_picture._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_picture rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_pictureBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_pictureBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_pictureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_picture &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_picture',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_pictureBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_picture,
          GdeleteDiscussion_EventFieldsData_pictureBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_picture? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_EventFieldsData_pictureBuilder() {
    GdeleteDiscussion_EventFieldsData_picture._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_pictureBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_picture other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_picture;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_pictureBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_picture build() => _build();

  _$GdeleteDiscussion_EventFieldsData_picture _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_picture._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_picture',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_EventFieldsData_tags
    extends GdeleteDiscussion_EventFieldsData_tags {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final String? slug;
  @override
  final String? title;

  factory _$GdeleteDiscussion_EventFieldsData_tags([
    void Function(GdeleteDiscussion_EventFieldsData_tagsBuilder)? updates,
  ]) => (GdeleteDiscussion_EventFieldsData_tagsBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_EventFieldsData_tags._({
    required this.G__typename,
    this.id,
    this.slug,
    this.title,
  }) : super._();
  @override
  GdeleteDiscussion_EventFieldsData_tags rebuild(
    void Function(GdeleteDiscussion_EventFieldsData_tagsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_EventFieldsData_tagsBuilder toBuilder() =>
      GdeleteDiscussion_EventFieldsData_tagsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_EventFieldsData_tags &&
        G__typename == other.G__typename &&
        id == other.id &&
        slug == other.slug &&
        title == other.title;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, slug.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_EventFieldsData_tags',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('slug', slug)
          ..add('title', title))
        .toString();
  }
}

class GdeleteDiscussion_EventFieldsData_tagsBuilder
    implements
        Builder<
          GdeleteDiscussion_EventFieldsData_tags,
          GdeleteDiscussion_EventFieldsData_tagsBuilder
        > {
  _$GdeleteDiscussion_EventFieldsData_tags? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GdeleteDiscussion_EventFieldsData_tagsBuilder() {
    GdeleteDiscussion_EventFieldsData_tags._initializeBuilder(this);
  }

  GdeleteDiscussion_EventFieldsData_tagsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _slug = $v.slug;
      _title = $v.title;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_EventFieldsData_tags other) {
    _$v = other as _$GdeleteDiscussion_EventFieldsData_tags;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_EventFieldsData_tagsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_EventFieldsData_tags build() => _build();

  _$GdeleteDiscussion_EventFieldsData_tags _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_EventFieldsData_tags._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_EventFieldsData_tags',
            'G__typename',
          ),
          id: id,
          slug: slug,
          title: title,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_MediaFieldsData
    extends GdeleteDiscussion_MediaFieldsData {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final GdeleteDiscussion_MediaFieldsData_metadata? metadata;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GdeleteDiscussion_MediaFieldsData([
    void Function(GdeleteDiscussion_MediaFieldsDataBuilder)? updates,
  ]) => (GdeleteDiscussion_MediaFieldsDataBuilder()..update(updates))._build();

  _$GdeleteDiscussion_MediaFieldsData._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.metadata,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_MediaFieldsData rebuild(
    void Function(GdeleteDiscussion_MediaFieldsDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_MediaFieldsDataBuilder toBuilder() =>
      GdeleteDiscussion_MediaFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_MediaFieldsData &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        metadata == other.metadata &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, metadata.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GdeleteDiscussion_MediaFieldsData')
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('metadata', metadata)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_MediaFieldsDataBuilder
    implements
        Builder<
          GdeleteDiscussion_MediaFieldsData,
          GdeleteDiscussion_MediaFieldsDataBuilder
        > {
  _$GdeleteDiscussion_MediaFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GdeleteDiscussion_MediaFieldsData_metadataBuilder? _metadata;
  GdeleteDiscussion_MediaFieldsData_metadataBuilder get metadata =>
      _$this._metadata ??= GdeleteDiscussion_MediaFieldsData_metadataBuilder();
  set metadata(GdeleteDiscussion_MediaFieldsData_metadataBuilder? metadata) =>
      _$this._metadata = metadata;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_MediaFieldsDataBuilder() {
    GdeleteDiscussion_MediaFieldsData._initializeBuilder(this);
  }

  GdeleteDiscussion_MediaFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _metadata = $v.metadata?.toBuilder();
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_MediaFieldsData other) {
    _$v = other as _$GdeleteDiscussion_MediaFieldsData;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_MediaFieldsDataBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_MediaFieldsData build() => _build();

  _$GdeleteDiscussion_MediaFieldsData _build() {
    _$GdeleteDiscussion_MediaFieldsData _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_MediaFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_MediaFieldsData',
              'G__typename',
            ),
            alt: alt,
            contentType: contentType,
            id: id,
            metadata: _metadata?.build(),
            name: name,
            size: size,
            url: url,
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_MediaFieldsData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_MediaFieldsData_metadata
    extends GdeleteDiscussion_MediaFieldsData_metadata {
  @override
  final String G__typename;
  @override
  final String? blurhash;
  @override
  final int? height;
  @override
  final int? width;

  factory _$GdeleteDiscussion_MediaFieldsData_metadata([
    void Function(GdeleteDiscussion_MediaFieldsData_metadataBuilder)? updates,
  ]) => (GdeleteDiscussion_MediaFieldsData_metadataBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_MediaFieldsData_metadata._({
    required this.G__typename,
    this.blurhash,
    this.height,
    this.width,
  }) : super._();
  @override
  GdeleteDiscussion_MediaFieldsData_metadata rebuild(
    void Function(GdeleteDiscussion_MediaFieldsData_metadataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_MediaFieldsData_metadataBuilder toBuilder() =>
      GdeleteDiscussion_MediaFieldsData_metadataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_MediaFieldsData_metadata &&
        G__typename == other.G__typename &&
        blurhash == other.blurhash &&
        height == other.height &&
        width == other.width;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, blurhash.hashCode);
    _$hash = $jc(_$hash, height.hashCode);
    _$hash = $jc(_$hash, width.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_MediaFieldsData_metadata',
          )
          ..add('G__typename', G__typename)
          ..add('blurhash', blurhash)
          ..add('height', height)
          ..add('width', width))
        .toString();
  }
}

class GdeleteDiscussion_MediaFieldsData_metadataBuilder
    implements
        Builder<
          GdeleteDiscussion_MediaFieldsData_metadata,
          GdeleteDiscussion_MediaFieldsData_metadataBuilder
        > {
  _$GdeleteDiscussion_MediaFieldsData_metadata? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _blurhash;
  String? get blurhash => _$this._blurhash;
  set blurhash(String? blurhash) => _$this._blurhash = blurhash;

  int? _height;
  int? get height => _$this._height;
  set height(int? height) => _$this._height = height;

  int? _width;
  int? get width => _$this._width;
  set width(int? width) => _$this._width = width;

  GdeleteDiscussion_MediaFieldsData_metadataBuilder() {
    GdeleteDiscussion_MediaFieldsData_metadata._initializeBuilder(this);
  }

  GdeleteDiscussion_MediaFieldsData_metadataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _blurhash = $v.blurhash;
      _height = $v.height;
      _width = $v.width;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_MediaFieldsData_metadata other) {
    _$v = other as _$GdeleteDiscussion_MediaFieldsData_metadata;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_MediaFieldsData_metadataBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_MediaFieldsData_metadata build() => _build();

  _$GdeleteDiscussion_MediaFieldsData_metadata _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_MediaFieldsData_metadata._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_MediaFieldsData_metadata',
            'G__typename',
          ),
          blurhash: blurhash,
          height: height,
          width: width,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData
    extends GdeleteDiscussion_PersonFieldsData {
  @override
  final String G__typename;
  @override
  final GdeleteDiscussion_PersonFieldsData_avatar? avatar;
  @override
  final GdeleteDiscussion_PersonFieldsData_banner? banner;
  @override
  final GdeleteDiscussion_PersonFieldsData_conversations? conversations;
  @override
  final String? domain;
  @override
  final BuiltList<GdeleteDiscussion_PersonFieldsData_feedTokens?>? feedTokens;
  @override
  final int? followersCount;
  @override
  final int? followingCount;
  @override
  final GdeleteDiscussion_PersonFieldsData_follows? follows;
  @override
  final String? id;
  @override
  final bool? local;
  @override
  final bool? manuallyApprovesFollowers;
  @override
  final int? mediaSize;
  @override
  final BuiltList<GdeleteDiscussion_PersonFieldsData_memberOf?>? memberOf;
  @override
  final GdeleteDiscussion_PersonFieldsData_memberships? memberships;
  @override
  final String? name;
  @override
  final GdeleteDiscussion_PersonFieldsData_organizedEvents? organizedEvents;
  @override
  final GdeleteDiscussion_PersonFieldsData_participations? participations;
  @override
  final String? preferredUsername;
  @override
  final String? summary;
  @override
  final bool? suspended;
  @override
  final _i2.GActorType? type;
  @override
  final int? unreadConversationsCount;
  @override
  final String? url;
  @override
  final GdeleteDiscussion_PersonFieldsData_user? user;

  factory _$GdeleteDiscussion_PersonFieldsData([
    void Function(GdeleteDiscussion_PersonFieldsDataBuilder)? updates,
  ]) => (GdeleteDiscussion_PersonFieldsDataBuilder()..update(updates))._build();

  _$GdeleteDiscussion_PersonFieldsData._({
    required this.G__typename,
    this.avatar,
    this.banner,
    this.conversations,
    this.domain,
    this.feedTokens,
    this.followersCount,
    this.followingCount,
    this.follows,
    this.id,
    this.local,
    this.manuallyApprovesFollowers,
    this.mediaSize,
    this.memberOf,
    this.memberships,
    this.name,
    this.organizedEvents,
    this.participations,
    this.preferredUsername,
    this.summary,
    this.suspended,
    this.type,
    this.unreadConversationsCount,
    this.url,
    this.user,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData rebuild(
    void Function(GdeleteDiscussion_PersonFieldsDataBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsDataBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData &&
        G__typename == other.G__typename &&
        avatar == other.avatar &&
        banner == other.banner &&
        conversations == other.conversations &&
        domain == other.domain &&
        feedTokens == other.feedTokens &&
        followersCount == other.followersCount &&
        followingCount == other.followingCount &&
        follows == other.follows &&
        id == other.id &&
        local == other.local &&
        manuallyApprovesFollowers == other.manuallyApprovesFollowers &&
        mediaSize == other.mediaSize &&
        memberOf == other.memberOf &&
        memberships == other.memberships &&
        name == other.name &&
        organizedEvents == other.organizedEvents &&
        participations == other.participations &&
        preferredUsername == other.preferredUsername &&
        summary == other.summary &&
        suspended == other.suspended &&
        type == other.type &&
        unreadConversationsCount == other.unreadConversationsCount &&
        url == other.url &&
        user == other.user;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, avatar.hashCode);
    _$hash = $jc(_$hash, banner.hashCode);
    _$hash = $jc(_$hash, conversations.hashCode);
    _$hash = $jc(_$hash, domain.hashCode);
    _$hash = $jc(_$hash, feedTokens.hashCode);
    _$hash = $jc(_$hash, followersCount.hashCode);
    _$hash = $jc(_$hash, followingCount.hashCode);
    _$hash = $jc(_$hash, follows.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, local.hashCode);
    _$hash = $jc(_$hash, manuallyApprovesFollowers.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, memberOf.hashCode);
    _$hash = $jc(_$hash, memberships.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, organizedEvents.hashCode);
    _$hash = $jc(_$hash, participations.hashCode);
    _$hash = $jc(_$hash, preferredUsername.hashCode);
    _$hash = $jc(_$hash, summary.hashCode);
    _$hash = $jc(_$hash, suspended.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, unreadConversationsCount.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jc(_$hash, user.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GdeleteDiscussion_PersonFieldsData')
          ..add('G__typename', G__typename)
          ..add('avatar', avatar)
          ..add('banner', banner)
          ..add('conversations', conversations)
          ..add('domain', domain)
          ..add('feedTokens', feedTokens)
          ..add('followersCount', followersCount)
          ..add('followingCount', followingCount)
          ..add('follows', follows)
          ..add('id', id)
          ..add('local', local)
          ..add('manuallyApprovesFollowers', manuallyApprovesFollowers)
          ..add('mediaSize', mediaSize)
          ..add('memberOf', memberOf)
          ..add('memberships', memberships)
          ..add('name', name)
          ..add('organizedEvents', organizedEvents)
          ..add('participations', participations)
          ..add('preferredUsername', preferredUsername)
          ..add('summary', summary)
          ..add('suspended', suspended)
          ..add('type', type)
          ..add('unreadConversationsCount', unreadConversationsCount)
          ..add('url', url)
          ..add('user', user))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsDataBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData,
          GdeleteDiscussion_PersonFieldsDataBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  GdeleteDiscussion_PersonFieldsData_avatarBuilder? _avatar;
  GdeleteDiscussion_PersonFieldsData_avatarBuilder get avatar =>
      _$this._avatar ??= GdeleteDiscussion_PersonFieldsData_avatarBuilder();
  set avatar(GdeleteDiscussion_PersonFieldsData_avatarBuilder? avatar) =>
      _$this._avatar = avatar;

  GdeleteDiscussion_PersonFieldsData_bannerBuilder? _banner;
  GdeleteDiscussion_PersonFieldsData_bannerBuilder get banner =>
      _$this._banner ??= GdeleteDiscussion_PersonFieldsData_bannerBuilder();
  set banner(GdeleteDiscussion_PersonFieldsData_bannerBuilder? banner) =>
      _$this._banner = banner;

  GdeleteDiscussion_PersonFieldsData_conversationsBuilder? _conversations;
  GdeleteDiscussion_PersonFieldsData_conversationsBuilder get conversations =>
      _$this._conversations ??=
          GdeleteDiscussion_PersonFieldsData_conversationsBuilder();
  set conversations(
    GdeleteDiscussion_PersonFieldsData_conversationsBuilder? conversations,
  ) => _$this._conversations = conversations;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  ListBuilder<GdeleteDiscussion_PersonFieldsData_feedTokens?>? _feedTokens;
  ListBuilder<GdeleteDiscussion_PersonFieldsData_feedTokens?> get feedTokens =>
      _$this._feedTokens ??=
          ListBuilder<GdeleteDiscussion_PersonFieldsData_feedTokens?>();
  set feedTokens(
    ListBuilder<GdeleteDiscussion_PersonFieldsData_feedTokens?>? feedTokens,
  ) => _$this._feedTokens = feedTokens;

  int? _followersCount;
  int? get followersCount => _$this._followersCount;
  set followersCount(int? followersCount) =>
      _$this._followersCount = followersCount;

  int? _followingCount;
  int? get followingCount => _$this._followingCount;
  set followingCount(int? followingCount) =>
      _$this._followingCount = followingCount;

  GdeleteDiscussion_PersonFieldsData_followsBuilder? _follows;
  GdeleteDiscussion_PersonFieldsData_followsBuilder get follows =>
      _$this._follows ??= GdeleteDiscussion_PersonFieldsData_followsBuilder();
  set follows(GdeleteDiscussion_PersonFieldsData_followsBuilder? follows) =>
      _$this._follows = follows;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _local;
  bool? get local => _$this._local;
  set local(bool? local) => _$this._local = local;

  bool? _manuallyApprovesFollowers;
  bool? get manuallyApprovesFollowers => _$this._manuallyApprovesFollowers;
  set manuallyApprovesFollowers(bool? manuallyApprovesFollowers) =>
      _$this._manuallyApprovesFollowers = manuallyApprovesFollowers;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  ListBuilder<GdeleteDiscussion_PersonFieldsData_memberOf?>? _memberOf;
  ListBuilder<GdeleteDiscussion_PersonFieldsData_memberOf?> get memberOf =>
      _$this._memberOf ??=
          ListBuilder<GdeleteDiscussion_PersonFieldsData_memberOf?>();
  set memberOf(
    ListBuilder<GdeleteDiscussion_PersonFieldsData_memberOf?>? memberOf,
  ) => _$this._memberOf = memberOf;

  GdeleteDiscussion_PersonFieldsData_membershipsBuilder? _memberships;
  GdeleteDiscussion_PersonFieldsData_membershipsBuilder get memberships =>
      _$this._memberships ??=
          GdeleteDiscussion_PersonFieldsData_membershipsBuilder();
  set memberships(
    GdeleteDiscussion_PersonFieldsData_membershipsBuilder? memberships,
  ) => _$this._memberships = memberships;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder? _organizedEvents;
  GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder
  get organizedEvents => _$this._organizedEvents ??=
      GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder();
  set organizedEvents(
    GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder? organizedEvents,
  ) => _$this._organizedEvents = organizedEvents;

  GdeleteDiscussion_PersonFieldsData_participationsBuilder? _participations;
  GdeleteDiscussion_PersonFieldsData_participationsBuilder get participations =>
      _$this._participations ??=
          GdeleteDiscussion_PersonFieldsData_participationsBuilder();
  set participations(
    GdeleteDiscussion_PersonFieldsData_participationsBuilder? participations,
  ) => _$this._participations = participations;

  String? _preferredUsername;
  String? get preferredUsername => _$this._preferredUsername;
  set preferredUsername(String? preferredUsername) =>
      _$this._preferredUsername = preferredUsername;

  String? _summary;
  String? get summary => _$this._summary;
  set summary(String? summary) => _$this._summary = summary;

  bool? _suspended;
  bool? get suspended => _$this._suspended;
  set suspended(bool? suspended) => _$this._suspended = suspended;

  _i2.GActorType? _type;
  _i2.GActorType? get type => _$this._type;
  set type(_i2.GActorType? type) => _$this._type = type;

  int? _unreadConversationsCount;
  int? get unreadConversationsCount => _$this._unreadConversationsCount;
  set unreadConversationsCount(int? unreadConversationsCount) =>
      _$this._unreadConversationsCount = unreadConversationsCount;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_PersonFieldsData_userBuilder? _user;
  GdeleteDiscussion_PersonFieldsData_userBuilder get user =>
      _$this._user ??= GdeleteDiscussion_PersonFieldsData_userBuilder();
  set user(GdeleteDiscussion_PersonFieldsData_userBuilder? user) =>
      _$this._user = user;

  GdeleteDiscussion_PersonFieldsDataBuilder() {
    GdeleteDiscussion_PersonFieldsData._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsDataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _avatar = $v.avatar?.toBuilder();
      _banner = $v.banner?.toBuilder();
      _conversations = $v.conversations?.toBuilder();
      _domain = $v.domain;
      _feedTokens = $v.feedTokens?.toBuilder();
      _followersCount = $v.followersCount;
      _followingCount = $v.followingCount;
      _follows = $v.follows?.toBuilder();
      _id = $v.id;
      _local = $v.local;
      _manuallyApprovesFollowers = $v.manuallyApprovesFollowers;
      _mediaSize = $v.mediaSize;
      _memberOf = $v.memberOf?.toBuilder();
      _memberships = $v.memberships?.toBuilder();
      _name = $v.name;
      _organizedEvents = $v.organizedEvents?.toBuilder();
      _participations = $v.participations?.toBuilder();
      _preferredUsername = $v.preferredUsername;
      _summary = $v.summary;
      _suspended = $v.suspended;
      _type = $v.type;
      _unreadConversationsCount = $v.unreadConversationsCount;
      _url = $v.url;
      _user = $v.user?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsDataBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData build() => _build();

  _$GdeleteDiscussion_PersonFieldsData _build() {
    _$GdeleteDiscussion_PersonFieldsData _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_PersonFieldsData._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_PersonFieldsData',
              'G__typename',
            ),
            avatar: _avatar?.build(),
            banner: _banner?.build(),
            conversations: _conversations?.build(),
            domain: domain,
            feedTokens: _feedTokens?.build(),
            followersCount: followersCount,
            followingCount: followingCount,
            follows: _follows?.build(),
            id: id,
            local: local,
            manuallyApprovesFollowers: manuallyApprovesFollowers,
            mediaSize: mediaSize,
            memberOf: _memberOf?.build(),
            memberships: _memberships?.build(),
            name: name,
            organizedEvents: _organizedEvents?.build(),
            participations: _participations?.build(),
            preferredUsername: preferredUsername,
            summary: summary,
            suspended: suspended,
            type: type,
            unreadConversationsCount: unreadConversationsCount,
            url: url,
            user: _user?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'avatar';
        _avatar?.build();
        _$failedField = 'banner';
        _banner?.build();
        _$failedField = 'conversations';
        _conversations?.build();

        _$failedField = 'feedTokens';
        _feedTokens?.build();

        _$failedField = 'follows';
        _follows?.build();

        _$failedField = 'memberOf';
        _memberOf?.build();
        _$failedField = 'memberships';
        _memberships?.build();

        _$failedField = 'organizedEvents';
        _organizedEvents?.build();
        _$failedField = 'participations';
        _participations?.build();

        _$failedField = 'user';
        _user?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_PersonFieldsData',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_avatar
    extends GdeleteDiscussion_PersonFieldsData_avatar {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GdeleteDiscussion_PersonFieldsData_avatar([
    void Function(GdeleteDiscussion_PersonFieldsData_avatarBuilder)? updates,
  ]) => (GdeleteDiscussion_PersonFieldsData_avatarBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_PersonFieldsData_avatar._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_avatar rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_avatarBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_avatarBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_avatarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_avatar &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_avatar',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_avatarBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_avatar,
          GdeleteDiscussion_PersonFieldsData_avatarBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_avatar? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_PersonFieldsData_avatarBuilder() {
    GdeleteDiscussion_PersonFieldsData_avatar._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_avatarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_avatar other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_avatar;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_avatarBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_avatar build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_avatar _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_avatar._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_avatar',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_banner
    extends GdeleteDiscussion_PersonFieldsData_banner {
  @override
  final String G__typename;
  @override
  final String? alt;
  @override
  final String? contentType;
  @override
  final String? id;
  @override
  final String? name;
  @override
  final int? size;
  @override
  final String? url;

  factory _$GdeleteDiscussion_PersonFieldsData_banner([
    void Function(GdeleteDiscussion_PersonFieldsData_bannerBuilder)? updates,
  ]) => (GdeleteDiscussion_PersonFieldsData_bannerBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_PersonFieldsData_banner._({
    required this.G__typename,
    this.alt,
    this.contentType,
    this.id,
    this.name,
    this.size,
    this.url,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_banner rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_bannerBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_bannerBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_bannerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_banner &&
        G__typename == other.G__typename &&
        alt == other.alt &&
        contentType == other.contentType &&
        id == other.id &&
        name == other.name &&
        size == other.size &&
        url == other.url;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, alt.hashCode);
    _$hash = $jc(_$hash, contentType.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, size.hashCode);
    _$hash = $jc(_$hash, url.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_banner',
          )
          ..add('G__typename', G__typename)
          ..add('alt', alt)
          ..add('contentType', contentType)
          ..add('id', id)
          ..add('name', name)
          ..add('size', size)
          ..add('url', url))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_bannerBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_banner,
          GdeleteDiscussion_PersonFieldsData_bannerBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_banner? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  int? _size;
  int? get size => _$this._size;
  set size(int? size) => _$this._size = size;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GdeleteDiscussion_PersonFieldsData_bannerBuilder() {
    GdeleteDiscussion_PersonFieldsData_banner._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_bannerBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _alt = $v.alt;
      _contentType = $v.contentType;
      _id = $v.id;
      _name = $v.name;
      _size = $v.size;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_banner other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_banner;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_bannerBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_banner build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_banner _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_banner._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_banner',
            'G__typename',
          ),
          alt: alt,
          contentType: contentType,
          id: id,
          name: name,
          size: size,
          url: url,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_conversations
    extends GdeleteDiscussion_PersonFieldsData_conversations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_PersonFieldsData_conversations([
    void Function(GdeleteDiscussion_PersonFieldsData_conversationsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_PersonFieldsData_conversationsBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_PersonFieldsData_conversations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_conversations rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_conversationsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_conversationsBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_conversationsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_conversations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_conversations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_conversationsBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_conversations,
          GdeleteDiscussion_PersonFieldsData_conversationsBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_conversations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_PersonFieldsData_conversationsBuilder() {
    GdeleteDiscussion_PersonFieldsData_conversations._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_conversationsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_conversations other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_conversations;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_conversationsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_conversations build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_conversations _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_conversations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_conversations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_feedTokens
    extends GdeleteDiscussion_PersonFieldsData_feedTokens {
  @override
  final String G__typename;
  @override
  final String? token;

  factory _$GdeleteDiscussion_PersonFieldsData_feedTokens([
    void Function(GdeleteDiscussion_PersonFieldsData_feedTokensBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_PersonFieldsData_feedTokensBuilder()..update(updates))
          ._build();

  _$GdeleteDiscussion_PersonFieldsData_feedTokens._({
    required this.G__typename,
    this.token,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_feedTokens rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_feedTokensBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_feedTokensBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_feedTokensBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_feedTokens &&
        G__typename == other.G__typename &&
        token == other.token;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_feedTokens',
          )
          ..add('G__typename', G__typename)
          ..add('token', token))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_feedTokensBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_feedTokens,
          GdeleteDiscussion_PersonFieldsData_feedTokensBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_feedTokens? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GdeleteDiscussion_PersonFieldsData_feedTokensBuilder() {
    GdeleteDiscussion_PersonFieldsData_feedTokens._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_feedTokensBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _token = $v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_feedTokens other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_feedTokens;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_feedTokensBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_feedTokens build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_feedTokens _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_feedTokens._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_feedTokens',
            'G__typename',
          ),
          token: token,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_follows
    extends GdeleteDiscussion_PersonFieldsData_follows {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_PersonFieldsData_follows([
    void Function(GdeleteDiscussion_PersonFieldsData_followsBuilder)? updates,
  ]) => (GdeleteDiscussion_PersonFieldsData_followsBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_PersonFieldsData_follows._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_follows rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_followsBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_followsBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_followsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_follows &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_follows',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_followsBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_follows,
          GdeleteDiscussion_PersonFieldsData_followsBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_follows? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_PersonFieldsData_followsBuilder() {
    GdeleteDiscussion_PersonFieldsData_follows._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_followsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_follows other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_follows;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_followsBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_follows build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_follows _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_follows._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_follows',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_memberOf
    extends GdeleteDiscussion_PersonFieldsData_memberOf {
  @override
  final String G__typename;
  @override
  final String? id;
  @override
  final _i2.GNaiveDateTime? insertedAt;
  @override
  final _i2.GMemberRoleEnum? role;
  @override
  final _i2.GNaiveDateTime? updatedAt;

  factory _$GdeleteDiscussion_PersonFieldsData_memberOf([
    void Function(GdeleteDiscussion_PersonFieldsData_memberOfBuilder)? updates,
  ]) => (GdeleteDiscussion_PersonFieldsData_memberOfBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_PersonFieldsData_memberOf._({
    required this.G__typename,
    this.id,
    this.insertedAt,
    this.role,
    this.updatedAt,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_memberOf rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_memberOfBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_memberOfBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_memberOfBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_memberOf &&
        G__typename == other.G__typename &&
        id == other.id &&
        insertedAt == other.insertedAt &&
        role == other.role &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, insertedAt.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jc(_$hash, updatedAt.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_memberOf',
          )
          ..add('G__typename', G__typename)
          ..add('id', id)
          ..add('insertedAt', insertedAt)
          ..add('role', role)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_memberOfBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_memberOf,
          GdeleteDiscussion_PersonFieldsData_memberOfBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_memberOf? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  _i2.GNaiveDateTimeBuilder? _insertedAt;
  _i2.GNaiveDateTimeBuilder get insertedAt =>
      _$this._insertedAt ??= _i2.GNaiveDateTimeBuilder();
  set insertedAt(_i2.GNaiveDateTimeBuilder? insertedAt) =>
      _$this._insertedAt = insertedAt;

  _i2.GMemberRoleEnum? _role;
  _i2.GMemberRoleEnum? get role => _$this._role;
  set role(_i2.GMemberRoleEnum? role) => _$this._role = role;

  _i2.GNaiveDateTimeBuilder? _updatedAt;
  _i2.GNaiveDateTimeBuilder get updatedAt =>
      _$this._updatedAt ??= _i2.GNaiveDateTimeBuilder();
  set updatedAt(_i2.GNaiveDateTimeBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GdeleteDiscussion_PersonFieldsData_memberOfBuilder() {
    GdeleteDiscussion_PersonFieldsData_memberOf._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_memberOfBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _id = $v.id;
      _insertedAt = $v.insertedAt?.toBuilder();
      _role = $v.role;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_memberOf other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_memberOf;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_memberOfBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_memberOf build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_memberOf _build() {
    _$GdeleteDiscussion_PersonFieldsData_memberOf _$result;
    try {
      _$result =
          _$v ??
          _$GdeleteDiscussion_PersonFieldsData_memberOf._(
            G__typename: BuiltValueNullFieldError.checkNotNull(
              G__typename,
              r'GdeleteDiscussion_PersonFieldsData_memberOf',
              'G__typename',
            ),
            id: id,
            insertedAt: _insertedAt?.build(),
            role: role,
            updatedAt: _updatedAt?.build(),
          );
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'insertedAt';
        _insertedAt?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw BuiltValueNestedFieldError(
          r'GdeleteDiscussion_PersonFieldsData_memberOf',
          _$failedField,
          e.toString(),
        );
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_memberships
    extends GdeleteDiscussion_PersonFieldsData_memberships {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_PersonFieldsData_memberships([
    void Function(GdeleteDiscussion_PersonFieldsData_membershipsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_PersonFieldsData_membershipsBuilder()..update(updates))
          ._build();

  _$GdeleteDiscussion_PersonFieldsData_memberships._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_memberships rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_membershipsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_membershipsBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_membershipsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_memberships &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_memberships',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_membershipsBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_memberships,
          GdeleteDiscussion_PersonFieldsData_membershipsBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_memberships? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_PersonFieldsData_membershipsBuilder() {
    GdeleteDiscussion_PersonFieldsData_memberships._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_membershipsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_memberships other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_memberships;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_membershipsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_memberships build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_memberships _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_memberships._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_memberships',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_organizedEvents
    extends GdeleteDiscussion_PersonFieldsData_organizedEvents {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_PersonFieldsData_organizedEvents([
    void Function(GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_PersonFieldsData_organizedEvents._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_organizedEvents rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder()
        ..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_organizedEvents &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_organizedEvents',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_organizedEvents,
          GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_organizedEvents? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder() {
    GdeleteDiscussion_PersonFieldsData_organizedEvents._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_organizedEvents other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_organizedEvents;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_organizedEventsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_organizedEvents build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_organizedEvents _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_organizedEvents._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_organizedEvents',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_participations
    extends GdeleteDiscussion_PersonFieldsData_participations {
  @override
  final String G__typename;
  @override
  final int? total;

  factory _$GdeleteDiscussion_PersonFieldsData_participations([
    void Function(GdeleteDiscussion_PersonFieldsData_participationsBuilder)?
    updates,
  ]) =>
      (GdeleteDiscussion_PersonFieldsData_participationsBuilder()
            ..update(updates))
          ._build();

  _$GdeleteDiscussion_PersonFieldsData_participations._({
    required this.G__typename,
    this.total,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_participations rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_participationsBuilder)
    updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_participationsBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_participationsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_participations &&
        G__typename == other.G__typename &&
        total == other.total;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, total.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_participations',
          )
          ..add('G__typename', G__typename)
          ..add('total', total))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_participationsBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_participations,
          GdeleteDiscussion_PersonFieldsData_participationsBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_participations? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  int? _total;
  int? get total => _$this._total;
  set total(int? total) => _$this._total = total;

  GdeleteDiscussion_PersonFieldsData_participationsBuilder() {
    GdeleteDiscussion_PersonFieldsData_participations._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_participationsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _total = $v.total;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_participations other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_participations;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_participationsBuilder)?
    updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_participations build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_participations _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_participations._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_participations',
            'G__typename',
          ),
          total: total,
        );
    replace(_$result);
    return _$result;
  }
}

class _$GdeleteDiscussion_PersonFieldsData_user
    extends GdeleteDiscussion_PersonFieldsData_user {
  @override
  final String G__typename;
  @override
  final DateTime? confirmationSentAt;
  @override
  final String? confirmationToken;
  @override
  final DateTime? confirmedAt;
  @override
  final DateTime? currentSignInAt;
  @override
  final String? currentSignInIp;
  @override
  final bool? disabled;
  @override
  final String email;
  @override
  final String? id;
  @override
  final DateTime? lastSignInAt;
  @override
  final String? lastSignInIp;
  @override
  final String? locale;
  @override
  final int? mediaSize;
  @override
  final String? provider;
  @override
  final DateTime? resetPasswordSentAt;
  @override
  final String? resetPasswordToken;
  @override
  final _i2.GUserRole? role;

  factory _$GdeleteDiscussion_PersonFieldsData_user([
    void Function(GdeleteDiscussion_PersonFieldsData_userBuilder)? updates,
  ]) => (GdeleteDiscussion_PersonFieldsData_userBuilder()..update(updates))
      ._build();

  _$GdeleteDiscussion_PersonFieldsData_user._({
    required this.G__typename,
    this.confirmationSentAt,
    this.confirmationToken,
    this.confirmedAt,
    this.currentSignInAt,
    this.currentSignInIp,
    this.disabled,
    required this.email,
    this.id,
    this.lastSignInAt,
    this.lastSignInIp,
    this.locale,
    this.mediaSize,
    this.provider,
    this.resetPasswordSentAt,
    this.resetPasswordToken,
    this.role,
  }) : super._();
  @override
  GdeleteDiscussion_PersonFieldsData_user rebuild(
    void Function(GdeleteDiscussion_PersonFieldsData_userBuilder) updates,
  ) => (toBuilder()..update(updates)).build();

  @override
  GdeleteDiscussion_PersonFieldsData_userBuilder toBuilder() =>
      GdeleteDiscussion_PersonFieldsData_userBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GdeleteDiscussion_PersonFieldsData_user &&
        G__typename == other.G__typename &&
        confirmationSentAt == other.confirmationSentAt &&
        confirmationToken == other.confirmationToken &&
        confirmedAt == other.confirmedAt &&
        currentSignInAt == other.currentSignInAt &&
        currentSignInIp == other.currentSignInIp &&
        disabled == other.disabled &&
        email == other.email &&
        id == other.id &&
        lastSignInAt == other.lastSignInAt &&
        lastSignInIp == other.lastSignInIp &&
        locale == other.locale &&
        mediaSize == other.mediaSize &&
        provider == other.provider &&
        resetPasswordSentAt == other.resetPasswordSentAt &&
        resetPasswordToken == other.resetPasswordToken &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, G__typename.hashCode);
    _$hash = $jc(_$hash, confirmationSentAt.hashCode);
    _$hash = $jc(_$hash, confirmationToken.hashCode);
    _$hash = $jc(_$hash, confirmedAt.hashCode);
    _$hash = $jc(_$hash, currentSignInAt.hashCode);
    _$hash = $jc(_$hash, currentSignInIp.hashCode);
    _$hash = $jc(_$hash, disabled.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, lastSignInAt.hashCode);
    _$hash = $jc(_$hash, lastSignInIp.hashCode);
    _$hash = $jc(_$hash, locale.hashCode);
    _$hash = $jc(_$hash, mediaSize.hashCode);
    _$hash = $jc(_$hash, provider.hashCode);
    _$hash = $jc(_$hash, resetPasswordSentAt.hashCode);
    _$hash = $jc(_$hash, resetPasswordToken.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GdeleteDiscussion_PersonFieldsData_user',
          )
          ..add('G__typename', G__typename)
          ..add('confirmationSentAt', confirmationSentAt)
          ..add('confirmationToken', confirmationToken)
          ..add('confirmedAt', confirmedAt)
          ..add('currentSignInAt', currentSignInAt)
          ..add('currentSignInIp', currentSignInIp)
          ..add('disabled', disabled)
          ..add('email', email)
          ..add('id', id)
          ..add('lastSignInAt', lastSignInAt)
          ..add('lastSignInIp', lastSignInIp)
          ..add('locale', locale)
          ..add('mediaSize', mediaSize)
          ..add('provider', provider)
          ..add('resetPasswordSentAt', resetPasswordSentAt)
          ..add('resetPasswordToken', resetPasswordToken)
          ..add('role', role))
        .toString();
  }
}

class GdeleteDiscussion_PersonFieldsData_userBuilder
    implements
        Builder<
          GdeleteDiscussion_PersonFieldsData_user,
          GdeleteDiscussion_PersonFieldsData_userBuilder
        > {
  _$GdeleteDiscussion_PersonFieldsData_user? _$v;

  String? _G__typename;
  String? get G__typename => _$this._G__typename;
  set G__typename(String? G__typename) => _$this._G__typename = G__typename;

  DateTime? _confirmationSentAt;
  DateTime? get confirmationSentAt => _$this._confirmationSentAt;
  set confirmationSentAt(DateTime? confirmationSentAt) =>
      _$this._confirmationSentAt = confirmationSentAt;

  String? _confirmationToken;
  String? get confirmationToken => _$this._confirmationToken;
  set confirmationToken(String? confirmationToken) =>
      _$this._confirmationToken = confirmationToken;

  DateTime? _confirmedAt;
  DateTime? get confirmedAt => _$this._confirmedAt;
  set confirmedAt(DateTime? confirmedAt) => _$this._confirmedAt = confirmedAt;

  DateTime? _currentSignInAt;
  DateTime? get currentSignInAt => _$this._currentSignInAt;
  set currentSignInAt(DateTime? currentSignInAt) =>
      _$this._currentSignInAt = currentSignInAt;

  String? _currentSignInIp;
  String? get currentSignInIp => _$this._currentSignInIp;
  set currentSignInIp(String? currentSignInIp) =>
      _$this._currentSignInIp = currentSignInIp;

  bool? _disabled;
  bool? get disabled => _$this._disabled;
  set disabled(bool? disabled) => _$this._disabled = disabled;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  DateTime? _lastSignInAt;
  DateTime? get lastSignInAt => _$this._lastSignInAt;
  set lastSignInAt(DateTime? lastSignInAt) =>
      _$this._lastSignInAt = lastSignInAt;

  String? _lastSignInIp;
  String? get lastSignInIp => _$this._lastSignInIp;
  set lastSignInIp(String? lastSignInIp) => _$this._lastSignInIp = lastSignInIp;

  String? _locale;
  String? get locale => _$this._locale;
  set locale(String? locale) => _$this._locale = locale;

  int? _mediaSize;
  int? get mediaSize => _$this._mediaSize;
  set mediaSize(int? mediaSize) => _$this._mediaSize = mediaSize;

  String? _provider;
  String? get provider => _$this._provider;
  set provider(String? provider) => _$this._provider = provider;

  DateTime? _resetPasswordSentAt;
  DateTime? get resetPasswordSentAt => _$this._resetPasswordSentAt;
  set resetPasswordSentAt(DateTime? resetPasswordSentAt) =>
      _$this._resetPasswordSentAt = resetPasswordSentAt;

  String? _resetPasswordToken;
  String? get resetPasswordToken => _$this._resetPasswordToken;
  set resetPasswordToken(String? resetPasswordToken) =>
      _$this._resetPasswordToken = resetPasswordToken;

  _i2.GUserRole? _role;
  _i2.GUserRole? get role => _$this._role;
  set role(_i2.GUserRole? role) => _$this._role = role;

  GdeleteDiscussion_PersonFieldsData_userBuilder() {
    GdeleteDiscussion_PersonFieldsData_user._initializeBuilder(this);
  }

  GdeleteDiscussion_PersonFieldsData_userBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _G__typename = $v.G__typename;
      _confirmationSentAt = $v.confirmationSentAt;
      _confirmationToken = $v.confirmationToken;
      _confirmedAt = $v.confirmedAt;
      _currentSignInAt = $v.currentSignInAt;
      _currentSignInIp = $v.currentSignInIp;
      _disabled = $v.disabled;
      _email = $v.email;
      _id = $v.id;
      _lastSignInAt = $v.lastSignInAt;
      _lastSignInIp = $v.lastSignInIp;
      _locale = $v.locale;
      _mediaSize = $v.mediaSize;
      _provider = $v.provider;
      _resetPasswordSentAt = $v.resetPasswordSentAt;
      _resetPasswordToken = $v.resetPasswordToken;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GdeleteDiscussion_PersonFieldsData_user other) {
    _$v = other as _$GdeleteDiscussion_PersonFieldsData_user;
  }

  @override
  void update(
    void Function(GdeleteDiscussion_PersonFieldsData_userBuilder)? updates,
  ) {
    if (updates != null) updates(this);
  }

  @override
  GdeleteDiscussion_PersonFieldsData_user build() => _build();

  _$GdeleteDiscussion_PersonFieldsData_user _build() {
    final _$result =
        _$v ??
        _$GdeleteDiscussion_PersonFieldsData_user._(
          G__typename: BuiltValueNullFieldError.checkNotNull(
            G__typename,
            r'GdeleteDiscussion_PersonFieldsData_user',
            'G__typename',
          ),
          confirmationSentAt: confirmationSentAt,
          confirmationToken: confirmationToken,
          confirmedAt: confirmedAt,
          currentSignInAt: currentSignInAt,
          currentSignInIp: currentSignInIp,
          disabled: disabled,
          email: BuiltValueNullFieldError.checkNotNull(
            email,
            r'GdeleteDiscussion_PersonFieldsData_user',
            'email',
          ),
          id: id,
          lastSignInAt: lastSignInAt,
          lastSignInIp: lastSignInIp,
          locale: locale,
          mediaSize: mediaSize,
          provider: provider,
          resetPasswordSentAt: resetPasswordSentAt,
          resetPasswordToken: resetPasswordToken,
          role: role,
        );
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
